// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Checking adding a list 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(Component)>
    <Memo(Lists)
      addToDoListAC={[Function]}
      lists={
        Array [
          Object {
            "id": 1,
            "label": "Магазин",
            "toDoList": Array [],
          },
        ]
      }
      updateActiveTodoListIdAC={[Function]}
    >
      <div
        className="lists__close-wrapper null"
        onClick={[Function]}
      />
      <div
        className="lists null"
      >
        <input
          checked={false}
          className="hidden-menu-ticker"
          id="hmt"
          readOnly={true}
          type="checkbox"
        />
        <label
          className="btn-menu toggleMenu null"
          htmlFor="hmt"
          onClick={[Function]}
        >
          <span
            className="first"
          />
          <span
            className="second"
          />
          <span
            className="third"
          />
        </label>
        <h1
          className="lists_main"
          onClick={[Function]}
        >
          <ForwardRef(HomeIcon)>
            <WithStyles(ForwardRef(SvgIcon))>
              <ForwardRef(SvgIcon)
                classes={
                  Object {
                    "colorAction": "MuiSvgIcon-colorAction",
                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                    "colorError": "MuiSvgIcon-colorError",
                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                    "root": "MuiSvgIcon-root",
                  }
                }
              >
                <svg
                  aria-hidden={true}
                  className="MuiSvgIcon-root"
                  focusable="false"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z"
                  />
                </svg>
              </ForwardRef(SvgIcon)>
            </WithStyles(ForwardRef(SvgIcon))>
          </ForwardRef(HomeIcon)>
          <span>
            Главная
          </span>
        </h1>
        <h2
          className="lists__title"
        >
          <ForwardRef(FormatListBulletedIcon)>
            <WithStyles(ForwardRef(SvgIcon))>
              <ForwardRef(SvgIcon)
                classes={
                  Object {
                    "colorAction": "MuiSvgIcon-colorAction",
                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                    "colorError": "MuiSvgIcon-colorError",
                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                    "root": "MuiSvgIcon-root",
                  }
                }
              >
                <svg
                  aria-hidden={true}
                  className="MuiSvgIcon-root"
                  focusable="false"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M4 10.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm0-6c-.83 0-1.5.67-1.5 1.5S3.17 7.5 4 7.5 5.5 6.83 5.5 6 4.83 4.5 4 4.5zm0 12c-.83 0-1.5.68-1.5 1.5s.68 1.5 1.5 1.5 1.5-.68 1.5-1.5-.67-1.5-1.5-1.5zM7 19h14v-2H7v2zm0-6h14v-2H7v2zm0-8v2h14V5H7z"
                  />
                </svg>
              </ForwardRef(SvgIcon)>
            </WithStyles(ForwardRef(SvgIcon))>
          </ForwardRef(FormatListBulletedIcon)>
          <span>
            Списки:
          </span>
        </h2>
        <div
          className="lists__renderList null"
        >
          <Connect(Component)
            id={1}
            key="1"
            label="Магазин"
            needsDone={0}
            toggleDrawer={[Function]}
          >
            <Memo(List)
              activeToDoListId={null}
              deleteToDoListAC={[Function]}
              id={1}
              label="Магазин"
              needsDone={0}
              toggleDrawer={[Function]}
              updateActiveTodoListIdAC={[Function]}
              updateToDoListLabelAC={[Function]}
            >
              <div>
                <WithStyles(ForwardRef(ListItem))
                  button={true}
                  className="list__item"
                  onClick={[Function]}
                >
                  <ForwardRef(ListItem)
                    button={true}
                    className="list__item"
                    classes={
                      Object {
                        "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                        "button": "MuiListItem-button",
                        "container": "MuiListItem-container",
                        "dense": "MuiListItem-dense",
                        "disabled": "Mui-disabled",
                        "divider": "MuiListItem-divider",
                        "focusVisible": "Mui-focusVisible",
                        "gutters": "MuiListItem-gutters",
                        "root": "MuiListItem-root",
                        "secondaryAction": "MuiListItem-secondaryAction",
                        "selected": "Mui-selected",
                      }
                    }
                    onClick={[Function]}
                  >
                    <WithStyles(ForwardRef(ButtonBase))
                      className="MuiListItem-root list__item MuiListItem-gutters MuiListItem-button"
                      component="div"
                      disabled={false}
                      focusVisibleClassName="Mui-focusVisible"
                      onClick={[Function]}
                    >
                      <ForwardRef(ButtonBase)
                        className="MuiListItem-root list__item MuiListItem-gutters MuiListItem-button"
                        classes={
                          Object {
                            "disabled": "Mui-disabled",
                            "focusVisible": "Mui-focusVisible",
                            "root": "MuiButtonBase-root",
                          }
                        }
                        component="div"
                        disabled={false}
                        focusVisibleClassName="Mui-focusVisible"
                        onClick={[Function]}
                      >
                        <div
                          aria-disabled={false}
                          className="MuiButtonBase-root MuiListItem-root list__item MuiListItem-gutters MuiListItem-button"
                          onBlur={[Function]}
                          onClick={[Function]}
                          onDragLeave={[Function]}
                          onFocus={[Function]}
                          onKeyDown={[Function]}
                          onKeyUp={[Function]}
                          onMouseDown={[Function]}
                          onMouseLeave={[Function]}
                          onMouseUp={[Function]}
                          onTouchEnd={[Function]}
                          onTouchMove={[Function]}
                          onTouchStart={[Function]}
                          role="button"
                          tabIndex={0}
                        >
                          <div
                            key=".0"
                          >
                            Магазин
                          </div>
                          <div
                            className="list__wrapper__list__buttonMenu"
                            key=".1"
                          >
                            <WithStyles(ForwardRef(IconButton))
                              aria-controls="simple-menu"
                              aria-haspopup="true"
                              className="list__buttonMenu"
                              onClick={[Function]}
                            >
                              <ForwardRef(IconButton)
                                aria-controls="simple-menu"
                                aria-haspopup="true"
                                className="list__buttonMenu"
                                classes={
                                  Object {
                                    "colorInherit": "MuiIconButton-colorInherit",
                                    "colorPrimary": "MuiIconButton-colorPrimary",
                                    "colorSecondary": "MuiIconButton-colorSecondary",
                                    "disabled": "Mui-disabled",
                                    "edgeEnd": "MuiIconButton-edgeEnd",
                                    "edgeStart": "MuiIconButton-edgeStart",
                                    "label": "MuiIconButton-label",
                                    "root": "MuiIconButton-root",
                                    "sizeSmall": "MuiIconButton-sizeSmall",
                                  }
                                }
                                onClick={[Function]}
                              >
                                <WithStyles(ForwardRef(ButtonBase))
                                  aria-controls="simple-menu"
                                  aria-haspopup="true"
                                  centerRipple={true}
                                  className="MuiIconButton-root list__buttonMenu"
                                  disabled={false}
                                  focusRipple={true}
                                  onClick={[Function]}
                                >
                                  <ForwardRef(ButtonBase)
                                    aria-controls="simple-menu"
                                    aria-haspopup="true"
                                    centerRipple={true}
                                    className="MuiIconButton-root list__buttonMenu"
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "focusVisible": "Mui-focusVisible",
                                        "root": "MuiButtonBase-root",
                                      }
                                    }
                                    disabled={false}
                                    focusRipple={true}
                                    onClick={[Function]}
                                  >
                                    <button
                                      aria-controls="simple-menu"
                                      aria-haspopup="true"
                                      className="MuiButtonBase-root MuiIconButton-root list__buttonMenu"
                                      disabled={false}
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={0}
                                      type="button"
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <ForwardRef(MoreVertIcon)>
                                          <WithStyles(ForwardRef(SvgIcon))>
                                            <ForwardRef(SvgIcon)
                                              classes={
                                                Object {
                                                  "colorAction": "MuiSvgIcon-colorAction",
                                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                  "colorError": "MuiSvgIcon-colorError",
                                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                  "root": "MuiSvgIcon-root",
                                                }
                                              }
                                            >
                                              <svg
                                                aria-hidden={true}
                                                className="MuiSvgIcon-root"
                                                focusable="false"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                                />
                                              </svg>
                                            </ForwardRef(SvgIcon)>
                                          </WithStyles(ForwardRef(SvgIcon))>
                                        </ForwardRef(MoreVertIcon)>
                                      </span>
                                      <WithStyles(memo)
                                        center={true}
                                      >
                                        <ForwardRef(TouchRipple)
                                          center={true}
                                          classes={
                                            Object {
                                              "child": "MuiTouchRipple-child",
                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                              "ripple": "MuiTouchRipple-ripple",
                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                              "root": "MuiTouchRipple-root",
                                            }
                                          }
                                        >
                                          <span
                                            className="MuiTouchRipple-root"
                                          >
                                            <TransitionGroup
                                              childFactory={[Function]}
                                              component={null}
                                              exit={true}
                                            />
                                          </span>
                                        </ForwardRef(TouchRipple)>
                                      </WithStyles(memo)>
                                    </button>
                                  </ForwardRef(ButtonBase)>
                                </WithStyles(ForwardRef(ButtonBase))>
                              </ForwardRef(IconButton)>
                            </WithStyles(ForwardRef(IconButton))>
                            <WithStyles(ForwardRef(Menu))
                              TransitionComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "propTypes": Object {
                                    "children": [Function],
                                    "disableStrictModeCompat": [Function],
                                    "in": [Function],
                                    "onEnter": [Function],
                                    "onEntered": [Function],
                                    "onEntering": [Function],
                                    "onExit": [Function],
                                    "onExited": [Function],
                                    "onExiting": [Function],
                                    "style": [Function],
                                    "timeout": [Function],
                                  },
                                  "render": [Function],
                                }
                              }
                              anchorEl={null}
                              id="simple-menu"
                              keepMounted={true}
                              onClose={[Function]}
                              open={false}
                            >
                              <ForwardRef(Menu)
                                TransitionComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "propTypes": Object {
                                      "children": [Function],
                                      "disableStrictModeCompat": [Function],
                                      "in": [Function],
                                      "onEnter": [Function],
                                      "onEntered": [Function],
                                      "onEntering": [Function],
                                      "onExit": [Function],
                                      "onExited": [Function],
                                      "onExiting": [Function],
                                      "style": [Function],
                                      "timeout": [Function],
                                    },
                                    "render": [Function],
                                  }
                                }
                                anchorEl={null}
                                classes={
                                  Object {
                                    "list": "MuiMenu-list",
                                    "paper": "MuiMenu-paper",
                                  }
                                }
                                id="simple-menu"
                                keepMounted={true}
                                onClose={[Function]}
                                open={false}
                              >
                                <WithStyles(ForwardRef(Popover))
                                  PaperProps={
                                    Object {
                                      "classes": Object {
                                        "root": "MuiMenu-paper",
                                      },
                                    }
                                  }
                                  TransitionComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "propTypes": Object {
                                        "children": [Function],
                                        "disableStrictModeCompat": [Function],
                                        "in": [Function],
                                        "onEnter": [Function],
                                        "onEntered": [Function],
                                        "onEntering": [Function],
                                        "onExit": [Function],
                                        "onExited": [Function],
                                        "onExiting": [Function],
                                        "style": [Function],
                                        "timeout": [Function],
                                      },
                                      "render": [Function],
                                    }
                                  }
                                  TransitionProps={
                                    Object {
                                      "onEntering": [Function],
                                    }
                                  }
                                  anchorEl={null}
                                  anchorOrigin={
                                    Object {
                                      "horizontal": "left",
                                      "vertical": "top",
                                    }
                                  }
                                  getContentAnchorEl={[Function]}
                                  id="simple-menu"
                                  keepMounted={true}
                                  onClose={[Function]}
                                  open={false}
                                  transformOrigin={
                                    Object {
                                      "horizontal": "left",
                                      "vertical": "top",
                                    }
                                  }
                                  transitionDuration="auto"
                                >
                                  <ForwardRef(Popover)
                                    PaperProps={
                                      Object {
                                        "classes": Object {
                                          "root": "MuiMenu-paper",
                                        },
                                      }
                                    }
                                    TransitionComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "propTypes": Object {
                                          "children": [Function],
                                          "disableStrictModeCompat": [Function],
                                          "in": [Function],
                                          "onEnter": [Function],
                                          "onEntered": [Function],
                                          "onEntering": [Function],
                                          "onExit": [Function],
                                          "onExited": [Function],
                                          "onExiting": [Function],
                                          "style": [Function],
                                          "timeout": [Function],
                                        },
                                        "render": [Function],
                                      }
                                    }
                                    TransitionProps={
                                      Object {
                                        "onEntering": [Function],
                                      }
                                    }
                                    anchorEl={null}
                                    anchorOrigin={
                                      Object {
                                        "horizontal": "left",
                                        "vertical": "top",
                                      }
                                    }
                                    classes={
                                      Object {
                                        "paper": "MuiPopover-paper",
                                        "root": "MuiPopover-root",
                                      }
                                    }
                                    getContentAnchorEl={[Function]}
                                    id="simple-menu"
                                    keepMounted={true}
                                    onClose={[Function]}
                                    open={false}
                                    transformOrigin={
                                      Object {
                                        "horizontal": "left",
                                        "vertical": "top",
                                      }
                                    }
                                    transitionDuration="auto"
                                  >
                                    <ForwardRef(Modal)
                                      BackdropProps={
                                        Object {
                                          "invisible": true,
                                        }
                                      }
                                      className="MuiPopover-root"
                                      id="simple-menu"
                                      keepMounted={true}
                                      onClose={[Function]}
                                      open={false}
                                    >
                                      <ForwardRef(Portal)
                                        disablePortal={false}
                                      >
                                        <Portal
                                          containerInfo={
                                            <body>
                                              <div
                                                aria-hidden="true"
                                                class="MuiPopover-root"
                                                id="simple-menu"
                                                role="presentation"
                                                style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px; visibility: hidden;"
                                              >
                                                <div
                                                  data-test="sentinelStart"
                                                  tabindex="0"
                                                />
                                                <div
                                                  class="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                                  style="opacity: 0; visibility: hidden;"
                                                  tabindex="-1"
                                                >
                                                  <ul
                                                    class="MuiList-root MuiMenu-list MuiList-padding"
                                                    role="menu"
                                                    tabindex="-1"
                                                  >
                                                    <li
                                                      aria-disabled="false"
                                                      class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_edit MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                      role="menuitem"
                                                      tabindex="0"
                                                    >
                                                      Редактировать
                                                      <span
                                                        class="MuiTouchRipple-root"
                                                      />
                                                    </li>
                                                    <li
                                                      aria-disabled="false"
                                                      class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_delete MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                      role="menuitem"
                                                      tabindex="-1"
                                                    >
                                                      Удалить
                                                      <span
                                                        class="MuiTouchRipple-root"
                                                      />
                                                    </li>
                                                  </ul>
                                                </div>
                                                <div
                                                  data-test="sentinelEnd"
                                                  tabindex="0"
                                                />
                                              </div>
                                            </body>
                                          }
                                        >
                                          <div
                                            className="MuiPopover-root"
                                            id="simple-menu"
                                            onKeyDown={[Function]}
                                            role="presentation"
                                            style={
                                              Object {
                                                "bottom": 0,
                                                "left": 0,
                                                "position": "fixed",
                                                "right": 0,
                                                "top": 0,
                                                "visibility": "hidden",
                                                "zIndex": 1300,
                                              }
                                            }
                                          >
                                            <ForwardRef(SimpleBackdrop)
                                              invisible={true}
                                              onClick={[Function]}
                                              open={false}
                                            />
                                            <Unstable_TrapFocus
                                              disableAutoFocus={false}
                                              disableEnforceFocus={false}
                                              disableRestoreFocus={false}
                                              getDoc={[Function]}
                                              isEnabled={[Function]}
                                              open={false}
                                            >
                                              <div
                                                data-test="sentinelStart"
                                                tabIndex={0}
                                              />
                                              <ForwardRef(Fade)
                                                appear={true}
                                                in={false}
                                                onEnter={[Function]}
                                                onEntering={[Function]}
                                                onExited={[Function]}
                                                tabIndex="-1"
                                              >
                                                <Transition
                                                  appear={true}
                                                  enter={true}
                                                  exit={true}
                                                  in={false}
                                                  mountOnEnter={false}
                                                  onEnter={[Function]}
                                                  onEntered={[Function]}
                                                  onEntering={[Function]}
                                                  onExit={[Function]}
                                                  onExited={[Function]}
                                                  onExiting={[Function]}
                                                  tabIndex="-1"
                                                  timeout={
                                                    Object {
                                                      "enter": 225,
                                                      "exit": 195,
                                                    }
                                                  }
                                                  unmountOnExit={false}
                                                >
                                                  <WithStyles(ForwardRef(Paper))
                                                    className="MuiPopover-paper"
                                                    classes={
                                                      Object {
                                                        "root": "MuiMenu-paper",
                                                      }
                                                    }
                                                    elevation={8}
                                                    style={
                                                      Object {
                                                        "opacity": 0,
                                                        "visibility": "hidden",
                                                      }
                                                    }
                                                    tabIndex="-1"
                                                  >
                                                    <ForwardRef(Paper)
                                                      className="MuiPopover-paper"
                                                      classes={
                                                        Object {
                                                          "elevation0": "MuiPaper-elevation0",
                                                          "elevation1": "MuiPaper-elevation1",
                                                          "elevation10": "MuiPaper-elevation10",
                                                          "elevation11": "MuiPaper-elevation11",
                                                          "elevation12": "MuiPaper-elevation12",
                                                          "elevation13": "MuiPaper-elevation13",
                                                          "elevation14": "MuiPaper-elevation14",
                                                          "elevation15": "MuiPaper-elevation15",
                                                          "elevation16": "MuiPaper-elevation16",
                                                          "elevation17": "MuiPaper-elevation17",
                                                          "elevation18": "MuiPaper-elevation18",
                                                          "elevation19": "MuiPaper-elevation19",
                                                          "elevation2": "MuiPaper-elevation2",
                                                          "elevation20": "MuiPaper-elevation20",
                                                          "elevation21": "MuiPaper-elevation21",
                                                          "elevation22": "MuiPaper-elevation22",
                                                          "elevation23": "MuiPaper-elevation23",
                                                          "elevation24": "MuiPaper-elevation24",
                                                          "elevation3": "MuiPaper-elevation3",
                                                          "elevation4": "MuiPaper-elevation4",
                                                          "elevation5": "MuiPaper-elevation5",
                                                          "elevation6": "MuiPaper-elevation6",
                                                          "elevation7": "MuiPaper-elevation7",
                                                          "elevation8": "MuiPaper-elevation8",
                                                          "elevation9": "MuiPaper-elevation9",
                                                          "outlined": "MuiPaper-outlined",
                                                          "root": "MuiPaper-root MuiMenu-paper",
                                                          "rounded": "MuiPaper-rounded",
                                                        }
                                                      }
                                                      elevation={8}
                                                      style={
                                                        Object {
                                                          "opacity": 0,
                                                          "visibility": "hidden",
                                                        }
                                                      }
                                                      tabIndex="-1"
                                                    >
                                                      <div
                                                        className="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                                        style={
                                                          Object {
                                                            "opacity": 0,
                                                            "visibility": "hidden",
                                                          }
                                                        }
                                                        tabIndex="-1"
                                                      >
                                                        <ForwardRef(MenuList)
                                                          actions={
                                                            Object {
                                                              "current": Object {
                                                                "adjustStyleForScrollbar": [Function],
                                                              },
                                                            }
                                                          }
                                                          autoFocus={false}
                                                          autoFocusItem={false}
                                                          className="MuiMenu-list"
                                                          onKeyDown={[Function]}
                                                          variant="selectedMenu"
                                                        >
                                                          <WithStyles(ForwardRef(List))
                                                            className="MuiMenu-list"
                                                            onKeyDown={[Function]}
                                                            role="menu"
                                                            tabIndex={-1}
                                                          >
                                                            <ForwardRef(List)
                                                              className="MuiMenu-list"
                                                              classes={
                                                                Object {
                                                                  "dense": "MuiList-dense",
                                                                  "padding": "MuiList-padding",
                                                                  "root": "MuiList-root",
                                                                  "subheader": "MuiList-subheader",
                                                                }
                                                              }
                                                              onKeyDown={[Function]}
                                                              role="menu"
                                                              tabIndex={-1}
                                                            >
                                                              <ul
                                                                className="MuiList-root MuiMenu-list MuiList-padding"
                                                                onKeyDown={[Function]}
                                                                role="menu"
                                                                tabIndex={-1}
                                                              >
                                                                <WithStyles(ForwardRef(MenuItem))
                                                                  className="ListItem_edit"
                                                                  key=".$.0"
                                                                  onClick={[Function]}
                                                                  tabIndex={0}
                                                                >
                                                                  <ForwardRef(MenuItem)
                                                                    className="ListItem_edit"
                                                                    classes={
                                                                      Object {
                                                                        "dense": "MuiMenuItem-dense",
                                                                        "gutters": "MuiMenuItem-gutters",
                                                                        "root": "MuiMenuItem-root",
                                                                        "selected": "Mui-selected",
                                                                      }
                                                                    }
                                                                    onClick={[Function]}
                                                                    tabIndex={0}
                                                                  >
                                                                    <WithStyles(ForwardRef(ListItem))
                                                                      button={true}
                                                                      className="MuiMenuItem-root ListItem_edit MuiMenuItem-gutters"
                                                                      classes={
                                                                        Object {
                                                                          "dense": "MuiMenuItem-dense",
                                                                        }
                                                                      }
                                                                      component="li"
                                                                      disableGutters={false}
                                                                      onClick={[Function]}
                                                                      role="menuitem"
                                                                      tabIndex={0}
                                                                    >
                                                                      <ForwardRef(ListItem)
                                                                        button={true}
                                                                        className="MuiMenuItem-root ListItem_edit MuiMenuItem-gutters"
                                                                        classes={
                                                                          Object {
                                                                            "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                                            "button": "MuiListItem-button",
                                                                            "container": "MuiListItem-container",
                                                                            "dense": "MuiListItem-dense MuiMenuItem-dense",
                                                                            "disabled": "Mui-disabled",
                                                                            "divider": "MuiListItem-divider",
                                                                            "focusVisible": "Mui-focusVisible",
                                                                            "gutters": "MuiListItem-gutters",
                                                                            "root": "MuiListItem-root",
                                                                            "secondaryAction": "MuiListItem-secondaryAction",
                                                                            "selected": "Mui-selected",
                                                                          }
                                                                        }
                                                                        component="li"
                                                                        disableGutters={false}
                                                                        onClick={[Function]}
                                                                        role="menuitem"
                                                                        tabIndex={0}
                                                                      >
                                                                        <WithStyles(ForwardRef(ButtonBase))
                                                                          className="MuiListItem-root MuiMenuItem-root ListItem_edit MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                          component="li"
                                                                          disabled={false}
                                                                          focusVisibleClassName="Mui-focusVisible"
                                                                          onClick={[Function]}
                                                                          role="menuitem"
                                                                          tabIndex={0}
                                                                        >
                                                                          <ForwardRef(ButtonBase)
                                                                            className="MuiListItem-root MuiMenuItem-root ListItem_edit MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                            classes={
                                                                              Object {
                                                                                "disabled": "Mui-disabled",
                                                                                "focusVisible": "Mui-focusVisible",
                                                                                "root": "MuiButtonBase-root",
                                                                              }
                                                                            }
                                                                            component="li"
                                                                            disabled={false}
                                                                            focusVisibleClassName="Mui-focusVisible"
                                                                            onClick={[Function]}
                                                                            role="menuitem"
                                                                            tabIndex={0}
                                                                          >
                                                                            <li
                                                                              aria-disabled={false}
                                                                              className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_edit MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                              onBlur={[Function]}
                                                                              onClick={[Function]}
                                                                              onDragLeave={[Function]}
                                                                              onFocus={[Function]}
                                                                              onKeyDown={[Function]}
                                                                              onKeyUp={[Function]}
                                                                              onMouseDown={[Function]}
                                                                              onMouseLeave={[Function]}
                                                                              onMouseUp={[Function]}
                                                                              onTouchEnd={[Function]}
                                                                              onTouchMove={[Function]}
                                                                              onTouchStart={[Function]}
                                                                              role="menuitem"
                                                                              tabIndex={0}
                                                                            >
                                                                              Редактировать
                                                                              <WithStyles(memo)
                                                                                center={false}
                                                                              >
                                                                                <ForwardRef(TouchRipple)
                                                                                  center={false}
                                                                                  classes={
                                                                                    Object {
                                                                                      "child": "MuiTouchRipple-child",
                                                                                      "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                      "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                      "ripple": "MuiTouchRipple-ripple",
                                                                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                      "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                      "root": "MuiTouchRipple-root",
                                                                                    }
                                                                                  }
                                                                                >
                                                                                  <span
                                                                                    className="MuiTouchRipple-root"
                                                                                  >
                                                                                    <TransitionGroup
                                                                                      childFactory={[Function]}
                                                                                      component={null}
                                                                                      exit={true}
                                                                                    />
                                                                                  </span>
                                                                                </ForwardRef(TouchRipple)>
                                                                              </WithStyles(memo)>
                                                                            </li>
                                                                          </ForwardRef(ButtonBase)>
                                                                        </WithStyles(ForwardRef(ButtonBase))>
                                                                      </ForwardRef(ListItem)>
                                                                    </WithStyles(ForwardRef(ListItem))>
                                                                  </ForwardRef(MenuItem)>
                                                                </WithStyles(ForwardRef(MenuItem))>
                                                                <WithStyles(ForwardRef(MenuItem))
                                                                  className="ListItem_delete"
                                                                  key=".$.1"
                                                                  onClick={[Function]}
                                                                >
                                                                  <ForwardRef(MenuItem)
                                                                    className="ListItem_delete"
                                                                    classes={
                                                                      Object {
                                                                        "dense": "MuiMenuItem-dense",
                                                                        "gutters": "MuiMenuItem-gutters",
                                                                        "root": "MuiMenuItem-root",
                                                                        "selected": "Mui-selected",
                                                                      }
                                                                    }
                                                                    onClick={[Function]}
                                                                  >
                                                                    <WithStyles(ForwardRef(ListItem))
                                                                      button={true}
                                                                      className="MuiMenuItem-root ListItem_delete MuiMenuItem-gutters"
                                                                      classes={
                                                                        Object {
                                                                          "dense": "MuiMenuItem-dense",
                                                                        }
                                                                      }
                                                                      component="li"
                                                                      disableGutters={false}
                                                                      onClick={[Function]}
                                                                      role="menuitem"
                                                                      tabIndex={-1}
                                                                    >
                                                                      <ForwardRef(ListItem)
                                                                        button={true}
                                                                        className="MuiMenuItem-root ListItem_delete MuiMenuItem-gutters"
                                                                        classes={
                                                                          Object {
                                                                            "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                                            "button": "MuiListItem-button",
                                                                            "container": "MuiListItem-container",
                                                                            "dense": "MuiListItem-dense MuiMenuItem-dense",
                                                                            "disabled": "Mui-disabled",
                                                                            "divider": "MuiListItem-divider",
                                                                            "focusVisible": "Mui-focusVisible",
                                                                            "gutters": "MuiListItem-gutters",
                                                                            "root": "MuiListItem-root",
                                                                            "secondaryAction": "MuiListItem-secondaryAction",
                                                                            "selected": "Mui-selected",
                                                                          }
                                                                        }
                                                                        component="li"
                                                                        disableGutters={false}
                                                                        onClick={[Function]}
                                                                        role="menuitem"
                                                                        tabIndex={-1}
                                                                      >
                                                                        <WithStyles(ForwardRef(ButtonBase))
                                                                          className="MuiListItem-root MuiMenuItem-root ListItem_delete MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                          component="li"
                                                                          disabled={false}
                                                                          focusVisibleClassName="Mui-focusVisible"
                                                                          onClick={[Function]}
                                                                          role="menuitem"
                                                                          tabIndex={-1}
                                                                        >
                                                                          <ForwardRef(ButtonBase)
                                                                            className="MuiListItem-root MuiMenuItem-root ListItem_delete MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                            classes={
                                                                              Object {
                                                                                "disabled": "Mui-disabled",
                                                                                "focusVisible": "Mui-focusVisible",
                                                                                "root": "MuiButtonBase-root",
                                                                              }
                                                                            }
                                                                            component="li"
                                                                            disabled={false}
                                                                            focusVisibleClassName="Mui-focusVisible"
                                                                            onClick={[Function]}
                                                                            role="menuitem"
                                                                            tabIndex={-1}
                                                                          >
                                                                            <li
                                                                              aria-disabled={false}
                                                                              className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_delete MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                              onBlur={[Function]}
                                                                              onClick={[Function]}
                                                                              onDragLeave={[Function]}
                                                                              onFocus={[Function]}
                                                                              onKeyDown={[Function]}
                                                                              onKeyUp={[Function]}
                                                                              onMouseDown={[Function]}
                                                                              onMouseLeave={[Function]}
                                                                              onMouseUp={[Function]}
                                                                              onTouchEnd={[Function]}
                                                                              onTouchMove={[Function]}
                                                                              onTouchStart={[Function]}
                                                                              role="menuitem"
                                                                              tabIndex={-1}
                                                                            >
                                                                              Удалить
                                                                              <WithStyles(memo)
                                                                                center={false}
                                                                              >
                                                                                <ForwardRef(TouchRipple)
                                                                                  center={false}
                                                                                  classes={
                                                                                    Object {
                                                                                      "child": "MuiTouchRipple-child",
                                                                                      "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                      "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                      "ripple": "MuiTouchRipple-ripple",
                                                                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                      "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                      "root": "MuiTouchRipple-root",
                                                                                    }
                                                                                  }
                                                                                >
                                                                                  <span
                                                                                    className="MuiTouchRipple-root"
                                                                                  >
                                                                                    <TransitionGroup
                                                                                      childFactory={[Function]}
                                                                                      component={null}
                                                                                      exit={true}
                                                                                    />
                                                                                  </span>
                                                                                </ForwardRef(TouchRipple)>
                                                                              </WithStyles(memo)>
                                                                            </li>
                                                                          </ForwardRef(ButtonBase)>
                                                                        </WithStyles(ForwardRef(ButtonBase))>
                                                                      </ForwardRef(ListItem)>
                                                                    </WithStyles(ForwardRef(ListItem))>
                                                                  </ForwardRef(MenuItem)>
                                                                </WithStyles(ForwardRef(MenuItem))>
                                                              </ul>
                                                            </ForwardRef(List)>
                                                          </WithStyles(ForwardRef(List))>
                                                        </ForwardRef(MenuList)>
                                                      </div>
                                                    </ForwardRef(Paper)>
                                                  </WithStyles(ForwardRef(Paper))>
                                                </Transition>
                                              </ForwardRef(Fade)>
                                              <div
                                                data-test="sentinelEnd"
                                                tabIndex={0}
                                              />
                                            </Unstable_TrapFocus>
                                          </div>
                                        </Portal>
                                      </ForwardRef(Portal)>
                                    </ForwardRef(Modal)>
                                  </ForwardRef(Popover)>
                                </WithStyles(ForwardRef(Popover))>
                              </ForwardRef(Menu)>
                            </WithStyles(ForwardRef(Menu))>
                          </div>
                          <WithStyles(memo)
                            center={false}
                          >
                            <ForwardRef(TouchRipple)
                              center={false}
                              classes={
                                Object {
                                  "child": "MuiTouchRipple-child",
                                  "childLeaving": "MuiTouchRipple-childLeaving",
                                  "childPulsate": "MuiTouchRipple-childPulsate",
                                  "ripple": "MuiTouchRipple-ripple",
                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                  "rippleVisible": "MuiTouchRipple-rippleVisible",
                                  "root": "MuiTouchRipple-root",
                                }
                              }
                            >
                              <span
                                className="MuiTouchRipple-root"
                              >
                                <TransitionGroup
                                  childFactory={[Function]}
                                  component={null}
                                  exit={true}
                                />
                              </span>
                            </ForwardRef(TouchRipple)>
                          </WithStyles(memo)>
                        </div>
                      </ForwardRef(ButtonBase)>
                    </WithStyles(ForwardRef(ButtonBase))>
                  </ForwardRef(ListItem)>
                </WithStyles(ForwardRef(ListItem))>
              </div>
            </Memo(List)>
          </Connect(Component)>
        </div>
        <div
          className="lists__addListButton"
          onClick={[Function]}
        >
          <WithStyles(ForwardRef(IconButton))
            aria-label="add List"
            color="inherit"
          >
            <ForwardRef(IconButton)
              aria-label="add List"
              classes={
                Object {
                  "colorInherit": "MuiIconButton-colorInherit",
                  "colorPrimary": "MuiIconButton-colorPrimary",
                  "colorSecondary": "MuiIconButton-colorSecondary",
                  "disabled": "Mui-disabled",
                  "edgeEnd": "MuiIconButton-edgeEnd",
                  "edgeStart": "MuiIconButton-edgeStart",
                  "label": "MuiIconButton-label",
                  "root": "MuiIconButton-root",
                  "sizeSmall": "MuiIconButton-sizeSmall",
                }
              }
              color="inherit"
            >
              <WithStyles(ForwardRef(ButtonBase))
                aria-label="add List"
                centerRipple={true}
                className="MuiIconButton-root MuiIconButton-colorInherit"
                disabled={false}
                focusRipple={true}
              >
                <ForwardRef(ButtonBase)
                  aria-label="add List"
                  centerRipple={true}
                  className="MuiIconButton-root MuiIconButton-colorInherit"
                  classes={
                    Object {
                      "disabled": "Mui-disabled",
                      "focusVisible": "Mui-focusVisible",
                      "root": "MuiButtonBase-root",
                    }
                  }
                  disabled={false}
                  focusRipple={true}
                >
                  <button
                    aria-label="add List"
                    className="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit"
                    disabled={false}
                    onBlur={[Function]}
                    onDragLeave={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    onKeyUp={[Function]}
                    onMouseDown={[Function]}
                    onMouseLeave={[Function]}
                    onMouseUp={[Function]}
                    onTouchEnd={[Function]}
                    onTouchMove={[Function]}
                    onTouchStart={[Function]}
                    tabIndex={0}
                    type="button"
                  >
                    <span
                      className="MuiIconButton-label"
                    >
                      <ForwardRef(PlaylistAddIcon)
                        fontSize="medium"
                      >
                        <WithStyles(ForwardRef(SvgIcon))
                          fontSize="medium"
                        >
                          <ForwardRef(SvgIcon)
                            classes={
                              Object {
                                "colorAction": "MuiSvgIcon-colorAction",
                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                "colorError": "MuiSvgIcon-colorError",
                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                "root": "MuiSvgIcon-root",
                              }
                            }
                            fontSize="medium"
                          >
                            <svg
                              aria-hidden={true}
                              className="MuiSvgIcon-root"
                              focusable="false"
                              viewBox="0 0 24 24"
                            >
                              <path
                                d="M14 10H2v2h12v-2zm0-4H2v2h12V6zm4 8v-4h-2v4h-4v2h4v4h2v-4h4v-2h-4zM2 16h8v-2H2v2z"
                              />
                            </svg>
                          </ForwardRef(SvgIcon)>
                        </WithStyles(ForwardRef(SvgIcon))>
                      </ForwardRef(PlaylistAddIcon)>
                    </span>
                    <WithStyles(memo)
                      center={true}
                    >
                      <ForwardRef(TouchRipple)
                        center={true}
                        classes={
                          Object {
                            "child": "MuiTouchRipple-child",
                            "childLeaving": "MuiTouchRipple-childLeaving",
                            "childPulsate": "MuiTouchRipple-childPulsate",
                            "ripple": "MuiTouchRipple-ripple",
                            "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                            "rippleVisible": "MuiTouchRipple-rippleVisible",
                            "root": "MuiTouchRipple-root",
                          }
                        }
                      >
                        <span
                          className="MuiTouchRipple-root"
                        >
                          <TransitionGroup
                            childFactory={[Function]}
                            component={null}
                            exit={true}
                          />
                        </span>
                      </ForwardRef(TouchRipple)>
                    </WithStyles(memo)>
                  </button>
                </ForwardRef(ButtonBase)>
              </WithStyles(ForwardRef(ButtonBase))>
            </ForwardRef(IconButton)>
          </WithStyles(ForwardRef(IconButton))>
          <span>
            Добавить список
          </span>
        </div>
      </div>
    </Memo(Lists)>
  </Connect(Component)>
</Provider>
`;

exports[`Checking adding a list 2`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(Component)>
    <Memo(Lists)
      addToDoListAC={[Function]}
      lists={
        Array [
          Object {
            "id": 1,
            "label": "Магазин",
            "toDoList": Array [],
          },
        ]
      }
      updateActiveTodoListIdAC={[Function]}
    >
      <div
        className="lists__close-wrapper null"
        onClick={[Function]}
      />
      <div
        className="lists null"
      >
        <input
          checked={false}
          className="hidden-menu-ticker"
          id="hmt"
          readOnly={true}
          type="checkbox"
        />
        <label
          className="btn-menu toggleMenu null"
          htmlFor="hmt"
          onClick={[Function]}
        >
          <span
            className="first"
          />
          <span
            className="second"
          />
          <span
            className="third"
          />
        </label>
        <h1
          className="lists_main"
          onClick={[Function]}
        >
          <ForwardRef(HomeIcon)>
            <WithStyles(ForwardRef(SvgIcon))>
              <ForwardRef(SvgIcon)
                classes={
                  Object {
                    "colorAction": "MuiSvgIcon-colorAction",
                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                    "colorError": "MuiSvgIcon-colorError",
                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                    "root": "MuiSvgIcon-root",
                  }
                }
              >
                <svg
                  aria-hidden={true}
                  className="MuiSvgIcon-root"
                  focusable="false"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z"
                  />
                </svg>
              </ForwardRef(SvgIcon)>
            </WithStyles(ForwardRef(SvgIcon))>
          </ForwardRef(HomeIcon)>
          <span>
            Главная
          </span>
        </h1>
        <h2
          className="lists__title"
        >
          <ForwardRef(FormatListBulletedIcon)>
            <WithStyles(ForwardRef(SvgIcon))>
              <ForwardRef(SvgIcon)
                classes={
                  Object {
                    "colorAction": "MuiSvgIcon-colorAction",
                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                    "colorError": "MuiSvgIcon-colorError",
                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                    "root": "MuiSvgIcon-root",
                  }
                }
              >
                <svg
                  aria-hidden={true}
                  className="MuiSvgIcon-root"
                  focusable="false"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M4 10.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm0-6c-.83 0-1.5.67-1.5 1.5S3.17 7.5 4 7.5 5.5 6.83 5.5 6 4.83 4.5 4 4.5zm0 12c-.83 0-1.5.68-1.5 1.5s.68 1.5 1.5 1.5 1.5-.68 1.5-1.5-.67-1.5-1.5-1.5zM7 19h14v-2H7v2zm0-6h14v-2H7v2zm0-8v2h14V5H7z"
                  />
                </svg>
              </ForwardRef(SvgIcon)>
            </WithStyles(ForwardRef(SvgIcon))>
          </ForwardRef(FormatListBulletedIcon)>
          <span>
            Списки:
          </span>
        </h2>
        <div
          className="lists__renderList null"
        >
          <Connect(Component)
            id={1}
            key="1"
            label="Магазин"
            needsDone={0}
            toggleDrawer={[Function]}
          >
            <Memo(List)
              activeToDoListId={null}
              deleteToDoListAC={[Function]}
              id={1}
              label="Магазин"
              needsDone={0}
              toggleDrawer={[Function]}
              updateActiveTodoListIdAC={[Function]}
              updateToDoListLabelAC={[Function]}
            >
              <div>
                <WithStyles(ForwardRef(ListItem))
                  button={true}
                  className="list__item"
                  onClick={[Function]}
                >
                  <ForwardRef(ListItem)
                    button={true}
                    className="list__item"
                    classes={
                      Object {
                        "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                        "button": "MuiListItem-button",
                        "container": "MuiListItem-container",
                        "dense": "MuiListItem-dense",
                        "disabled": "Mui-disabled",
                        "divider": "MuiListItem-divider",
                        "focusVisible": "Mui-focusVisible",
                        "gutters": "MuiListItem-gutters",
                        "root": "MuiListItem-root",
                        "secondaryAction": "MuiListItem-secondaryAction",
                        "selected": "Mui-selected",
                      }
                    }
                    onClick={[Function]}
                  >
                    <WithStyles(ForwardRef(ButtonBase))
                      className="MuiListItem-root list__item MuiListItem-gutters MuiListItem-button"
                      component="div"
                      disabled={false}
                      focusVisibleClassName="Mui-focusVisible"
                      onClick={[Function]}
                    >
                      <ForwardRef(ButtonBase)
                        className="MuiListItem-root list__item MuiListItem-gutters MuiListItem-button"
                        classes={
                          Object {
                            "disabled": "Mui-disabled",
                            "focusVisible": "Mui-focusVisible",
                            "root": "MuiButtonBase-root",
                          }
                        }
                        component="div"
                        disabled={false}
                        focusVisibleClassName="Mui-focusVisible"
                        onClick={[Function]}
                      >
                        <div
                          aria-disabled={false}
                          className="MuiButtonBase-root MuiListItem-root list__item MuiListItem-gutters MuiListItem-button"
                          onBlur={[Function]}
                          onClick={[Function]}
                          onDragLeave={[Function]}
                          onFocus={[Function]}
                          onKeyDown={[Function]}
                          onKeyUp={[Function]}
                          onMouseDown={[Function]}
                          onMouseLeave={[Function]}
                          onMouseUp={[Function]}
                          onTouchEnd={[Function]}
                          onTouchMove={[Function]}
                          onTouchStart={[Function]}
                          role="button"
                          tabIndex={0}
                        >
                          <div
                            key=".0"
                          >
                            Магазин
                          </div>
                          <div
                            className="list__wrapper__list__buttonMenu"
                            key=".1"
                          >
                            <WithStyles(ForwardRef(IconButton))
                              aria-controls="simple-menu"
                              aria-haspopup="true"
                              className="list__buttonMenu"
                              onClick={[Function]}
                            >
                              <ForwardRef(IconButton)
                                aria-controls="simple-menu"
                                aria-haspopup="true"
                                className="list__buttonMenu"
                                classes={
                                  Object {
                                    "colorInherit": "MuiIconButton-colorInherit",
                                    "colorPrimary": "MuiIconButton-colorPrimary",
                                    "colorSecondary": "MuiIconButton-colorSecondary",
                                    "disabled": "Mui-disabled",
                                    "edgeEnd": "MuiIconButton-edgeEnd",
                                    "edgeStart": "MuiIconButton-edgeStart",
                                    "label": "MuiIconButton-label",
                                    "root": "MuiIconButton-root",
                                    "sizeSmall": "MuiIconButton-sizeSmall",
                                  }
                                }
                                onClick={[Function]}
                              >
                                <WithStyles(ForwardRef(ButtonBase))
                                  aria-controls="simple-menu"
                                  aria-haspopup="true"
                                  centerRipple={true}
                                  className="MuiIconButton-root list__buttonMenu"
                                  disabled={false}
                                  focusRipple={true}
                                  onClick={[Function]}
                                >
                                  <ForwardRef(ButtonBase)
                                    aria-controls="simple-menu"
                                    aria-haspopup="true"
                                    centerRipple={true}
                                    className="MuiIconButton-root list__buttonMenu"
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "focusVisible": "Mui-focusVisible",
                                        "root": "MuiButtonBase-root",
                                      }
                                    }
                                    disabled={false}
                                    focusRipple={true}
                                    onClick={[Function]}
                                  >
                                    <button
                                      aria-controls="simple-menu"
                                      aria-haspopup="true"
                                      className="MuiButtonBase-root MuiIconButton-root list__buttonMenu"
                                      disabled={false}
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={0}
                                      type="button"
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <ForwardRef(MoreVertIcon)>
                                          <WithStyles(ForwardRef(SvgIcon))>
                                            <ForwardRef(SvgIcon)
                                              classes={
                                                Object {
                                                  "colorAction": "MuiSvgIcon-colorAction",
                                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                  "colorError": "MuiSvgIcon-colorError",
                                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                  "root": "MuiSvgIcon-root",
                                                }
                                              }
                                            >
                                              <svg
                                                aria-hidden={true}
                                                className="MuiSvgIcon-root"
                                                focusable="false"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                                />
                                              </svg>
                                            </ForwardRef(SvgIcon)>
                                          </WithStyles(ForwardRef(SvgIcon))>
                                        </ForwardRef(MoreVertIcon)>
                                      </span>
                                      <WithStyles(memo)
                                        center={true}
                                      >
                                        <ForwardRef(TouchRipple)
                                          center={true}
                                          classes={
                                            Object {
                                              "child": "MuiTouchRipple-child",
                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                              "ripple": "MuiTouchRipple-ripple",
                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                              "root": "MuiTouchRipple-root",
                                            }
                                          }
                                        >
                                          <span
                                            className="MuiTouchRipple-root"
                                          >
                                            <TransitionGroup
                                              childFactory={[Function]}
                                              component={null}
                                              exit={true}
                                            />
                                          </span>
                                        </ForwardRef(TouchRipple)>
                                      </WithStyles(memo)>
                                    </button>
                                  </ForwardRef(ButtonBase)>
                                </WithStyles(ForwardRef(ButtonBase))>
                              </ForwardRef(IconButton)>
                            </WithStyles(ForwardRef(IconButton))>
                            <WithStyles(ForwardRef(Menu))
                              TransitionComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "propTypes": Object {
                                    "children": [Function],
                                    "disableStrictModeCompat": [Function],
                                    "in": [Function],
                                    "onEnter": [Function],
                                    "onEntered": [Function],
                                    "onEntering": [Function],
                                    "onExit": [Function],
                                    "onExited": [Function],
                                    "onExiting": [Function],
                                    "style": [Function],
                                    "timeout": [Function],
                                  },
                                  "render": [Function],
                                }
                              }
                              anchorEl={null}
                              id="simple-menu"
                              keepMounted={true}
                              onClose={[Function]}
                              open={false}
                            >
                              <ForwardRef(Menu)
                                TransitionComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "propTypes": Object {
                                      "children": [Function],
                                      "disableStrictModeCompat": [Function],
                                      "in": [Function],
                                      "onEnter": [Function],
                                      "onEntered": [Function],
                                      "onEntering": [Function],
                                      "onExit": [Function],
                                      "onExited": [Function],
                                      "onExiting": [Function],
                                      "style": [Function],
                                      "timeout": [Function],
                                    },
                                    "render": [Function],
                                  }
                                }
                                anchorEl={null}
                                classes={
                                  Object {
                                    "list": "MuiMenu-list",
                                    "paper": "MuiMenu-paper",
                                  }
                                }
                                id="simple-menu"
                                keepMounted={true}
                                onClose={[Function]}
                                open={false}
                              >
                                <WithStyles(ForwardRef(Popover))
                                  PaperProps={
                                    Object {
                                      "classes": Object {
                                        "root": "MuiMenu-paper",
                                      },
                                    }
                                  }
                                  TransitionComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "propTypes": Object {
                                        "children": [Function],
                                        "disableStrictModeCompat": [Function],
                                        "in": [Function],
                                        "onEnter": [Function],
                                        "onEntered": [Function],
                                        "onEntering": [Function],
                                        "onExit": [Function],
                                        "onExited": [Function],
                                        "onExiting": [Function],
                                        "style": [Function],
                                        "timeout": [Function],
                                      },
                                      "render": [Function],
                                    }
                                  }
                                  TransitionProps={
                                    Object {
                                      "onEntering": [Function],
                                    }
                                  }
                                  anchorEl={null}
                                  anchorOrigin={
                                    Object {
                                      "horizontal": "left",
                                      "vertical": "top",
                                    }
                                  }
                                  getContentAnchorEl={[Function]}
                                  id="simple-menu"
                                  keepMounted={true}
                                  onClose={[Function]}
                                  open={false}
                                  transformOrigin={
                                    Object {
                                      "horizontal": "left",
                                      "vertical": "top",
                                    }
                                  }
                                  transitionDuration="auto"
                                >
                                  <ForwardRef(Popover)
                                    PaperProps={
                                      Object {
                                        "classes": Object {
                                          "root": "MuiMenu-paper",
                                        },
                                      }
                                    }
                                    TransitionComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "propTypes": Object {
                                          "children": [Function],
                                          "disableStrictModeCompat": [Function],
                                          "in": [Function],
                                          "onEnter": [Function],
                                          "onEntered": [Function],
                                          "onEntering": [Function],
                                          "onExit": [Function],
                                          "onExited": [Function],
                                          "onExiting": [Function],
                                          "style": [Function],
                                          "timeout": [Function],
                                        },
                                        "render": [Function],
                                      }
                                    }
                                    TransitionProps={
                                      Object {
                                        "onEntering": [Function],
                                      }
                                    }
                                    anchorEl={null}
                                    anchorOrigin={
                                      Object {
                                        "horizontal": "left",
                                        "vertical": "top",
                                      }
                                    }
                                    classes={
                                      Object {
                                        "paper": "MuiPopover-paper",
                                        "root": "MuiPopover-root",
                                      }
                                    }
                                    getContentAnchorEl={[Function]}
                                    id="simple-menu"
                                    keepMounted={true}
                                    onClose={[Function]}
                                    open={false}
                                    transformOrigin={
                                      Object {
                                        "horizontal": "left",
                                        "vertical": "top",
                                      }
                                    }
                                    transitionDuration="auto"
                                  >
                                    <ForwardRef(Modal)
                                      BackdropProps={
                                        Object {
                                          "invisible": true,
                                        }
                                      }
                                      className="MuiPopover-root"
                                      id="simple-menu"
                                      keepMounted={true}
                                      onClose={[Function]}
                                      open={false}
                                    >
                                      <ForwardRef(Portal)
                                        disablePortal={false}
                                      >
                                        <Portal
                                          containerInfo={
                                            <body
                                              style="padding-right: 0px; overflow: hidden;"
                                            >
                                              <div
                                                aria-hidden="true"
                                                class="MuiPopover-root"
                                                id="simple-menu"
                                                role="presentation"
                                                style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px; visibility: hidden;"
                                              >
                                                <div
                                                  data-test="sentinelStart"
                                                  tabindex="0"
                                                />
                                                <div
                                                  class="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                                  style="opacity: 0; visibility: hidden;"
                                                  tabindex="-1"
                                                >
                                                  <ul
                                                    class="MuiList-root MuiMenu-list MuiList-padding"
                                                    role="menu"
                                                    tabindex="-1"
                                                  >
                                                    <li
                                                      aria-disabled="false"
                                                      class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_edit MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                      role="menuitem"
                                                      tabindex="0"
                                                    >
                                                      Редактировать
                                                      <span
                                                        class="MuiTouchRipple-root"
                                                      />
                                                    </li>
                                                    <li
                                                      aria-disabled="false"
                                                      class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_delete MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                      role="menuitem"
                                                      tabindex="-1"
                                                    >
                                                      Удалить
                                                      <span
                                                        class="MuiTouchRipple-root"
                                                      />
                                                    </li>
                                                  </ul>
                                                </div>
                                                <div
                                                  data-test="sentinelEnd"
                                                  tabindex="0"
                                                />
                                              </div>
                                              <div
                                                class="MuiDialog-root"
                                                color="primary"
                                                role="presentation"
                                                style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                                              >
                                                <div
                                                  aria-hidden="true"
                                                  class="MuiBackdrop-root"
                                                  style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                                                />
                                                <div
                                                  data-test="sentinelStart"
                                                  tabindex="0"
                                                />
                                                <div
                                                  class="MuiDialog-container MuiDialog-scrollPaper"
                                                  role="none presentation"
                                                  style="webkit-transform: none; transform: none; webkit-transition: -webkit-transform 225ms cubic-bezier(0.0, 0, 0.2, 1) 0ms; transition: transform 225ms cubic-bezier(0.0, 0, 0.2, 1) 0ms;"
                                                  tabindex="-1"
                                                >
                                                  <div
                                                    aria-describedby="alert-dialog-slide-description"
                                                    aria-labelledby="alert-dialog-slide-title"
                                                    class="MuiPaper-root MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiPaper-elevation24 MuiPaper-rounded"
                                                    role="dialog"
                                                  >
                                                    <div
                                                      class="MuiDialogTitle-root EditToDoListItem__title"
                                                      id="alert-dialog-slide-title"
                                                    >
                                                      <h2
                                                        class="MuiTypography-root MuiTypography-h6"
                                                      >
                                                        Новый список
                                                      </h2>
                                                    </div>
                                                    <div
                                                      class="MuiDialogContent-root"
                                                    >
                                                      <div
                                                        class="MuiFormControl-root MuiTextField-root MuiFormControl-marginDense MuiFormControl-fullWidth"
                                                      >
                                                        <label
                                                          class="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-marginDense Mui-focused Mui-focused"
                                                          data-shrink="true"
                                                          for="name"
                                                          id="name-label"
                                                        >
                                                          Название списка
                                                        </label>
                                                        <div
                                                          class="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-fullWidth MuiInput-fullWidth Mui-focused Mui-focused MuiInputBase-formControl MuiInput-formControl MuiInputBase-marginDense MuiInput-marginDense"
                                                        >
                                                          <input
                                                            aria-invalid="false"
                                                            autocomplete="off"
                                                            class="MuiInputBase-input MuiInput-input MuiInputBase-inputMarginDense MuiInput-inputMarginDense"
                                                            id="name"
                                                            maxlength="40"
                                                            type="text"
                                                            value=""
                                                          />
                                                        </div>
                                                      </div>
                                                    </div>
                                                    <div
                                                      class="MuiDialogActions-root MuiDialogActions-spacing"
                                                    >
                                                      <button
                                                        class="MuiButtonBase-root MuiButton-root MuiButton-contained"
                                                        tabindex="0"
                                                        type="button"
                                                      >
                                                        <span
                                                          class="MuiButton-label"
                                                        >
                                                          Отменить
                                                        </span>
                                                        <span
                                                          class="MuiTouchRipple-root"
                                                        />
                                                      </button>
                                                      <button
                                                        class="MuiButtonBase-root MuiButton-root MuiButton-contained saveButton MuiButton-containedPrimary Mui-disabled Mui-disabled"
                                                        disabled=""
                                                        tabindex="-1"
                                                        type="button"
                                                      >
                                                        <span
                                                          class="MuiButton-label"
                                                        >
                                                          <span
                                                            class="MuiButton-startIcon MuiButton-iconSizeMedium"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              class="MuiSvgIcon-root"
                                                              focusable="false"
                                                              viewBox="0 0 24 24"
                                                            >
                                                              <path
                                                                d="M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z"
                                                              />
                                                            </svg>
                                                          </span>
                                                          Сохранить
                                                        </span>
                                                      </button>
                                                    </div>
                                                  </div>
                                                </div>
                                                <div
                                                  data-test="sentinelEnd"
                                                  tabindex="0"
                                                />
                                              </div>
                                            </body>
                                          }
                                        >
                                          <div
                                            className="MuiPopover-root"
                                            id="simple-menu"
                                            onKeyDown={[Function]}
                                            role="presentation"
                                            style={
                                              Object {
                                                "bottom": 0,
                                                "left": 0,
                                                "position": "fixed",
                                                "right": 0,
                                                "top": 0,
                                                "visibility": "hidden",
                                                "zIndex": 1300,
                                              }
                                            }
                                          >
                                            <ForwardRef(SimpleBackdrop)
                                              invisible={true}
                                              onClick={[Function]}
                                              open={false}
                                            />
                                            <Unstable_TrapFocus
                                              disableAutoFocus={false}
                                              disableEnforceFocus={false}
                                              disableRestoreFocus={false}
                                              getDoc={[Function]}
                                              isEnabled={[Function]}
                                              open={false}
                                            >
                                              <div
                                                data-test="sentinelStart"
                                                tabIndex={0}
                                              />
                                              <ForwardRef(Fade)
                                                appear={true}
                                                in={false}
                                                onEnter={[Function]}
                                                onEntering={[Function]}
                                                onExited={[Function]}
                                                tabIndex="-1"
                                              >
                                                <Transition
                                                  appear={true}
                                                  enter={true}
                                                  exit={true}
                                                  in={false}
                                                  mountOnEnter={false}
                                                  onEnter={[Function]}
                                                  onEntered={[Function]}
                                                  onEntering={[Function]}
                                                  onExit={[Function]}
                                                  onExited={[Function]}
                                                  onExiting={[Function]}
                                                  tabIndex="-1"
                                                  timeout={
                                                    Object {
                                                      "enter": 225,
                                                      "exit": 195,
                                                    }
                                                  }
                                                  unmountOnExit={false}
                                                >
                                                  <WithStyles(ForwardRef(Paper))
                                                    className="MuiPopover-paper"
                                                    classes={
                                                      Object {
                                                        "root": "MuiMenu-paper",
                                                      }
                                                    }
                                                    elevation={8}
                                                    style={
                                                      Object {
                                                        "opacity": 0,
                                                        "visibility": "hidden",
                                                      }
                                                    }
                                                    tabIndex="-1"
                                                  >
                                                    <ForwardRef(Paper)
                                                      className="MuiPopover-paper"
                                                      classes={
                                                        Object {
                                                          "elevation0": "MuiPaper-elevation0",
                                                          "elevation1": "MuiPaper-elevation1",
                                                          "elevation10": "MuiPaper-elevation10",
                                                          "elevation11": "MuiPaper-elevation11",
                                                          "elevation12": "MuiPaper-elevation12",
                                                          "elevation13": "MuiPaper-elevation13",
                                                          "elevation14": "MuiPaper-elevation14",
                                                          "elevation15": "MuiPaper-elevation15",
                                                          "elevation16": "MuiPaper-elevation16",
                                                          "elevation17": "MuiPaper-elevation17",
                                                          "elevation18": "MuiPaper-elevation18",
                                                          "elevation19": "MuiPaper-elevation19",
                                                          "elevation2": "MuiPaper-elevation2",
                                                          "elevation20": "MuiPaper-elevation20",
                                                          "elevation21": "MuiPaper-elevation21",
                                                          "elevation22": "MuiPaper-elevation22",
                                                          "elevation23": "MuiPaper-elevation23",
                                                          "elevation24": "MuiPaper-elevation24",
                                                          "elevation3": "MuiPaper-elevation3",
                                                          "elevation4": "MuiPaper-elevation4",
                                                          "elevation5": "MuiPaper-elevation5",
                                                          "elevation6": "MuiPaper-elevation6",
                                                          "elevation7": "MuiPaper-elevation7",
                                                          "elevation8": "MuiPaper-elevation8",
                                                          "elevation9": "MuiPaper-elevation9",
                                                          "outlined": "MuiPaper-outlined",
                                                          "root": "MuiPaper-root MuiMenu-paper",
                                                          "rounded": "MuiPaper-rounded",
                                                        }
                                                      }
                                                      elevation={8}
                                                      style={
                                                        Object {
                                                          "opacity": 0,
                                                          "visibility": "hidden",
                                                        }
                                                      }
                                                      tabIndex="-1"
                                                    >
                                                      <div
                                                        className="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                                        style={
                                                          Object {
                                                            "opacity": 0,
                                                            "visibility": "hidden",
                                                          }
                                                        }
                                                        tabIndex="-1"
                                                      >
                                                        <ForwardRef(MenuList)
                                                          actions={
                                                            Object {
                                                              "current": Object {
                                                                "adjustStyleForScrollbar": [Function],
                                                              },
                                                            }
                                                          }
                                                          autoFocus={false}
                                                          autoFocusItem={false}
                                                          className="MuiMenu-list"
                                                          onKeyDown={[Function]}
                                                          variant="selectedMenu"
                                                        >
                                                          <WithStyles(ForwardRef(List))
                                                            className="MuiMenu-list"
                                                            onKeyDown={[Function]}
                                                            role="menu"
                                                            tabIndex={-1}
                                                          >
                                                            <ForwardRef(List)
                                                              className="MuiMenu-list"
                                                              classes={
                                                                Object {
                                                                  "dense": "MuiList-dense",
                                                                  "padding": "MuiList-padding",
                                                                  "root": "MuiList-root",
                                                                  "subheader": "MuiList-subheader",
                                                                }
                                                              }
                                                              onKeyDown={[Function]}
                                                              role="menu"
                                                              tabIndex={-1}
                                                            >
                                                              <ul
                                                                className="MuiList-root MuiMenu-list MuiList-padding"
                                                                onKeyDown={[Function]}
                                                                role="menu"
                                                                tabIndex={-1}
                                                              >
                                                                <WithStyles(ForwardRef(MenuItem))
                                                                  className="ListItem_edit"
                                                                  key=".$.0"
                                                                  onClick={[Function]}
                                                                  tabIndex={0}
                                                                >
                                                                  <ForwardRef(MenuItem)
                                                                    className="ListItem_edit"
                                                                    classes={
                                                                      Object {
                                                                        "dense": "MuiMenuItem-dense",
                                                                        "gutters": "MuiMenuItem-gutters",
                                                                        "root": "MuiMenuItem-root",
                                                                        "selected": "Mui-selected",
                                                                      }
                                                                    }
                                                                    onClick={[Function]}
                                                                    tabIndex={0}
                                                                  >
                                                                    <WithStyles(ForwardRef(ListItem))
                                                                      button={true}
                                                                      className="MuiMenuItem-root ListItem_edit MuiMenuItem-gutters"
                                                                      classes={
                                                                        Object {
                                                                          "dense": "MuiMenuItem-dense",
                                                                        }
                                                                      }
                                                                      component="li"
                                                                      disableGutters={false}
                                                                      onClick={[Function]}
                                                                      role="menuitem"
                                                                      tabIndex={0}
                                                                    >
                                                                      <ForwardRef(ListItem)
                                                                        button={true}
                                                                        className="MuiMenuItem-root ListItem_edit MuiMenuItem-gutters"
                                                                        classes={
                                                                          Object {
                                                                            "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                                            "button": "MuiListItem-button",
                                                                            "container": "MuiListItem-container",
                                                                            "dense": "MuiListItem-dense MuiMenuItem-dense",
                                                                            "disabled": "Mui-disabled",
                                                                            "divider": "MuiListItem-divider",
                                                                            "focusVisible": "Mui-focusVisible",
                                                                            "gutters": "MuiListItem-gutters",
                                                                            "root": "MuiListItem-root",
                                                                            "secondaryAction": "MuiListItem-secondaryAction",
                                                                            "selected": "Mui-selected",
                                                                          }
                                                                        }
                                                                        component="li"
                                                                        disableGutters={false}
                                                                        onClick={[Function]}
                                                                        role="menuitem"
                                                                        tabIndex={0}
                                                                      >
                                                                        <WithStyles(ForwardRef(ButtonBase))
                                                                          className="MuiListItem-root MuiMenuItem-root ListItem_edit MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                          component="li"
                                                                          disabled={false}
                                                                          focusVisibleClassName="Mui-focusVisible"
                                                                          onClick={[Function]}
                                                                          role="menuitem"
                                                                          tabIndex={0}
                                                                        >
                                                                          <ForwardRef(ButtonBase)
                                                                            className="MuiListItem-root MuiMenuItem-root ListItem_edit MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                            classes={
                                                                              Object {
                                                                                "disabled": "Mui-disabled",
                                                                                "focusVisible": "Mui-focusVisible",
                                                                                "root": "MuiButtonBase-root",
                                                                              }
                                                                            }
                                                                            component="li"
                                                                            disabled={false}
                                                                            focusVisibleClassName="Mui-focusVisible"
                                                                            onClick={[Function]}
                                                                            role="menuitem"
                                                                            tabIndex={0}
                                                                          >
                                                                            <li
                                                                              aria-disabled={false}
                                                                              className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_edit MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                              onBlur={[Function]}
                                                                              onClick={[Function]}
                                                                              onDragLeave={[Function]}
                                                                              onFocus={[Function]}
                                                                              onKeyDown={[Function]}
                                                                              onKeyUp={[Function]}
                                                                              onMouseDown={[Function]}
                                                                              onMouseLeave={[Function]}
                                                                              onMouseUp={[Function]}
                                                                              onTouchEnd={[Function]}
                                                                              onTouchMove={[Function]}
                                                                              onTouchStart={[Function]}
                                                                              role="menuitem"
                                                                              tabIndex={0}
                                                                            >
                                                                              Редактировать
                                                                              <WithStyles(memo)
                                                                                center={false}
                                                                              >
                                                                                <ForwardRef(TouchRipple)
                                                                                  center={false}
                                                                                  classes={
                                                                                    Object {
                                                                                      "child": "MuiTouchRipple-child",
                                                                                      "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                      "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                      "ripple": "MuiTouchRipple-ripple",
                                                                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                      "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                      "root": "MuiTouchRipple-root",
                                                                                    }
                                                                                  }
                                                                                >
                                                                                  <span
                                                                                    className="MuiTouchRipple-root"
                                                                                  >
                                                                                    <TransitionGroup
                                                                                      childFactory={[Function]}
                                                                                      component={null}
                                                                                      exit={true}
                                                                                    />
                                                                                  </span>
                                                                                </ForwardRef(TouchRipple)>
                                                                              </WithStyles(memo)>
                                                                            </li>
                                                                          </ForwardRef(ButtonBase)>
                                                                        </WithStyles(ForwardRef(ButtonBase))>
                                                                      </ForwardRef(ListItem)>
                                                                    </WithStyles(ForwardRef(ListItem))>
                                                                  </ForwardRef(MenuItem)>
                                                                </WithStyles(ForwardRef(MenuItem))>
                                                                <WithStyles(ForwardRef(MenuItem))
                                                                  className="ListItem_delete"
                                                                  key=".$.1"
                                                                  onClick={[Function]}
                                                                >
                                                                  <ForwardRef(MenuItem)
                                                                    className="ListItem_delete"
                                                                    classes={
                                                                      Object {
                                                                        "dense": "MuiMenuItem-dense",
                                                                        "gutters": "MuiMenuItem-gutters",
                                                                        "root": "MuiMenuItem-root",
                                                                        "selected": "Mui-selected",
                                                                      }
                                                                    }
                                                                    onClick={[Function]}
                                                                  >
                                                                    <WithStyles(ForwardRef(ListItem))
                                                                      button={true}
                                                                      className="MuiMenuItem-root ListItem_delete MuiMenuItem-gutters"
                                                                      classes={
                                                                        Object {
                                                                          "dense": "MuiMenuItem-dense",
                                                                        }
                                                                      }
                                                                      component="li"
                                                                      disableGutters={false}
                                                                      onClick={[Function]}
                                                                      role="menuitem"
                                                                      tabIndex={-1}
                                                                    >
                                                                      <ForwardRef(ListItem)
                                                                        button={true}
                                                                        className="MuiMenuItem-root ListItem_delete MuiMenuItem-gutters"
                                                                        classes={
                                                                          Object {
                                                                            "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                                            "button": "MuiListItem-button",
                                                                            "container": "MuiListItem-container",
                                                                            "dense": "MuiListItem-dense MuiMenuItem-dense",
                                                                            "disabled": "Mui-disabled",
                                                                            "divider": "MuiListItem-divider",
                                                                            "focusVisible": "Mui-focusVisible",
                                                                            "gutters": "MuiListItem-gutters",
                                                                            "root": "MuiListItem-root",
                                                                            "secondaryAction": "MuiListItem-secondaryAction",
                                                                            "selected": "Mui-selected",
                                                                          }
                                                                        }
                                                                        component="li"
                                                                        disableGutters={false}
                                                                        onClick={[Function]}
                                                                        role="menuitem"
                                                                        tabIndex={-1}
                                                                      >
                                                                        <WithStyles(ForwardRef(ButtonBase))
                                                                          className="MuiListItem-root MuiMenuItem-root ListItem_delete MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                          component="li"
                                                                          disabled={false}
                                                                          focusVisibleClassName="Mui-focusVisible"
                                                                          onClick={[Function]}
                                                                          role="menuitem"
                                                                          tabIndex={-1}
                                                                        >
                                                                          <ForwardRef(ButtonBase)
                                                                            className="MuiListItem-root MuiMenuItem-root ListItem_delete MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                            classes={
                                                                              Object {
                                                                                "disabled": "Mui-disabled",
                                                                                "focusVisible": "Mui-focusVisible",
                                                                                "root": "MuiButtonBase-root",
                                                                              }
                                                                            }
                                                                            component="li"
                                                                            disabled={false}
                                                                            focusVisibleClassName="Mui-focusVisible"
                                                                            onClick={[Function]}
                                                                            role="menuitem"
                                                                            tabIndex={-1}
                                                                          >
                                                                            <li
                                                                              aria-disabled={false}
                                                                              className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_delete MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                              onBlur={[Function]}
                                                                              onClick={[Function]}
                                                                              onDragLeave={[Function]}
                                                                              onFocus={[Function]}
                                                                              onKeyDown={[Function]}
                                                                              onKeyUp={[Function]}
                                                                              onMouseDown={[Function]}
                                                                              onMouseLeave={[Function]}
                                                                              onMouseUp={[Function]}
                                                                              onTouchEnd={[Function]}
                                                                              onTouchMove={[Function]}
                                                                              onTouchStart={[Function]}
                                                                              role="menuitem"
                                                                              tabIndex={-1}
                                                                            >
                                                                              Удалить
                                                                              <WithStyles(memo)
                                                                                center={false}
                                                                              >
                                                                                <ForwardRef(TouchRipple)
                                                                                  center={false}
                                                                                  classes={
                                                                                    Object {
                                                                                      "child": "MuiTouchRipple-child",
                                                                                      "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                      "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                      "ripple": "MuiTouchRipple-ripple",
                                                                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                      "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                      "root": "MuiTouchRipple-root",
                                                                                    }
                                                                                  }
                                                                                >
                                                                                  <span
                                                                                    className="MuiTouchRipple-root"
                                                                                  >
                                                                                    <TransitionGroup
                                                                                      childFactory={[Function]}
                                                                                      component={null}
                                                                                      exit={true}
                                                                                    />
                                                                                  </span>
                                                                                </ForwardRef(TouchRipple)>
                                                                              </WithStyles(memo)>
                                                                            </li>
                                                                          </ForwardRef(ButtonBase)>
                                                                        </WithStyles(ForwardRef(ButtonBase))>
                                                                      </ForwardRef(ListItem)>
                                                                    </WithStyles(ForwardRef(ListItem))>
                                                                  </ForwardRef(MenuItem)>
                                                                </WithStyles(ForwardRef(MenuItem))>
                                                              </ul>
                                                            </ForwardRef(List)>
                                                          </WithStyles(ForwardRef(List))>
                                                        </ForwardRef(MenuList)>
                                                      </div>
                                                    </ForwardRef(Paper)>
                                                  </WithStyles(ForwardRef(Paper))>
                                                </Transition>
                                              </ForwardRef(Fade)>
                                              <div
                                                data-test="sentinelEnd"
                                                tabIndex={0}
                                              />
                                            </Unstable_TrapFocus>
                                          </div>
                                        </Portal>
                                      </ForwardRef(Portal)>
                                    </ForwardRef(Modal)>
                                  </ForwardRef(Popover)>
                                </WithStyles(ForwardRef(Popover))>
                              </ForwardRef(Menu)>
                            </WithStyles(ForwardRef(Menu))>
                          </div>
                          <WithStyles(memo)
                            center={false}
                          >
                            <ForwardRef(TouchRipple)
                              center={false}
                              classes={
                                Object {
                                  "child": "MuiTouchRipple-child",
                                  "childLeaving": "MuiTouchRipple-childLeaving",
                                  "childPulsate": "MuiTouchRipple-childPulsate",
                                  "ripple": "MuiTouchRipple-ripple",
                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                  "rippleVisible": "MuiTouchRipple-rippleVisible",
                                  "root": "MuiTouchRipple-root",
                                }
                              }
                            >
                              <span
                                className="MuiTouchRipple-root"
                              >
                                <TransitionGroup
                                  childFactory={[Function]}
                                  component={null}
                                  exit={true}
                                />
                              </span>
                            </ForwardRef(TouchRipple)>
                          </WithStyles(memo)>
                        </div>
                      </ForwardRef(ButtonBase)>
                    </WithStyles(ForwardRef(ButtonBase))>
                  </ForwardRef(ListItem)>
                </WithStyles(ForwardRef(ListItem))>
              </div>
            </Memo(List)>
          </Connect(Component)>
        </div>
        <div
          className="lists__addListButton"
          onClick={[Function]}
        >
          <WithStyles(ForwardRef(IconButton))
            aria-label="add List"
            color="inherit"
          >
            <ForwardRef(IconButton)
              aria-label="add List"
              classes={
                Object {
                  "colorInherit": "MuiIconButton-colorInherit",
                  "colorPrimary": "MuiIconButton-colorPrimary",
                  "colorSecondary": "MuiIconButton-colorSecondary",
                  "disabled": "Mui-disabled",
                  "edgeEnd": "MuiIconButton-edgeEnd",
                  "edgeStart": "MuiIconButton-edgeStart",
                  "label": "MuiIconButton-label",
                  "root": "MuiIconButton-root",
                  "sizeSmall": "MuiIconButton-sizeSmall",
                }
              }
              color="inherit"
            >
              <WithStyles(ForwardRef(ButtonBase))
                aria-label="add List"
                centerRipple={true}
                className="MuiIconButton-root MuiIconButton-colorInherit"
                disabled={false}
                focusRipple={true}
              >
                <ForwardRef(ButtonBase)
                  aria-label="add List"
                  centerRipple={true}
                  className="MuiIconButton-root MuiIconButton-colorInherit"
                  classes={
                    Object {
                      "disabled": "Mui-disabled",
                      "focusVisible": "Mui-focusVisible",
                      "root": "MuiButtonBase-root",
                    }
                  }
                  disabled={false}
                  focusRipple={true}
                >
                  <button
                    aria-label="add List"
                    className="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit"
                    disabled={false}
                    onBlur={[Function]}
                    onDragLeave={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    onKeyUp={[Function]}
                    onMouseDown={[Function]}
                    onMouseLeave={[Function]}
                    onMouseUp={[Function]}
                    onTouchEnd={[Function]}
                    onTouchMove={[Function]}
                    onTouchStart={[Function]}
                    tabIndex={0}
                    type="button"
                  >
                    <span
                      className="MuiIconButton-label"
                    >
                      <ForwardRef(PlaylistAddIcon)
                        fontSize="medium"
                      >
                        <WithStyles(ForwardRef(SvgIcon))
                          fontSize="medium"
                        >
                          <ForwardRef(SvgIcon)
                            classes={
                              Object {
                                "colorAction": "MuiSvgIcon-colorAction",
                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                "colorError": "MuiSvgIcon-colorError",
                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                "root": "MuiSvgIcon-root",
                              }
                            }
                            fontSize="medium"
                          >
                            <svg
                              aria-hidden={true}
                              className="MuiSvgIcon-root"
                              focusable="false"
                              viewBox="0 0 24 24"
                            >
                              <path
                                d="M14 10H2v2h12v-2zm0-4H2v2h12V6zm4 8v-4h-2v4h-4v2h4v4h2v-4h4v-2h-4zM2 16h8v-2H2v2z"
                              />
                            </svg>
                          </ForwardRef(SvgIcon)>
                        </WithStyles(ForwardRef(SvgIcon))>
                      </ForwardRef(PlaylistAddIcon)>
                    </span>
                    <WithStyles(memo)
                      center={true}
                    >
                      <ForwardRef(TouchRipple)
                        center={true}
                        classes={
                          Object {
                            "child": "MuiTouchRipple-child",
                            "childLeaving": "MuiTouchRipple-childLeaving",
                            "childPulsate": "MuiTouchRipple-childPulsate",
                            "ripple": "MuiTouchRipple-ripple",
                            "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                            "rippleVisible": "MuiTouchRipple-rippleVisible",
                            "root": "MuiTouchRipple-root",
                          }
                        }
                      >
                        <span
                          className="MuiTouchRipple-root"
                        >
                          <TransitionGroup
                            childFactory={[Function]}
                            component={null}
                            exit={true}
                          />
                        </span>
                      </ForwardRef(TouchRipple)>
                    </WithStyles(memo)>
                  </button>
                </ForwardRef(ButtonBase)>
              </WithStyles(ForwardRef(ButtonBase))>
            </ForwardRef(IconButton)>
          </WithStyles(ForwardRef(IconButton))>
          <span>
            Добавить список
          </span>
        </div>
        <Memo(EditForm)
          eventClose={[Function]}
          eventSave={[Function]}
          initialLabel=""
          text="Название списка"
          title="Новый список"
        >
          <WithStyles(ForwardRef(Dialog))
            TransitionComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "render": [Function],
              }
            }
            aria-describedby="alert-dialog-slide-description"
            aria-labelledby="alert-dialog-slide-title"
            color="primary"
            keepMounted={true}
            onClose={[Function]}
            open={true}
          >
            <ForwardRef(Dialog)
              TransitionComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "render": [Function],
                }
              }
              aria-describedby="alert-dialog-slide-description"
              aria-labelledby="alert-dialog-slide-title"
              classes={
                Object {
                  "container": "MuiDialog-container",
                  "paper": "MuiDialog-paper",
                  "paperFullScreen": "MuiDialog-paperFullScreen",
                  "paperFullWidth": "MuiDialog-paperFullWidth",
                  "paperScrollBody": "MuiDialog-paperScrollBody",
                  "paperScrollPaper": "MuiDialog-paperScrollPaper",
                  "paperWidthFalse": "MuiDialog-paperWidthFalse",
                  "paperWidthLg": "MuiDialog-paperWidthLg",
                  "paperWidthMd": "MuiDialog-paperWidthMd",
                  "paperWidthSm": "MuiDialog-paperWidthSm",
                  "paperWidthXl": "MuiDialog-paperWidthXl",
                  "paperWidthXs": "MuiDialog-paperWidthXs",
                  "root": "MuiDialog-root",
                  "scrollBody": "MuiDialog-scrollBody",
                  "scrollPaper": "MuiDialog-scrollPaper",
                }
              }
              color="primary"
              keepMounted={true}
              onClose={[Function]}
              open={true}
            >
              <ForwardRef(Modal)
                BackdropComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "Naked": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "propTypes": Object {
                        "children": [Function],
                        "className": [Function],
                        "classes": [Function],
                        "invisible": [Function],
                        "open": [Function],
                        "transitionDuration": [Function],
                      },
                      "render": [Function],
                    },
                    "options": Object {
                      "defaultTheme": Object {
                        "breakpoints": Object {
                          "between": [Function],
                          "down": [Function],
                          "keys": Array [
                            "xs",
                            "sm",
                            "md",
                            "lg",
                            "xl",
                          ],
                          "only": [Function],
                          "up": [Function],
                          "values": Object {
                            "lg": 1280,
                            "md": 960,
                            "sm": 600,
                            "xl": 1920,
                            "xs": 0,
                          },
                          "width": [Function],
                        },
                        "direction": "ltr",
                        "mixins": Object {
                          "gutters": [Function],
                          "toolbar": Object {
                            "@media (min-width:0px) and (orientation: landscape)": Object {
                              "minHeight": 48,
                            },
                            "@media (min-width:600px)": Object {
                              "minHeight": 64,
                            },
                            "minHeight": 56,
                          },
                        },
                        "overrides": Object {},
                        "palette": Object {
                          "action": Object {
                            "activatedOpacity": 0.12,
                            "active": "rgba(0, 0, 0, 0.54)",
                            "disabled": "rgba(0, 0, 0, 0.26)",
                            "disabledBackground": "rgba(0, 0, 0, 0.12)",
                            "disabledOpacity": 0.38,
                            "focus": "rgba(0, 0, 0, 0.12)",
                            "focusOpacity": 0.12,
                            "hover": "rgba(0, 0, 0, 0.04)",
                            "hoverOpacity": 0.04,
                            "selected": "rgba(0, 0, 0, 0.08)",
                            "selectedOpacity": 0.08,
                          },
                          "augmentColor": [Function],
                          "background": Object {
                            "default": "#fafafa",
                            "paper": "#fff",
                          },
                          "common": Object {
                            "black": "#000",
                            "white": "#fff",
                          },
                          "contrastThreshold": 3,
                          "divider": "rgba(0, 0, 0, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "getContrastText": [Function],
                          "grey": Object {
                            "100": "#f5f5f5",
                            "200": "#eeeeee",
                            "300": "#e0e0e0",
                            "400": "#bdbdbd",
                            "50": "#fafafa",
                            "500": "#9e9e9e",
                            "600": "#757575",
                            "700": "#616161",
                            "800": "#424242",
                            "900": "#212121",
                            "A100": "#d5d5d5",
                            "A200": "#aaaaaa",
                            "A400": "#303030",
                            "A700": "#616161",
                          },
                          "info": Object {
                            "contrastText": "#fff",
                            "dark": "#1976d2",
                            "light": "#64b5f6",
                            "main": "#2196f3",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "success": Object {
                            "contrastText": "rgba(0, 0, 0, 0.87)",
                            "dark": "#388e3c",
                            "light": "#81c784",
                            "main": "#4caf50",
                          },
                          "text": Object {
                            "disabled": "rgba(0, 0, 0, 0.38)",
                            "hint": "rgba(0, 0, 0, 0.38)",
                            "primary": "rgba(0, 0, 0, 0.87)",
                            "secondary": "rgba(0, 0, 0, 0.54)",
                          },
                          "tonalOffset": 0.2,
                          "type": "light",
                          "warning": Object {
                            "contrastText": "rgba(0, 0, 0, 0.87)",
                            "dark": "#f57c00",
                            "light": "#ffb74d",
                            "main": "#ff9800",
                          },
                        },
                        "props": Object {},
                        "shadows": Array [
                          "none",
                          "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                          "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                          "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                          "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                          "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                          "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                          "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                          "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                          "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                          "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                          "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                          "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                          "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                          "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                          "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                          "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                          "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                          "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                        ],
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": [Function],
                        "transitions": Object {
                          "create": [Function],
                          "duration": Object {
                            "complex": 375,
                            "enteringScreen": 225,
                            "leavingScreen": 195,
                            "short": 250,
                            "shorter": 200,
                            "shortest": 150,
                            "standard": 300,
                          },
                          "easing": Object {
                            "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                            "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                            "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                            "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                          },
                          "getAutoHeightDuration": [Function],
                        },
                        "typography": Object {
                          "body1": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "1rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.00938em",
                            "lineHeight": 1.5,
                          },
                          "body2": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.875rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.01071em",
                            "lineHeight": 1.43,
                          },
                          "button": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.875rem",
                            "fontWeight": 500,
                            "letterSpacing": "0.02857em",
                            "lineHeight": 1.75,
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.75rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.03333em",
                            "lineHeight": 1.66,
                          },
                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                          "fontSize": 14,
                          "fontWeightBold": 700,
                          "fontWeightLight": 300,
                          "fontWeightMedium": 500,
                          "fontWeightRegular": 400,
                          "h1": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "6rem",
                            "fontWeight": 300,
                            "letterSpacing": "-0.01562em",
                            "lineHeight": 1.167,
                          },
                          "h2": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "3.75rem",
                            "fontWeight": 300,
                            "letterSpacing": "-0.00833em",
                            "lineHeight": 1.2,
                          },
                          "h3": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "3rem",
                            "fontWeight": 400,
                            "letterSpacing": "0em",
                            "lineHeight": 1.167,
                          },
                          "h4": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "2.125rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.00735em",
                            "lineHeight": 1.235,
                          },
                          "h5": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "1.5rem",
                            "fontWeight": 400,
                            "letterSpacing": "0em",
                            "lineHeight": 1.334,
                          },
                          "h6": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "1.25rem",
                            "fontWeight": 500,
                            "letterSpacing": "0.0075em",
                            "lineHeight": 1.6,
                          },
                          "htmlFontSize": 16,
                          "overline": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.75rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.08333em",
                            "lineHeight": 2.66,
                            "textTransform": "uppercase",
                          },
                          "pxToRem": [Function],
                          "round": [Function],
                          "subtitle1": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "1rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.00938em",
                            "lineHeight": 1.75,
                          },
                          "subtitle2": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.875rem",
                            "fontWeight": 500,
                            "letterSpacing": "0.00714em",
                            "lineHeight": 1.57,
                          },
                        },
                        "zIndex": Object {
                          "appBar": 1100,
                          "drawer": 1200,
                          "mobileStepper": 1000,
                          "modal": 1300,
                          "snackbar": 1400,
                          "speedDial": 1050,
                          "tooltip": 1500,
                        },
                      },
                      "name": "MuiBackdrop",
                    },
                    "propTypes": Object {
                      "classes": [Function],
                      "innerRef": [Function],
                    },
                    "render": [Function],
                    "useStyles": [Function],
                  }
                }
                BackdropProps={
                  Object {
                    "transitionDuration": Object {
                      "enter": 225,
                      "exit": 195,
                    },
                  }
                }
                className="MuiDialog-root"
                closeAfterTransition={true}
                color="primary"
                disableEscapeKeyDown={false}
                keepMounted={true}
                onClose={[Function]}
                open={true}
              >
                <ForwardRef(Portal)
                  disablePortal={false}
                >
                  <Portal
                    containerInfo={
                      <body
                        style="padding-right: 0px; overflow: hidden;"
                      >
                        <div
                          aria-hidden="true"
                          class="MuiPopover-root"
                          id="simple-menu"
                          role="presentation"
                          style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px; visibility: hidden;"
                        >
                          <div
                            data-test="sentinelStart"
                            tabindex="0"
                          />
                          <div
                            class="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                            style="opacity: 0; visibility: hidden;"
                            tabindex="-1"
                          >
                            <ul
                              class="MuiList-root MuiMenu-list MuiList-padding"
                              role="menu"
                              tabindex="-1"
                            >
                              <li
                                aria-disabled="false"
                                class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_edit MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                role="menuitem"
                                tabindex="0"
                              >
                                Редактировать
                                <span
                                  class="MuiTouchRipple-root"
                                />
                              </li>
                              <li
                                aria-disabled="false"
                                class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_delete MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                role="menuitem"
                                tabindex="-1"
                              >
                                Удалить
                                <span
                                  class="MuiTouchRipple-root"
                                />
                              </li>
                            </ul>
                          </div>
                          <div
                            data-test="sentinelEnd"
                            tabindex="0"
                          />
                        </div>
                        <div
                          class="MuiDialog-root"
                          color="primary"
                          role="presentation"
                          style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                        >
                          <div
                            aria-hidden="true"
                            class="MuiBackdrop-root"
                            style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                          />
                          <div
                            data-test="sentinelStart"
                            tabindex="0"
                          />
                          <div
                            class="MuiDialog-container MuiDialog-scrollPaper"
                            role="none presentation"
                            style="webkit-transform: none; transform: none; webkit-transition: -webkit-transform 225ms cubic-bezier(0.0, 0, 0.2, 1) 0ms; transition: transform 225ms cubic-bezier(0.0, 0, 0.2, 1) 0ms;"
                            tabindex="-1"
                          >
                            <div
                              aria-describedby="alert-dialog-slide-description"
                              aria-labelledby="alert-dialog-slide-title"
                              class="MuiPaper-root MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiPaper-elevation24 MuiPaper-rounded"
                              role="dialog"
                            >
                              <div
                                class="MuiDialogTitle-root EditToDoListItem__title"
                                id="alert-dialog-slide-title"
                              >
                                <h2
                                  class="MuiTypography-root MuiTypography-h6"
                                >
                                  Новый список
                                </h2>
                              </div>
                              <div
                                class="MuiDialogContent-root"
                              >
                                <div
                                  class="MuiFormControl-root MuiTextField-root MuiFormControl-marginDense MuiFormControl-fullWidth"
                                >
                                  <label
                                    class="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-marginDense Mui-focused Mui-focused"
                                    data-shrink="true"
                                    for="name"
                                    id="name-label"
                                  >
                                    Название списка
                                  </label>
                                  <div
                                    class="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-fullWidth MuiInput-fullWidth Mui-focused Mui-focused MuiInputBase-formControl MuiInput-formControl MuiInputBase-marginDense MuiInput-marginDense"
                                  >
                                    <input
                                      aria-invalid="false"
                                      autocomplete="off"
                                      class="MuiInputBase-input MuiInput-input MuiInputBase-inputMarginDense MuiInput-inputMarginDense"
                                      id="name"
                                      maxlength="40"
                                      type="text"
                                      value=""
                                    />
                                  </div>
                                </div>
                              </div>
                              <div
                                class="MuiDialogActions-root MuiDialogActions-spacing"
                              >
                                <button
                                  class="MuiButtonBase-root MuiButton-root MuiButton-contained"
                                  tabindex="0"
                                  type="button"
                                >
                                  <span
                                    class="MuiButton-label"
                                  >
                                    Отменить
                                  </span>
                                  <span
                                    class="MuiTouchRipple-root"
                                  />
                                </button>
                                <button
                                  class="MuiButtonBase-root MuiButton-root MuiButton-contained saveButton MuiButton-containedPrimary Mui-disabled Mui-disabled"
                                  disabled=""
                                  tabindex="-1"
                                  type="button"
                                >
                                  <span
                                    class="MuiButton-label"
                                  >
                                    <span
                                      class="MuiButton-startIcon MuiButton-iconSizeMedium"
                                    >
                                      <svg
                                        aria-hidden="true"
                                        class="MuiSvgIcon-root"
                                        focusable="false"
                                        viewBox="0 0 24 24"
                                      >
                                        <path
                                          d="M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z"
                                        />
                                      </svg>
                                    </span>
                                    Сохранить
                                  </span>
                                </button>
                              </div>
                            </div>
                          </div>
                          <div
                            data-test="sentinelEnd"
                            tabindex="0"
                          />
                        </div>
                      </body>
                    }
                  >
                    <div
                      className="MuiDialog-root"
                      color="primary"
                      onKeyDown={[Function]}
                      role="presentation"
                      style={
                        Object {
                          "bottom": 0,
                          "left": 0,
                          "position": "fixed",
                          "right": 0,
                          "top": 0,
                          "zIndex": 1300,
                        }
                      }
                    >
                      <WithStyles(ForwardRef(Backdrop))
                        onClick={[Function]}
                        open={true}
                        transitionDuration={
                          Object {
                            "enter": 225,
                            "exit": 195,
                          }
                        }
                      >
                        <ForwardRef(Backdrop)
                          classes={
                            Object {
                              "invisible": "MuiBackdrop-invisible",
                              "root": "MuiBackdrop-root",
                            }
                          }
                          onClick={[Function]}
                          open={true}
                          transitionDuration={
                            Object {
                              "enter": 225,
                              "exit": 195,
                            }
                          }
                        >
                          <ForwardRef(Fade)
                            in={true}
                            onClick={[Function]}
                            timeout={
                              Object {
                                "enter": 225,
                                "exit": 195,
                              }
                            }
                          >
                            <Transition
                              appear={true}
                              enter={true}
                              exit={true}
                              in={true}
                              mountOnEnter={false}
                              onClick={[Function]}
                              onEnter={[Function]}
                              onEntered={[Function]}
                              onEntering={[Function]}
                              onExit={[Function]}
                              onExited={[Function]}
                              onExiting={[Function]}
                              timeout={
                                Object {
                                  "enter": 225,
                                  "exit": 195,
                                }
                              }
                              unmountOnExit={false}
                            >
                              <div
                                aria-hidden={true}
                                className="MuiBackdrop-root"
                                onClick={[Function]}
                                style={
                                  Object {
                                    "opacity": 1,
                                    "visibility": undefined,
                                  }
                                }
                              />
                            </Transition>
                          </ForwardRef(Fade)>
                        </ForwardRef(Backdrop)>
                      </WithStyles(ForwardRef(Backdrop))>
                      <Unstable_TrapFocus
                        disableAutoFocus={false}
                        disableEnforceFocus={false}
                        disableRestoreFocus={false}
                        getDoc={[Function]}
                        isEnabled={[Function]}
                        open={true}
                      >
                        <div
                          data-test="sentinelStart"
                          tabIndex={0}
                        />
                        <ForwardRef
                          appear={true}
                          in={true}
                          onEnter={[Function]}
                          onExited={[Function]}
                          role="none presentation"
                          tabIndex="-1"
                          timeout={
                            Object {
                              "enter": 225,
                              "exit": 195,
                            }
                          }
                        >
                          <ForwardRef(Slide)
                            appear={true}
                            direction="up"
                            in={true}
                            onEnter={[Function]}
                            onExited={[Function]}
                            role="none presentation"
                            tabIndex="-1"
                            timeout={
                              Object {
                                "enter": 225,
                                "exit": 195,
                              }
                            }
                          >
                            <Transition
                              appear={true}
                              enter={true}
                              exit={true}
                              in={true}
                              mountOnEnter={false}
                              nodeRef={
                                Object {
                                  "current": <div
                                    class="MuiDialog-container MuiDialog-scrollPaper"
                                    role="none presentation"
                                    style="webkit-transform: none; transform: none; webkit-transition: -webkit-transform 225ms cubic-bezier(0.0, 0, 0.2, 1) 0ms; transition: transform 225ms cubic-bezier(0.0, 0, 0.2, 1) 0ms;"
                                    tabindex="-1"
                                  >
                                    <div
                                      aria-describedby="alert-dialog-slide-description"
                                      aria-labelledby="alert-dialog-slide-title"
                                      class="MuiPaper-root MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiPaper-elevation24 MuiPaper-rounded"
                                      role="dialog"
                                    >
                                      <div
                                        class="MuiDialogTitle-root EditToDoListItem__title"
                                        id="alert-dialog-slide-title"
                                      >
                                        <h2
                                          class="MuiTypography-root MuiTypography-h6"
                                        >
                                          Новый список
                                        </h2>
                                      </div>
                                      <div
                                        class="MuiDialogContent-root"
                                      >
                                        <div
                                          class="MuiFormControl-root MuiTextField-root MuiFormControl-marginDense MuiFormControl-fullWidth"
                                        >
                                          <label
                                            class="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-marginDense Mui-focused Mui-focused"
                                            data-shrink="true"
                                            for="name"
                                            id="name-label"
                                          >
                                            Название списка
                                          </label>
                                          <div
                                            class="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-fullWidth MuiInput-fullWidth Mui-focused Mui-focused MuiInputBase-formControl MuiInput-formControl MuiInputBase-marginDense MuiInput-marginDense"
                                          >
                                            <input
                                              aria-invalid="false"
                                              autocomplete="off"
                                              class="MuiInputBase-input MuiInput-input MuiInputBase-inputMarginDense MuiInput-inputMarginDense"
                                              id="name"
                                              maxlength="40"
                                              type="text"
                                              value=""
                                            />
                                          </div>
                                        </div>
                                      </div>
                                      <div
                                        class="MuiDialogActions-root MuiDialogActions-spacing"
                                      >
                                        <button
                                          class="MuiButtonBase-root MuiButton-root MuiButton-contained"
                                          tabindex="0"
                                          type="button"
                                        >
                                          <span
                                            class="MuiButton-label"
                                          >
                                            Отменить
                                          </span>
                                          <span
                                            class="MuiTouchRipple-root"
                                          />
                                        </button>
                                        <button
                                          class="MuiButtonBase-root MuiButton-root MuiButton-contained saveButton MuiButton-containedPrimary Mui-disabled Mui-disabled"
                                          disabled=""
                                          tabindex="-1"
                                          type="button"
                                        >
                                          <span
                                            class="MuiButton-label"
                                          >
                                            <span
                                              class="MuiButton-startIcon MuiButton-iconSizeMedium"
                                            >
                                              <svg
                                                aria-hidden="true"
                                                class="MuiSvgIcon-root"
                                                focusable="false"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z"
                                                />
                                              </svg>
                                            </span>
                                            Сохранить
                                          </span>
                                        </button>
                                      </div>
                                    </div>
                                  </div>,
                                }
                              }
                              onEnter={[Function]}
                              onEntered={[Function]}
                              onEntering={[Function]}
                              onExit={[Function]}
                              onExited={[Function]}
                              onExiting={[Function]}
                              role="none presentation"
                              tabIndex="-1"
                              timeout={
                                Object {
                                  "enter": 225,
                                  "exit": 195,
                                }
                              }
                              unmountOnExit={false}
                            >
                              <div
                                className="MuiDialog-container MuiDialog-scrollPaper"
                                onMouseDown={[Function]}
                                onMouseUp={[Function]}
                                role="none presentation"
                                style={
                                  Object {
                                    "visibility": undefined,
                                  }
                                }
                                tabIndex="-1"
                              >
                                <WithStyles(ForwardRef(Paper))
                                  aria-describedby="alert-dialog-slide-description"
                                  aria-labelledby="alert-dialog-slide-title"
                                  className="MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm"
                                  elevation={24}
                                  role="dialog"
                                >
                                  <ForwardRef(Paper)
                                    aria-describedby="alert-dialog-slide-description"
                                    aria-labelledby="alert-dialog-slide-title"
                                    className="MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm"
                                    classes={
                                      Object {
                                        "elevation0": "MuiPaper-elevation0",
                                        "elevation1": "MuiPaper-elevation1",
                                        "elevation10": "MuiPaper-elevation10",
                                        "elevation11": "MuiPaper-elevation11",
                                        "elevation12": "MuiPaper-elevation12",
                                        "elevation13": "MuiPaper-elevation13",
                                        "elevation14": "MuiPaper-elevation14",
                                        "elevation15": "MuiPaper-elevation15",
                                        "elevation16": "MuiPaper-elevation16",
                                        "elevation17": "MuiPaper-elevation17",
                                        "elevation18": "MuiPaper-elevation18",
                                        "elevation19": "MuiPaper-elevation19",
                                        "elevation2": "MuiPaper-elevation2",
                                        "elevation20": "MuiPaper-elevation20",
                                        "elevation21": "MuiPaper-elevation21",
                                        "elevation22": "MuiPaper-elevation22",
                                        "elevation23": "MuiPaper-elevation23",
                                        "elevation24": "MuiPaper-elevation24",
                                        "elevation3": "MuiPaper-elevation3",
                                        "elevation4": "MuiPaper-elevation4",
                                        "elevation5": "MuiPaper-elevation5",
                                        "elevation6": "MuiPaper-elevation6",
                                        "elevation7": "MuiPaper-elevation7",
                                        "elevation8": "MuiPaper-elevation8",
                                        "elevation9": "MuiPaper-elevation9",
                                        "outlined": "MuiPaper-outlined",
                                        "root": "MuiPaper-root",
                                        "rounded": "MuiPaper-rounded",
                                      }
                                    }
                                    elevation={24}
                                    role="dialog"
                                  >
                                    <div
                                      aria-describedby="alert-dialog-slide-description"
                                      aria-labelledby="alert-dialog-slide-title"
                                      className="MuiPaper-root MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiPaper-elevation24 MuiPaper-rounded"
                                      role="dialog"
                                    >
                                      <WithStyles(ForwardRef(DialogTitle))
                                        className="EditToDoListItem__title"
                                        id="alert-dialog-slide-title"
                                      >
                                        <ForwardRef(DialogTitle)
                                          className="EditToDoListItem__title"
                                          classes={
                                            Object {
                                              "root": "MuiDialogTitle-root",
                                            }
                                          }
                                          id="alert-dialog-slide-title"
                                        >
                                          <div
                                            className="MuiDialogTitle-root EditToDoListItem__title"
                                            id="alert-dialog-slide-title"
                                          >
                                            <WithStyles(ForwardRef(Typography))
                                              component="h2"
                                              variant="h6"
                                            >
                                              <ForwardRef(Typography)
                                                classes={
                                                  Object {
                                                    "alignCenter": "MuiTypography-alignCenter",
                                                    "alignJustify": "MuiTypography-alignJustify",
                                                    "alignLeft": "MuiTypography-alignLeft",
                                                    "alignRight": "MuiTypography-alignRight",
                                                    "body1": "MuiTypography-body1",
                                                    "body2": "MuiTypography-body2",
                                                    "button": "MuiTypography-button",
                                                    "caption": "MuiTypography-caption",
                                                    "colorError": "MuiTypography-colorError",
                                                    "colorInherit": "MuiTypography-colorInherit",
                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                    "displayBlock": "MuiTypography-displayBlock",
                                                    "displayInline": "MuiTypography-displayInline",
                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                    "h1": "MuiTypography-h1",
                                                    "h2": "MuiTypography-h2",
                                                    "h3": "MuiTypography-h3",
                                                    "h4": "MuiTypography-h4",
                                                    "h5": "MuiTypography-h5",
                                                    "h6": "MuiTypography-h6",
                                                    "noWrap": "MuiTypography-noWrap",
                                                    "overline": "MuiTypography-overline",
                                                    "paragraph": "MuiTypography-paragraph",
                                                    "root": "MuiTypography-root",
                                                    "srOnly": "MuiTypography-srOnly",
                                                    "subtitle1": "MuiTypography-subtitle1",
                                                    "subtitle2": "MuiTypography-subtitle2",
                                                  }
                                                }
                                                component="h2"
                                                variant="h6"
                                              >
                                                <h2
                                                  className="MuiTypography-root MuiTypography-h6"
                                                >
                                                  Новый список
                                                </h2>
                                              </ForwardRef(Typography)>
                                            </WithStyles(ForwardRef(Typography))>
                                          </div>
                                        </ForwardRef(DialogTitle)>
                                      </WithStyles(ForwardRef(DialogTitle))>
                                      <WithStyles(ForwardRef(DialogContent))>
                                        <ForwardRef(DialogContent)
                                          classes={
                                            Object {
                                              "dividers": "MuiDialogContent-dividers",
                                              "root": "MuiDialogContent-root",
                                            }
                                          }
                                        >
                                          <div
                                            className="MuiDialogContent-root"
                                          >
                                            <WithStyles(ForwardRef(TextField))
                                              autoComplete="off"
                                              autoFocus={true}
                                              color="primary"
                                              fullWidth={true}
                                              id="name"
                                              inputProps={
                                                Object {
                                                  "maxLength": "40",
                                                }
                                              }
                                              label="Название списка"
                                              margin="dense"
                                              onChange={[Function]}
                                              onKeyPress={[Function]}
                                              type="text"
                                              value=""
                                            >
                                              <ForwardRef(TextField)
                                                autoComplete="off"
                                                autoFocus={true}
                                                classes={
                                                  Object {
                                                    "root": "MuiTextField-root",
                                                  }
                                                }
                                                color="primary"
                                                fullWidth={true}
                                                id="name"
                                                inputProps={
                                                  Object {
                                                    "maxLength": "40",
                                                  }
                                                }
                                                label="Название списка"
                                                margin="dense"
                                                onChange={[Function]}
                                                onKeyPress={[Function]}
                                                type="text"
                                                value=""
                                              >
                                                <WithStyles(ForwardRef(FormControl))
                                                  className="MuiTextField-root"
                                                  color="primary"
                                                  disabled={false}
                                                  error={false}
                                                  fullWidth={true}
                                                  margin="dense"
                                                  onKeyPress={[Function]}
                                                  required={false}
                                                  variant="standard"
                                                >
                                                  <ForwardRef(FormControl)
                                                    className="MuiTextField-root"
                                                    classes={
                                                      Object {
                                                        "fullWidth": "MuiFormControl-fullWidth",
                                                        "marginDense": "MuiFormControl-marginDense",
                                                        "marginNormal": "MuiFormControl-marginNormal",
                                                        "root": "MuiFormControl-root",
                                                      }
                                                    }
                                                    color="primary"
                                                    disabled={false}
                                                    error={false}
                                                    fullWidth={true}
                                                    margin="dense"
                                                    onKeyPress={[Function]}
                                                    required={false}
                                                    variant="standard"
                                                  >
                                                    <div
                                                      className="MuiFormControl-root MuiTextField-root MuiFormControl-marginDense MuiFormControl-fullWidth"
                                                      onKeyPress={[Function]}
                                                    >
                                                      <WithStyles(ForwardRef(InputLabel))
                                                        htmlFor="name"
                                                        id="name-label"
                                                      >
                                                        <ForwardRef(InputLabel)
                                                          classes={
                                                            Object {
                                                              "animated": "MuiInputLabel-animated",
                                                              "asterisk": "MuiInputLabel-asterisk",
                                                              "disabled": "Mui-disabled",
                                                              "error": "Mui-error",
                                                              "filled": "MuiInputLabel-filled",
                                                              "focused": "Mui-focused",
                                                              "formControl": "MuiInputLabel-formControl",
                                                              "marginDense": "MuiInputLabel-marginDense",
                                                              "outlined": "MuiInputLabel-outlined",
                                                              "required": "Mui-required",
                                                              "root": "MuiInputLabel-root",
                                                              "shrink": "MuiInputLabel-shrink",
                                                            }
                                                          }
                                                          htmlFor="name"
                                                          id="name-label"
                                                        >
                                                          <WithStyles(ForwardRef(FormLabel))
                                                            className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-marginDense"
                                                            classes={
                                                              Object {
                                                                "asterisk": "MuiInputLabel-asterisk",
                                                                "disabled": "Mui-disabled",
                                                                "error": "Mui-error",
                                                                "focused": "Mui-focused",
                                                                "required": "Mui-required",
                                                              }
                                                            }
                                                            data-shrink={true}
                                                            htmlFor="name"
                                                            id="name-label"
                                                          >
                                                            <ForwardRef(FormLabel)
                                                              className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-marginDense"
                                                              classes={
                                                                Object {
                                                                  "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                                                  "colorSecondary": "MuiFormLabel-colorSecondary",
                                                                  "disabled": "Mui-disabled Mui-disabled",
                                                                  "error": "Mui-error Mui-error",
                                                                  "filled": "MuiFormLabel-filled",
                                                                  "focused": "Mui-focused Mui-focused",
                                                                  "required": "Mui-required Mui-required",
                                                                  "root": "MuiFormLabel-root",
                                                                }
                                                              }
                                                              data-shrink={true}
                                                              htmlFor="name"
                                                              id="name-label"
                                                            >
                                                              <label
                                                                className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-marginDense Mui-focused Mui-focused"
                                                                data-shrink={true}
                                                                htmlFor="name"
                                                                id="name-label"
                                                              >
                                                                Название списка
                                                              </label>
                                                            </ForwardRef(FormLabel)>
                                                          </WithStyles(ForwardRef(FormLabel))>
                                                        </ForwardRef(InputLabel)>
                                                      </WithStyles(ForwardRef(InputLabel))>
                                                      <WithStyles(ForwardRef(Input))
                                                        autoComplete="off"
                                                        autoFocus={true}
                                                        fullWidth={true}
                                                        id="name"
                                                        inputProps={
                                                          Object {
                                                            "maxLength": "40",
                                                          }
                                                        }
                                                        multiline={false}
                                                        onChange={[Function]}
                                                        type="text"
                                                        value=""
                                                      >
                                                        <ForwardRef(Input)
                                                          autoComplete="off"
                                                          autoFocus={true}
                                                          classes={
                                                            Object {
                                                              "colorSecondary": "MuiInput-colorSecondary",
                                                              "disabled": "Mui-disabled",
                                                              "error": "Mui-error",
                                                              "focused": "Mui-focused",
                                                              "formControl": "MuiInput-formControl",
                                                              "fullWidth": "MuiInput-fullWidth",
                                                              "input": "MuiInput-input",
                                                              "inputMarginDense": "MuiInput-inputMarginDense",
                                                              "inputMultiline": "MuiInput-inputMultiline",
                                                              "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                              "marginDense": "MuiInput-marginDense",
                                                              "multiline": "MuiInput-multiline",
                                                              "root": "MuiInput-root",
                                                              "underline": "MuiInput-underline",
                                                            }
                                                          }
                                                          fullWidth={true}
                                                          id="name"
                                                          inputProps={
                                                            Object {
                                                              "maxLength": "40",
                                                            }
                                                          }
                                                          multiline={false}
                                                          onChange={[Function]}
                                                          type="text"
                                                          value=""
                                                        >
                                                          <WithStyles(ForwardRef(InputBase))
                                                            autoComplete="off"
                                                            autoFocus={true}
                                                            classes={
                                                              Object {
                                                                "colorSecondary": "MuiInput-colorSecondary",
                                                                "disabled": "Mui-disabled",
                                                                "error": "Mui-error",
                                                                "focused": "Mui-focused",
                                                                "formControl": "MuiInput-formControl",
                                                                "fullWidth": "MuiInput-fullWidth",
                                                                "input": "MuiInput-input",
                                                                "inputMarginDense": "MuiInput-inputMarginDense",
                                                                "inputMultiline": "MuiInput-inputMultiline",
                                                                "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                                "marginDense": "MuiInput-marginDense",
                                                                "multiline": "MuiInput-multiline",
                                                                "root": "MuiInput-root MuiInput-underline",
                                                                "underline": null,
                                                              }
                                                            }
                                                            fullWidth={true}
                                                            id="name"
                                                            inputComponent="input"
                                                            inputProps={
                                                              Object {
                                                                "maxLength": "40",
                                                              }
                                                            }
                                                            multiline={false}
                                                            onChange={[Function]}
                                                            type="text"
                                                            value=""
                                                          >
                                                            <ForwardRef(InputBase)
                                                              autoComplete="off"
                                                              autoFocus={true}
                                                              classes={
                                                                Object {
                                                                  "adornedEnd": "MuiInputBase-adornedEnd",
                                                                  "adornedStart": "MuiInputBase-adornedStart",
                                                                  "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                                  "disabled": "Mui-disabled Mui-disabled",
                                                                  "error": "Mui-error Mui-error",
                                                                  "focused": "Mui-focused Mui-focused",
                                                                  "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                                  "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                                  "input": "MuiInputBase-input MuiInput-input",
                                                                  "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                                  "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                                  "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                                  "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                                  "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                                  "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                                  "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                                  "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                                  "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                                }
                                                              }
                                                              fullWidth={true}
                                                              id="name"
                                                              inputComponent="input"
                                                              inputProps={
                                                                Object {
                                                                  "maxLength": "40",
                                                                }
                                                              }
                                                              multiline={false}
                                                              onChange={[Function]}
                                                              type="text"
                                                              value=""
                                                            >
                                                              <div
                                                                className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-fullWidth MuiInput-fullWidth Mui-focused Mui-focused MuiInputBase-formControl MuiInput-formControl MuiInputBase-marginDense MuiInput-marginDense"
                                                                onClick={[Function]}
                                                              >
                                                                <input
                                                                  aria-invalid={false}
                                                                  autoComplete="off"
                                                                  autoFocus={true}
                                                                  className="MuiInputBase-input MuiInput-input MuiInputBase-inputMarginDense MuiInput-inputMarginDense"
                                                                  disabled={false}
                                                                  id="name"
                                                                  maxLength="40"
                                                                  onAnimationStart={[Function]}
                                                                  onBlur={[Function]}
                                                                  onChange={[Function]}
                                                                  onFocus={[Function]}
                                                                  required={false}
                                                                  type="text"
                                                                  value=""
                                                                />
                                                              </div>
                                                            </ForwardRef(InputBase)>
                                                          </WithStyles(ForwardRef(InputBase))>
                                                        </ForwardRef(Input)>
                                                      </WithStyles(ForwardRef(Input))>
                                                    </div>
                                                  </ForwardRef(FormControl)>
                                                </WithStyles(ForwardRef(FormControl))>
                                              </ForwardRef(TextField)>
                                            </WithStyles(ForwardRef(TextField))>
                                          </div>
                                        </ForwardRef(DialogContent)>
                                      </WithStyles(ForwardRef(DialogContent))>
                                      <WithStyles(ForwardRef(DialogActions))>
                                        <ForwardRef(DialogActions)
                                          classes={
                                            Object {
                                              "root": "MuiDialogActions-root",
                                              "spacing": "MuiDialogActions-spacing",
                                            }
                                          }
                                        >
                                          <div
                                            className="MuiDialogActions-root MuiDialogActions-spacing"
                                          >
                                            <WithStyles(ForwardRef(Button))
                                              onClick={[Function]}
                                              size="medium"
                                              variant="contained"
                                            >
                                              <ForwardRef(Button)
                                                classes={
                                                  Object {
                                                    "colorInherit": "MuiButton-colorInherit",
                                                    "contained": "MuiButton-contained",
                                                    "containedPrimary": "MuiButton-containedPrimary",
                                                    "containedSecondary": "MuiButton-containedSecondary",
                                                    "containedSizeLarge": "MuiButton-containedSizeLarge",
                                                    "containedSizeSmall": "MuiButton-containedSizeSmall",
                                                    "disableElevation": "MuiButton-disableElevation",
                                                    "disabled": "Mui-disabled",
                                                    "endIcon": "MuiButton-endIcon",
                                                    "focusVisible": "Mui-focusVisible",
                                                    "fullWidth": "MuiButton-fullWidth",
                                                    "iconSizeLarge": "MuiButton-iconSizeLarge",
                                                    "iconSizeMedium": "MuiButton-iconSizeMedium",
                                                    "iconSizeSmall": "MuiButton-iconSizeSmall",
                                                    "label": "MuiButton-label",
                                                    "outlined": "MuiButton-outlined",
                                                    "outlinedPrimary": "MuiButton-outlinedPrimary",
                                                    "outlinedSecondary": "MuiButton-outlinedSecondary",
                                                    "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                                    "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                                    "root": "MuiButton-root",
                                                    "sizeLarge": "MuiButton-sizeLarge",
                                                    "sizeSmall": "MuiButton-sizeSmall",
                                                    "startIcon": "MuiButton-startIcon",
                                                    "text": "MuiButton-text",
                                                    "textPrimary": "MuiButton-textPrimary",
                                                    "textSecondary": "MuiButton-textSecondary",
                                                    "textSizeLarge": "MuiButton-textSizeLarge",
                                                    "textSizeSmall": "MuiButton-textSizeSmall",
                                                  }
                                                }
                                                onClick={[Function]}
                                                size="medium"
                                                variant="contained"
                                              >
                                                <WithStyles(ForwardRef(ButtonBase))
                                                  className="MuiButton-root MuiButton-contained"
                                                  component="button"
                                                  disabled={false}
                                                  focusRipple={true}
                                                  focusVisibleClassName="Mui-focusVisible"
                                                  onClick={[Function]}
                                                  type="button"
                                                >
                                                  <ForwardRef(ButtonBase)
                                                    className="MuiButton-root MuiButton-contained"
                                                    classes={
                                                      Object {
                                                        "disabled": "Mui-disabled",
                                                        "focusVisible": "Mui-focusVisible",
                                                        "root": "MuiButtonBase-root",
                                                      }
                                                    }
                                                    component="button"
                                                    disabled={false}
                                                    focusRipple={true}
                                                    focusVisibleClassName="Mui-focusVisible"
                                                    onClick={[Function]}
                                                    type="button"
                                                  >
                                                    <button
                                                      className="MuiButtonBase-root MuiButton-root MuiButton-contained"
                                                      disabled={false}
                                                      onBlur={[Function]}
                                                      onClick={[Function]}
                                                      onDragLeave={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyDown={[Function]}
                                                      onKeyUp={[Function]}
                                                      onMouseDown={[Function]}
                                                      onMouseLeave={[Function]}
                                                      onMouseUp={[Function]}
                                                      onTouchEnd={[Function]}
                                                      onTouchMove={[Function]}
                                                      onTouchStart={[Function]}
                                                      tabIndex={0}
                                                      type="button"
                                                    >
                                                      <span
                                                        className="MuiButton-label"
                                                      >
                                                        Отменить
                                                      </span>
                                                      <WithStyles(memo)
                                                        center={false}
                                                      >
                                                        <ForwardRef(TouchRipple)
                                                          center={false}
                                                          classes={
                                                            Object {
                                                              "child": "MuiTouchRipple-child",
                                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                                              "ripple": "MuiTouchRipple-ripple",
                                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                              "root": "MuiTouchRipple-root",
                                                            }
                                                          }
                                                        >
                                                          <span
                                                            className="MuiTouchRipple-root"
                                                          >
                                                            <TransitionGroup
                                                              childFactory={[Function]}
                                                              component={null}
                                                              exit={true}
                                                            />
                                                          </span>
                                                        </ForwardRef(TouchRipple)>
                                                      </WithStyles(memo)>
                                                    </button>
                                                  </ForwardRef(ButtonBase)>
                                                </WithStyles(ForwardRef(ButtonBase))>
                                              </ForwardRef(Button)>
                                            </WithStyles(ForwardRef(Button))>
                                            <WithStyles(ForwardRef(Button))
                                              className="saveButton"
                                              color="primary"
                                              disabled={true}
                                              onClick={[Function]}
                                              size="medium"
                                              startIcon={<Memo />}
                                              variant="contained"
                                            >
                                              <ForwardRef(Button)
                                                className="saveButton"
                                                classes={
                                                  Object {
                                                    "colorInherit": "MuiButton-colorInherit",
                                                    "contained": "MuiButton-contained",
                                                    "containedPrimary": "MuiButton-containedPrimary",
                                                    "containedSecondary": "MuiButton-containedSecondary",
                                                    "containedSizeLarge": "MuiButton-containedSizeLarge",
                                                    "containedSizeSmall": "MuiButton-containedSizeSmall",
                                                    "disableElevation": "MuiButton-disableElevation",
                                                    "disabled": "Mui-disabled",
                                                    "endIcon": "MuiButton-endIcon",
                                                    "focusVisible": "Mui-focusVisible",
                                                    "fullWidth": "MuiButton-fullWidth",
                                                    "iconSizeLarge": "MuiButton-iconSizeLarge",
                                                    "iconSizeMedium": "MuiButton-iconSizeMedium",
                                                    "iconSizeSmall": "MuiButton-iconSizeSmall",
                                                    "label": "MuiButton-label",
                                                    "outlined": "MuiButton-outlined",
                                                    "outlinedPrimary": "MuiButton-outlinedPrimary",
                                                    "outlinedSecondary": "MuiButton-outlinedSecondary",
                                                    "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                                    "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                                    "root": "MuiButton-root",
                                                    "sizeLarge": "MuiButton-sizeLarge",
                                                    "sizeSmall": "MuiButton-sizeSmall",
                                                    "startIcon": "MuiButton-startIcon",
                                                    "text": "MuiButton-text",
                                                    "textPrimary": "MuiButton-textPrimary",
                                                    "textSecondary": "MuiButton-textSecondary",
                                                    "textSizeLarge": "MuiButton-textSizeLarge",
                                                    "textSizeSmall": "MuiButton-textSizeSmall",
                                                  }
                                                }
                                                color="primary"
                                                disabled={true}
                                                onClick={[Function]}
                                                size="medium"
                                                startIcon={<Memo />}
                                                variant="contained"
                                              >
                                                <WithStyles(ForwardRef(ButtonBase))
                                                  className="MuiButton-root MuiButton-contained saveButton MuiButton-containedPrimary Mui-disabled"
                                                  component="button"
                                                  disabled={true}
                                                  focusRipple={true}
                                                  focusVisibleClassName="Mui-focusVisible"
                                                  onClick={[Function]}
                                                  type="button"
                                                >
                                                  <ForwardRef(ButtonBase)
                                                    className="MuiButton-root MuiButton-contained saveButton MuiButton-containedPrimary Mui-disabled"
                                                    classes={
                                                      Object {
                                                        "disabled": "Mui-disabled",
                                                        "focusVisible": "Mui-focusVisible",
                                                        "root": "MuiButtonBase-root",
                                                      }
                                                    }
                                                    component="button"
                                                    disabled={true}
                                                    focusRipple={true}
                                                    focusVisibleClassName="Mui-focusVisible"
                                                    onClick={[Function]}
                                                    type="button"
                                                  >
                                                    <button
                                                      className="MuiButtonBase-root MuiButton-root MuiButton-contained saveButton MuiButton-containedPrimary Mui-disabled Mui-disabled"
                                                      disabled={true}
                                                      onBlur={[Function]}
                                                      onClick={[Function]}
                                                      onDragLeave={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyDown={[Function]}
                                                      onKeyUp={[Function]}
                                                      onMouseDown={[Function]}
                                                      onMouseLeave={[Function]}
                                                      onMouseUp={[Function]}
                                                      onTouchEnd={[Function]}
                                                      onTouchMove={[Function]}
                                                      onTouchStart={[Function]}
                                                      tabIndex={-1}
                                                      type="button"
                                                    >
                                                      <span
                                                        className="MuiButton-label"
                                                      >
                                                        <span
                                                          className="MuiButton-startIcon MuiButton-iconSizeMedium"
                                                        >
                                                          <ForwardRef(SaveIcon)>
                                                            <WithStyles(ForwardRef(SvgIcon))>
                                                              <ForwardRef(SvgIcon)
                                                                classes={
                                                                  Object {
                                                                    "colorAction": "MuiSvgIcon-colorAction",
                                                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                    "colorError": "MuiSvgIcon-colorError",
                                                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                    "root": "MuiSvgIcon-root",
                                                                  }
                                                                }
                                                              >
                                                                <svg
                                                                  aria-hidden={true}
                                                                  className="MuiSvgIcon-root"
                                                                  focusable="false"
                                                                  viewBox="0 0 24 24"
                                                                >
                                                                  <path
                                                                    d="M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z"
                                                                  />
                                                                </svg>
                                                              </ForwardRef(SvgIcon)>
                                                            </WithStyles(ForwardRef(SvgIcon))>
                                                          </ForwardRef(SaveIcon)>
                                                        </span>
                                                        Сохранить
                                                      </span>
                                                    </button>
                                                  </ForwardRef(ButtonBase)>
                                                </WithStyles(ForwardRef(ButtonBase))>
                                              </ForwardRef(Button)>
                                            </WithStyles(ForwardRef(Button))>
                                          </div>
                                        </ForwardRef(DialogActions)>
                                      </WithStyles(ForwardRef(DialogActions))>
                                    </div>
                                  </ForwardRef(Paper)>
                                </WithStyles(ForwardRef(Paper))>
                              </div>
                            </Transition>
                          </ForwardRef(Slide)>
                        </ForwardRef>
                        <div
                          data-test="sentinelEnd"
                          tabIndex={0}
                        />
                      </Unstable_TrapFocus>
                    </div>
                  </Portal>
                </ForwardRef(Portal)>
              </ForwardRef(Modal)>
            </ForwardRef(Dialog)>
          </WithStyles(ForwardRef(Dialog))>
        </Memo(EditForm)>
      </div>
    </Memo(Lists)>
  </Connect(Component)>
</Provider>
`;

exports[`Checking adding a list 3`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(Component)>
    <Memo(Lists)
      addToDoListAC={[Function]}
      lists={
        Array [
          Object {
            "id": 1,
            "label": "Магазин",
            "toDoList": Array [],
          },
        ]
      }
      updateActiveTodoListIdAC={[Function]}
    >
      <div
        className="lists__close-wrapper null"
        onClick={[Function]}
      />
      <div
        className="lists null"
      >
        <input
          checked={false}
          className="hidden-menu-ticker"
          id="hmt"
          readOnly={true}
          type="checkbox"
        />
        <label
          className="btn-menu toggleMenu null"
          htmlFor="hmt"
          onClick={[Function]}
        >
          <span
            className="first"
          />
          <span
            className="second"
          />
          <span
            className="third"
          />
        </label>
        <h1
          className="lists_main"
          onClick={[Function]}
        >
          <ForwardRef(HomeIcon)>
            <WithStyles(ForwardRef(SvgIcon))>
              <ForwardRef(SvgIcon)
                classes={
                  Object {
                    "colorAction": "MuiSvgIcon-colorAction",
                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                    "colorError": "MuiSvgIcon-colorError",
                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                    "root": "MuiSvgIcon-root",
                  }
                }
              >
                <svg
                  aria-hidden={true}
                  className="MuiSvgIcon-root"
                  focusable="false"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z"
                  />
                </svg>
              </ForwardRef(SvgIcon)>
            </WithStyles(ForwardRef(SvgIcon))>
          </ForwardRef(HomeIcon)>
          <span>
            Главная
          </span>
        </h1>
        <h2
          className="lists__title"
        >
          <ForwardRef(FormatListBulletedIcon)>
            <WithStyles(ForwardRef(SvgIcon))>
              <ForwardRef(SvgIcon)
                classes={
                  Object {
                    "colorAction": "MuiSvgIcon-colorAction",
                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                    "colorError": "MuiSvgIcon-colorError",
                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                    "root": "MuiSvgIcon-root",
                  }
                }
              >
                <svg
                  aria-hidden={true}
                  className="MuiSvgIcon-root"
                  focusable="false"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M4 10.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm0-6c-.83 0-1.5.67-1.5 1.5S3.17 7.5 4 7.5 5.5 6.83 5.5 6 4.83 4.5 4 4.5zm0 12c-.83 0-1.5.68-1.5 1.5s.68 1.5 1.5 1.5 1.5-.68 1.5-1.5-.67-1.5-1.5-1.5zM7 19h14v-2H7v2zm0-6h14v-2H7v2zm0-8v2h14V5H7z"
                  />
                </svg>
              </ForwardRef(SvgIcon)>
            </WithStyles(ForwardRef(SvgIcon))>
          </ForwardRef(FormatListBulletedIcon)>
          <span>
            Списки:
          </span>
        </h2>
        <div
          className="lists__renderList null"
        >
          <Connect(Component)
            id={1}
            key="1"
            label="Магазин"
            needsDone={0}
            toggleDrawer={[Function]}
          >
            <Memo(List)
              activeToDoListId={null}
              deleteToDoListAC={[Function]}
              id={1}
              label="Магазин"
              needsDone={0}
              toggleDrawer={[Function]}
              updateActiveTodoListIdAC={[Function]}
              updateToDoListLabelAC={[Function]}
            >
              <div>
                <WithStyles(ForwardRef(ListItem))
                  button={true}
                  className="list__item"
                  onClick={[Function]}
                >
                  <ForwardRef(ListItem)
                    button={true}
                    className="list__item"
                    classes={
                      Object {
                        "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                        "button": "MuiListItem-button",
                        "container": "MuiListItem-container",
                        "dense": "MuiListItem-dense",
                        "disabled": "Mui-disabled",
                        "divider": "MuiListItem-divider",
                        "focusVisible": "Mui-focusVisible",
                        "gutters": "MuiListItem-gutters",
                        "root": "MuiListItem-root",
                        "secondaryAction": "MuiListItem-secondaryAction",
                        "selected": "Mui-selected",
                      }
                    }
                    onClick={[Function]}
                  >
                    <WithStyles(ForwardRef(ButtonBase))
                      className="MuiListItem-root list__item MuiListItem-gutters MuiListItem-button"
                      component="div"
                      disabled={false}
                      focusVisibleClassName="Mui-focusVisible"
                      onClick={[Function]}
                    >
                      <ForwardRef(ButtonBase)
                        className="MuiListItem-root list__item MuiListItem-gutters MuiListItem-button"
                        classes={
                          Object {
                            "disabled": "Mui-disabled",
                            "focusVisible": "Mui-focusVisible",
                            "root": "MuiButtonBase-root",
                          }
                        }
                        component="div"
                        disabled={false}
                        focusVisibleClassName="Mui-focusVisible"
                        onClick={[Function]}
                      >
                        <div
                          aria-disabled={false}
                          className="MuiButtonBase-root MuiListItem-root list__item MuiListItem-gutters MuiListItem-button"
                          onBlur={[Function]}
                          onClick={[Function]}
                          onDragLeave={[Function]}
                          onFocus={[Function]}
                          onKeyDown={[Function]}
                          onKeyUp={[Function]}
                          onMouseDown={[Function]}
                          onMouseLeave={[Function]}
                          onMouseUp={[Function]}
                          onTouchEnd={[Function]}
                          onTouchMove={[Function]}
                          onTouchStart={[Function]}
                          role="button"
                          tabIndex={0}
                        >
                          <div
                            key=".0"
                          >
                            Магазин
                          </div>
                          <div
                            className="list__wrapper__list__buttonMenu"
                            key=".1"
                          >
                            <WithStyles(ForwardRef(IconButton))
                              aria-controls="simple-menu"
                              aria-haspopup="true"
                              className="list__buttonMenu"
                              onClick={[Function]}
                            >
                              <ForwardRef(IconButton)
                                aria-controls="simple-menu"
                                aria-haspopup="true"
                                className="list__buttonMenu"
                                classes={
                                  Object {
                                    "colorInherit": "MuiIconButton-colorInherit",
                                    "colorPrimary": "MuiIconButton-colorPrimary",
                                    "colorSecondary": "MuiIconButton-colorSecondary",
                                    "disabled": "Mui-disabled",
                                    "edgeEnd": "MuiIconButton-edgeEnd",
                                    "edgeStart": "MuiIconButton-edgeStart",
                                    "label": "MuiIconButton-label",
                                    "root": "MuiIconButton-root",
                                    "sizeSmall": "MuiIconButton-sizeSmall",
                                  }
                                }
                                onClick={[Function]}
                              >
                                <WithStyles(ForwardRef(ButtonBase))
                                  aria-controls="simple-menu"
                                  aria-haspopup="true"
                                  centerRipple={true}
                                  className="MuiIconButton-root list__buttonMenu"
                                  disabled={false}
                                  focusRipple={true}
                                  onClick={[Function]}
                                >
                                  <ForwardRef(ButtonBase)
                                    aria-controls="simple-menu"
                                    aria-haspopup="true"
                                    centerRipple={true}
                                    className="MuiIconButton-root list__buttonMenu"
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "focusVisible": "Mui-focusVisible",
                                        "root": "MuiButtonBase-root",
                                      }
                                    }
                                    disabled={false}
                                    focusRipple={true}
                                    onClick={[Function]}
                                  >
                                    <button
                                      aria-controls="simple-menu"
                                      aria-haspopup="true"
                                      className="MuiButtonBase-root MuiIconButton-root list__buttonMenu"
                                      disabled={false}
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={0}
                                      type="button"
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <ForwardRef(MoreVertIcon)>
                                          <WithStyles(ForwardRef(SvgIcon))>
                                            <ForwardRef(SvgIcon)
                                              classes={
                                                Object {
                                                  "colorAction": "MuiSvgIcon-colorAction",
                                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                  "colorError": "MuiSvgIcon-colorError",
                                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                  "root": "MuiSvgIcon-root",
                                                }
                                              }
                                            >
                                              <svg
                                                aria-hidden={true}
                                                className="MuiSvgIcon-root"
                                                focusable="false"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                                />
                                              </svg>
                                            </ForwardRef(SvgIcon)>
                                          </WithStyles(ForwardRef(SvgIcon))>
                                        </ForwardRef(MoreVertIcon)>
                                      </span>
                                      <WithStyles(memo)
                                        center={true}
                                      >
                                        <ForwardRef(TouchRipple)
                                          center={true}
                                          classes={
                                            Object {
                                              "child": "MuiTouchRipple-child",
                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                              "ripple": "MuiTouchRipple-ripple",
                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                              "root": "MuiTouchRipple-root",
                                            }
                                          }
                                        >
                                          <span
                                            className="MuiTouchRipple-root"
                                          >
                                            <TransitionGroup
                                              childFactory={[Function]}
                                              component={null}
                                              exit={true}
                                            />
                                          </span>
                                        </ForwardRef(TouchRipple)>
                                      </WithStyles(memo)>
                                    </button>
                                  </ForwardRef(ButtonBase)>
                                </WithStyles(ForwardRef(ButtonBase))>
                              </ForwardRef(IconButton)>
                            </WithStyles(ForwardRef(IconButton))>
                            <WithStyles(ForwardRef(Menu))
                              TransitionComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "propTypes": Object {
                                    "children": [Function],
                                    "disableStrictModeCompat": [Function],
                                    "in": [Function],
                                    "onEnter": [Function],
                                    "onEntered": [Function],
                                    "onEntering": [Function],
                                    "onExit": [Function],
                                    "onExited": [Function],
                                    "onExiting": [Function],
                                    "style": [Function],
                                    "timeout": [Function],
                                  },
                                  "render": [Function],
                                }
                              }
                              anchorEl={null}
                              id="simple-menu"
                              keepMounted={true}
                              onClose={[Function]}
                              open={false}
                            >
                              <ForwardRef(Menu)
                                TransitionComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "propTypes": Object {
                                      "children": [Function],
                                      "disableStrictModeCompat": [Function],
                                      "in": [Function],
                                      "onEnter": [Function],
                                      "onEntered": [Function],
                                      "onEntering": [Function],
                                      "onExit": [Function],
                                      "onExited": [Function],
                                      "onExiting": [Function],
                                      "style": [Function],
                                      "timeout": [Function],
                                    },
                                    "render": [Function],
                                  }
                                }
                                anchorEl={null}
                                classes={
                                  Object {
                                    "list": "MuiMenu-list",
                                    "paper": "MuiMenu-paper",
                                  }
                                }
                                id="simple-menu"
                                keepMounted={true}
                                onClose={[Function]}
                                open={false}
                              >
                                <WithStyles(ForwardRef(Popover))
                                  PaperProps={
                                    Object {
                                      "classes": Object {
                                        "root": "MuiMenu-paper",
                                      },
                                    }
                                  }
                                  TransitionComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "propTypes": Object {
                                        "children": [Function],
                                        "disableStrictModeCompat": [Function],
                                        "in": [Function],
                                        "onEnter": [Function],
                                        "onEntered": [Function],
                                        "onEntering": [Function],
                                        "onExit": [Function],
                                        "onExited": [Function],
                                        "onExiting": [Function],
                                        "style": [Function],
                                        "timeout": [Function],
                                      },
                                      "render": [Function],
                                    }
                                  }
                                  TransitionProps={
                                    Object {
                                      "onEntering": [Function],
                                    }
                                  }
                                  anchorEl={null}
                                  anchorOrigin={
                                    Object {
                                      "horizontal": "left",
                                      "vertical": "top",
                                    }
                                  }
                                  getContentAnchorEl={[Function]}
                                  id="simple-menu"
                                  keepMounted={true}
                                  onClose={[Function]}
                                  open={false}
                                  transformOrigin={
                                    Object {
                                      "horizontal": "left",
                                      "vertical": "top",
                                    }
                                  }
                                  transitionDuration="auto"
                                >
                                  <ForwardRef(Popover)
                                    PaperProps={
                                      Object {
                                        "classes": Object {
                                          "root": "MuiMenu-paper",
                                        },
                                      }
                                    }
                                    TransitionComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "propTypes": Object {
                                          "children": [Function],
                                          "disableStrictModeCompat": [Function],
                                          "in": [Function],
                                          "onEnter": [Function],
                                          "onEntered": [Function],
                                          "onEntering": [Function],
                                          "onExit": [Function],
                                          "onExited": [Function],
                                          "onExiting": [Function],
                                          "style": [Function],
                                          "timeout": [Function],
                                        },
                                        "render": [Function],
                                      }
                                    }
                                    TransitionProps={
                                      Object {
                                        "onEntering": [Function],
                                      }
                                    }
                                    anchorEl={null}
                                    anchorOrigin={
                                      Object {
                                        "horizontal": "left",
                                        "vertical": "top",
                                      }
                                    }
                                    classes={
                                      Object {
                                        "paper": "MuiPopover-paper",
                                        "root": "MuiPopover-root",
                                      }
                                    }
                                    getContentAnchorEl={[Function]}
                                    id="simple-menu"
                                    keepMounted={true}
                                    onClose={[Function]}
                                    open={false}
                                    transformOrigin={
                                      Object {
                                        "horizontal": "left",
                                        "vertical": "top",
                                      }
                                    }
                                    transitionDuration="auto"
                                  >
                                    <ForwardRef(Modal)
                                      BackdropProps={
                                        Object {
                                          "invisible": true,
                                        }
                                      }
                                      className="MuiPopover-root"
                                      id="simple-menu"
                                      keepMounted={true}
                                      onClose={[Function]}
                                      open={false}
                                    >
                                      <ForwardRef(Portal)
                                        disablePortal={false}
                                      >
                                        <Portal
                                          containerInfo={
                                            <body
                                              style="padding-right: 0px; overflow: hidden;"
                                            >
                                              <div
                                                aria-hidden="true"
                                                class="MuiPopover-root"
                                                id="simple-menu"
                                                role="presentation"
                                                style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px; visibility: hidden;"
                                              >
                                                <div
                                                  data-test="sentinelStart"
                                                  tabindex="0"
                                                />
                                                <div
                                                  class="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                                  style="opacity: 0; visibility: hidden;"
                                                  tabindex="-1"
                                                >
                                                  <ul
                                                    class="MuiList-root MuiMenu-list MuiList-padding"
                                                    role="menu"
                                                    tabindex="-1"
                                                  >
                                                    <li
                                                      aria-disabled="false"
                                                      class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_edit MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                      role="menuitem"
                                                      tabindex="0"
                                                    >
                                                      Редактировать
                                                      <span
                                                        class="MuiTouchRipple-root"
                                                      />
                                                    </li>
                                                    <li
                                                      aria-disabled="false"
                                                      class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_delete MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                      role="menuitem"
                                                      tabindex="-1"
                                                    >
                                                      Удалить
                                                      <span
                                                        class="MuiTouchRipple-root"
                                                      />
                                                    </li>
                                                  </ul>
                                                </div>
                                                <div
                                                  data-test="sentinelEnd"
                                                  tabindex="0"
                                                />
                                              </div>
                                              <div
                                                class="MuiDialog-root"
                                                color="primary"
                                                role="presentation"
                                                style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                                              >
                                                <div
                                                  aria-hidden="true"
                                                  class="MuiBackdrop-root"
                                                  style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                                                />
                                                <div
                                                  data-test="sentinelStart"
                                                  tabindex="0"
                                                />
                                                <div
                                                  class="MuiDialog-container MuiDialog-scrollPaper"
                                                  role="none presentation"
                                                  style="webkit-transform: none; transform: none; webkit-transition: -webkit-transform 225ms cubic-bezier(0.0, 0, 0.2, 1) 0ms; transition: transform 225ms cubic-bezier(0.0, 0, 0.2, 1) 0ms;"
                                                  tabindex="-1"
                                                >
                                                  <div
                                                    aria-describedby="alert-dialog-slide-description"
                                                    aria-labelledby="alert-dialog-slide-title"
                                                    class="MuiPaper-root MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiPaper-elevation24 MuiPaper-rounded"
                                                    role="dialog"
                                                  >
                                                    <div
                                                      class="MuiDialogTitle-root EditToDoListItem__title"
                                                      id="alert-dialog-slide-title"
                                                    >
                                                      <h2
                                                        class="MuiTypography-root MuiTypography-h6"
                                                      >
                                                        Новый список
                                                      </h2>
                                                    </div>
                                                    <div
                                                      class="MuiDialogContent-root"
                                                    >
                                                      <div
                                                        class="MuiFormControl-root MuiTextField-root MuiFormControl-marginDense MuiFormControl-fullWidth"
                                                      >
                                                        <label
                                                          class="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-marginDense MuiFormLabel-filled Mui-focused Mui-focused"
                                                          data-shrink="true"
                                                          for="name"
                                                          id="name-label"
                                                        >
                                                          Название списка
                                                        </label>
                                                        <div
                                                          class="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-fullWidth MuiInput-fullWidth Mui-focused Mui-focused MuiInputBase-formControl MuiInput-formControl MuiInputBase-marginDense MuiInput-marginDense"
                                                        >
                                                          <input
                                                            aria-invalid="false"
                                                            autocomplete="off"
                                                            class="MuiInputBase-input MuiInput-input MuiInputBase-inputMarginDense MuiInput-inputMarginDense"
                                                            id="name"
                                                            maxlength="40"
                                                            type="text"
                                                            value="Мой новый список"
                                                          />
                                                        </div>
                                                      </div>
                                                    </div>
                                                    <div
                                                      class="MuiDialogActions-root MuiDialogActions-spacing"
                                                    >
                                                      <button
                                                        class="MuiButtonBase-root MuiButton-root MuiButton-contained"
                                                        tabindex="0"
                                                        type="button"
                                                      >
                                                        <span
                                                          class="MuiButton-label"
                                                        >
                                                          Отменить
                                                        </span>
                                                        <span
                                                          class="MuiTouchRipple-root"
                                                        />
                                                      </button>
                                                      <button
                                                        class="MuiButtonBase-root MuiButton-root MuiButton-contained saveButton MuiButton-containedPrimary"
                                                        tabindex="0"
                                                        type="button"
                                                      >
                                                        <span
                                                          class="MuiButton-label"
                                                        >
                                                          <span
                                                            class="MuiButton-startIcon MuiButton-iconSizeMedium"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              class="MuiSvgIcon-root"
                                                              focusable="false"
                                                              viewBox="0 0 24 24"
                                                            >
                                                              <path
                                                                d="M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z"
                                                              />
                                                            </svg>
                                                          </span>
                                                          Сохранить
                                                        </span>
                                                        <span
                                                          class="MuiTouchRipple-root"
                                                        />
                                                      </button>
                                                    </div>
                                                  </div>
                                                </div>
                                                <div
                                                  data-test="sentinelEnd"
                                                  tabindex="0"
                                                />
                                              </div>
                                            </body>
                                          }
                                        >
                                          <div
                                            className="MuiPopover-root"
                                            id="simple-menu"
                                            onKeyDown={[Function]}
                                            role="presentation"
                                            style={
                                              Object {
                                                "bottom": 0,
                                                "left": 0,
                                                "position": "fixed",
                                                "right": 0,
                                                "top": 0,
                                                "visibility": "hidden",
                                                "zIndex": 1300,
                                              }
                                            }
                                          >
                                            <ForwardRef(SimpleBackdrop)
                                              invisible={true}
                                              onClick={[Function]}
                                              open={false}
                                            />
                                            <Unstable_TrapFocus
                                              disableAutoFocus={false}
                                              disableEnforceFocus={false}
                                              disableRestoreFocus={false}
                                              getDoc={[Function]}
                                              isEnabled={[Function]}
                                              open={false}
                                            >
                                              <div
                                                data-test="sentinelStart"
                                                tabIndex={0}
                                              />
                                              <ForwardRef(Fade)
                                                appear={true}
                                                in={false}
                                                onEnter={[Function]}
                                                onEntering={[Function]}
                                                onExited={[Function]}
                                                tabIndex="-1"
                                              >
                                                <Transition
                                                  appear={true}
                                                  enter={true}
                                                  exit={true}
                                                  in={false}
                                                  mountOnEnter={false}
                                                  onEnter={[Function]}
                                                  onEntered={[Function]}
                                                  onEntering={[Function]}
                                                  onExit={[Function]}
                                                  onExited={[Function]}
                                                  onExiting={[Function]}
                                                  tabIndex="-1"
                                                  timeout={
                                                    Object {
                                                      "enter": 225,
                                                      "exit": 195,
                                                    }
                                                  }
                                                  unmountOnExit={false}
                                                >
                                                  <WithStyles(ForwardRef(Paper))
                                                    className="MuiPopover-paper"
                                                    classes={
                                                      Object {
                                                        "root": "MuiMenu-paper",
                                                      }
                                                    }
                                                    elevation={8}
                                                    style={
                                                      Object {
                                                        "opacity": 0,
                                                        "visibility": "hidden",
                                                      }
                                                    }
                                                    tabIndex="-1"
                                                  >
                                                    <ForwardRef(Paper)
                                                      className="MuiPopover-paper"
                                                      classes={
                                                        Object {
                                                          "elevation0": "MuiPaper-elevation0",
                                                          "elevation1": "MuiPaper-elevation1",
                                                          "elevation10": "MuiPaper-elevation10",
                                                          "elevation11": "MuiPaper-elevation11",
                                                          "elevation12": "MuiPaper-elevation12",
                                                          "elevation13": "MuiPaper-elevation13",
                                                          "elevation14": "MuiPaper-elevation14",
                                                          "elevation15": "MuiPaper-elevation15",
                                                          "elevation16": "MuiPaper-elevation16",
                                                          "elevation17": "MuiPaper-elevation17",
                                                          "elevation18": "MuiPaper-elevation18",
                                                          "elevation19": "MuiPaper-elevation19",
                                                          "elevation2": "MuiPaper-elevation2",
                                                          "elevation20": "MuiPaper-elevation20",
                                                          "elevation21": "MuiPaper-elevation21",
                                                          "elevation22": "MuiPaper-elevation22",
                                                          "elevation23": "MuiPaper-elevation23",
                                                          "elevation24": "MuiPaper-elevation24",
                                                          "elevation3": "MuiPaper-elevation3",
                                                          "elevation4": "MuiPaper-elevation4",
                                                          "elevation5": "MuiPaper-elevation5",
                                                          "elevation6": "MuiPaper-elevation6",
                                                          "elevation7": "MuiPaper-elevation7",
                                                          "elevation8": "MuiPaper-elevation8",
                                                          "elevation9": "MuiPaper-elevation9",
                                                          "outlined": "MuiPaper-outlined",
                                                          "root": "MuiPaper-root MuiMenu-paper",
                                                          "rounded": "MuiPaper-rounded",
                                                        }
                                                      }
                                                      elevation={8}
                                                      style={
                                                        Object {
                                                          "opacity": 0,
                                                          "visibility": "hidden",
                                                        }
                                                      }
                                                      tabIndex="-1"
                                                    >
                                                      <div
                                                        className="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                                        style={
                                                          Object {
                                                            "opacity": 0,
                                                            "visibility": "hidden",
                                                          }
                                                        }
                                                        tabIndex="-1"
                                                      >
                                                        <ForwardRef(MenuList)
                                                          actions={
                                                            Object {
                                                              "current": Object {
                                                                "adjustStyleForScrollbar": [Function],
                                                              },
                                                            }
                                                          }
                                                          autoFocus={false}
                                                          autoFocusItem={false}
                                                          className="MuiMenu-list"
                                                          onKeyDown={[Function]}
                                                          variant="selectedMenu"
                                                        >
                                                          <WithStyles(ForwardRef(List))
                                                            className="MuiMenu-list"
                                                            onKeyDown={[Function]}
                                                            role="menu"
                                                            tabIndex={-1}
                                                          >
                                                            <ForwardRef(List)
                                                              className="MuiMenu-list"
                                                              classes={
                                                                Object {
                                                                  "dense": "MuiList-dense",
                                                                  "padding": "MuiList-padding",
                                                                  "root": "MuiList-root",
                                                                  "subheader": "MuiList-subheader",
                                                                }
                                                              }
                                                              onKeyDown={[Function]}
                                                              role="menu"
                                                              tabIndex={-1}
                                                            >
                                                              <ul
                                                                className="MuiList-root MuiMenu-list MuiList-padding"
                                                                onKeyDown={[Function]}
                                                                role="menu"
                                                                tabIndex={-1}
                                                              >
                                                                <WithStyles(ForwardRef(MenuItem))
                                                                  className="ListItem_edit"
                                                                  key=".$.0"
                                                                  onClick={[Function]}
                                                                  tabIndex={0}
                                                                >
                                                                  <ForwardRef(MenuItem)
                                                                    className="ListItem_edit"
                                                                    classes={
                                                                      Object {
                                                                        "dense": "MuiMenuItem-dense",
                                                                        "gutters": "MuiMenuItem-gutters",
                                                                        "root": "MuiMenuItem-root",
                                                                        "selected": "Mui-selected",
                                                                      }
                                                                    }
                                                                    onClick={[Function]}
                                                                    tabIndex={0}
                                                                  >
                                                                    <WithStyles(ForwardRef(ListItem))
                                                                      button={true}
                                                                      className="MuiMenuItem-root ListItem_edit MuiMenuItem-gutters"
                                                                      classes={
                                                                        Object {
                                                                          "dense": "MuiMenuItem-dense",
                                                                        }
                                                                      }
                                                                      component="li"
                                                                      disableGutters={false}
                                                                      onClick={[Function]}
                                                                      role="menuitem"
                                                                      tabIndex={0}
                                                                    >
                                                                      <ForwardRef(ListItem)
                                                                        button={true}
                                                                        className="MuiMenuItem-root ListItem_edit MuiMenuItem-gutters"
                                                                        classes={
                                                                          Object {
                                                                            "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                                            "button": "MuiListItem-button",
                                                                            "container": "MuiListItem-container",
                                                                            "dense": "MuiListItem-dense MuiMenuItem-dense",
                                                                            "disabled": "Mui-disabled",
                                                                            "divider": "MuiListItem-divider",
                                                                            "focusVisible": "Mui-focusVisible",
                                                                            "gutters": "MuiListItem-gutters",
                                                                            "root": "MuiListItem-root",
                                                                            "secondaryAction": "MuiListItem-secondaryAction",
                                                                            "selected": "Mui-selected",
                                                                          }
                                                                        }
                                                                        component="li"
                                                                        disableGutters={false}
                                                                        onClick={[Function]}
                                                                        role="menuitem"
                                                                        tabIndex={0}
                                                                      >
                                                                        <WithStyles(ForwardRef(ButtonBase))
                                                                          className="MuiListItem-root MuiMenuItem-root ListItem_edit MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                          component="li"
                                                                          disabled={false}
                                                                          focusVisibleClassName="Mui-focusVisible"
                                                                          onClick={[Function]}
                                                                          role="menuitem"
                                                                          tabIndex={0}
                                                                        >
                                                                          <ForwardRef(ButtonBase)
                                                                            className="MuiListItem-root MuiMenuItem-root ListItem_edit MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                            classes={
                                                                              Object {
                                                                                "disabled": "Mui-disabled",
                                                                                "focusVisible": "Mui-focusVisible",
                                                                                "root": "MuiButtonBase-root",
                                                                              }
                                                                            }
                                                                            component="li"
                                                                            disabled={false}
                                                                            focusVisibleClassName="Mui-focusVisible"
                                                                            onClick={[Function]}
                                                                            role="menuitem"
                                                                            tabIndex={0}
                                                                          >
                                                                            <li
                                                                              aria-disabled={false}
                                                                              className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_edit MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                              onBlur={[Function]}
                                                                              onClick={[Function]}
                                                                              onDragLeave={[Function]}
                                                                              onFocus={[Function]}
                                                                              onKeyDown={[Function]}
                                                                              onKeyUp={[Function]}
                                                                              onMouseDown={[Function]}
                                                                              onMouseLeave={[Function]}
                                                                              onMouseUp={[Function]}
                                                                              onTouchEnd={[Function]}
                                                                              onTouchMove={[Function]}
                                                                              onTouchStart={[Function]}
                                                                              role="menuitem"
                                                                              tabIndex={0}
                                                                            >
                                                                              Редактировать
                                                                              <WithStyles(memo)
                                                                                center={false}
                                                                              >
                                                                                <ForwardRef(TouchRipple)
                                                                                  center={false}
                                                                                  classes={
                                                                                    Object {
                                                                                      "child": "MuiTouchRipple-child",
                                                                                      "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                      "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                      "ripple": "MuiTouchRipple-ripple",
                                                                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                      "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                      "root": "MuiTouchRipple-root",
                                                                                    }
                                                                                  }
                                                                                >
                                                                                  <span
                                                                                    className="MuiTouchRipple-root"
                                                                                  >
                                                                                    <TransitionGroup
                                                                                      childFactory={[Function]}
                                                                                      component={null}
                                                                                      exit={true}
                                                                                    />
                                                                                  </span>
                                                                                </ForwardRef(TouchRipple)>
                                                                              </WithStyles(memo)>
                                                                            </li>
                                                                          </ForwardRef(ButtonBase)>
                                                                        </WithStyles(ForwardRef(ButtonBase))>
                                                                      </ForwardRef(ListItem)>
                                                                    </WithStyles(ForwardRef(ListItem))>
                                                                  </ForwardRef(MenuItem)>
                                                                </WithStyles(ForwardRef(MenuItem))>
                                                                <WithStyles(ForwardRef(MenuItem))
                                                                  className="ListItem_delete"
                                                                  key=".$.1"
                                                                  onClick={[Function]}
                                                                >
                                                                  <ForwardRef(MenuItem)
                                                                    className="ListItem_delete"
                                                                    classes={
                                                                      Object {
                                                                        "dense": "MuiMenuItem-dense",
                                                                        "gutters": "MuiMenuItem-gutters",
                                                                        "root": "MuiMenuItem-root",
                                                                        "selected": "Mui-selected",
                                                                      }
                                                                    }
                                                                    onClick={[Function]}
                                                                  >
                                                                    <WithStyles(ForwardRef(ListItem))
                                                                      button={true}
                                                                      className="MuiMenuItem-root ListItem_delete MuiMenuItem-gutters"
                                                                      classes={
                                                                        Object {
                                                                          "dense": "MuiMenuItem-dense",
                                                                        }
                                                                      }
                                                                      component="li"
                                                                      disableGutters={false}
                                                                      onClick={[Function]}
                                                                      role="menuitem"
                                                                      tabIndex={-1}
                                                                    >
                                                                      <ForwardRef(ListItem)
                                                                        button={true}
                                                                        className="MuiMenuItem-root ListItem_delete MuiMenuItem-gutters"
                                                                        classes={
                                                                          Object {
                                                                            "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                                            "button": "MuiListItem-button",
                                                                            "container": "MuiListItem-container",
                                                                            "dense": "MuiListItem-dense MuiMenuItem-dense",
                                                                            "disabled": "Mui-disabled",
                                                                            "divider": "MuiListItem-divider",
                                                                            "focusVisible": "Mui-focusVisible",
                                                                            "gutters": "MuiListItem-gutters",
                                                                            "root": "MuiListItem-root",
                                                                            "secondaryAction": "MuiListItem-secondaryAction",
                                                                            "selected": "Mui-selected",
                                                                          }
                                                                        }
                                                                        component="li"
                                                                        disableGutters={false}
                                                                        onClick={[Function]}
                                                                        role="menuitem"
                                                                        tabIndex={-1}
                                                                      >
                                                                        <WithStyles(ForwardRef(ButtonBase))
                                                                          className="MuiListItem-root MuiMenuItem-root ListItem_delete MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                          component="li"
                                                                          disabled={false}
                                                                          focusVisibleClassName="Mui-focusVisible"
                                                                          onClick={[Function]}
                                                                          role="menuitem"
                                                                          tabIndex={-1}
                                                                        >
                                                                          <ForwardRef(ButtonBase)
                                                                            className="MuiListItem-root MuiMenuItem-root ListItem_delete MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                            classes={
                                                                              Object {
                                                                                "disabled": "Mui-disabled",
                                                                                "focusVisible": "Mui-focusVisible",
                                                                                "root": "MuiButtonBase-root",
                                                                              }
                                                                            }
                                                                            component="li"
                                                                            disabled={false}
                                                                            focusVisibleClassName="Mui-focusVisible"
                                                                            onClick={[Function]}
                                                                            role="menuitem"
                                                                            tabIndex={-1}
                                                                          >
                                                                            <li
                                                                              aria-disabled={false}
                                                                              className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_delete MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                              onBlur={[Function]}
                                                                              onClick={[Function]}
                                                                              onDragLeave={[Function]}
                                                                              onFocus={[Function]}
                                                                              onKeyDown={[Function]}
                                                                              onKeyUp={[Function]}
                                                                              onMouseDown={[Function]}
                                                                              onMouseLeave={[Function]}
                                                                              onMouseUp={[Function]}
                                                                              onTouchEnd={[Function]}
                                                                              onTouchMove={[Function]}
                                                                              onTouchStart={[Function]}
                                                                              role="menuitem"
                                                                              tabIndex={-1}
                                                                            >
                                                                              Удалить
                                                                              <WithStyles(memo)
                                                                                center={false}
                                                                              >
                                                                                <ForwardRef(TouchRipple)
                                                                                  center={false}
                                                                                  classes={
                                                                                    Object {
                                                                                      "child": "MuiTouchRipple-child",
                                                                                      "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                      "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                      "ripple": "MuiTouchRipple-ripple",
                                                                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                      "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                      "root": "MuiTouchRipple-root",
                                                                                    }
                                                                                  }
                                                                                >
                                                                                  <span
                                                                                    className="MuiTouchRipple-root"
                                                                                  >
                                                                                    <TransitionGroup
                                                                                      childFactory={[Function]}
                                                                                      component={null}
                                                                                      exit={true}
                                                                                    />
                                                                                  </span>
                                                                                </ForwardRef(TouchRipple)>
                                                                              </WithStyles(memo)>
                                                                            </li>
                                                                          </ForwardRef(ButtonBase)>
                                                                        </WithStyles(ForwardRef(ButtonBase))>
                                                                      </ForwardRef(ListItem)>
                                                                    </WithStyles(ForwardRef(ListItem))>
                                                                  </ForwardRef(MenuItem)>
                                                                </WithStyles(ForwardRef(MenuItem))>
                                                              </ul>
                                                            </ForwardRef(List)>
                                                          </WithStyles(ForwardRef(List))>
                                                        </ForwardRef(MenuList)>
                                                      </div>
                                                    </ForwardRef(Paper)>
                                                  </WithStyles(ForwardRef(Paper))>
                                                </Transition>
                                              </ForwardRef(Fade)>
                                              <div
                                                data-test="sentinelEnd"
                                                tabIndex={0}
                                              />
                                            </Unstable_TrapFocus>
                                          </div>
                                        </Portal>
                                      </ForwardRef(Portal)>
                                    </ForwardRef(Modal)>
                                  </ForwardRef(Popover)>
                                </WithStyles(ForwardRef(Popover))>
                              </ForwardRef(Menu)>
                            </WithStyles(ForwardRef(Menu))>
                          </div>
                          <WithStyles(memo)
                            center={false}
                          >
                            <ForwardRef(TouchRipple)
                              center={false}
                              classes={
                                Object {
                                  "child": "MuiTouchRipple-child",
                                  "childLeaving": "MuiTouchRipple-childLeaving",
                                  "childPulsate": "MuiTouchRipple-childPulsate",
                                  "ripple": "MuiTouchRipple-ripple",
                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                  "rippleVisible": "MuiTouchRipple-rippleVisible",
                                  "root": "MuiTouchRipple-root",
                                }
                              }
                            >
                              <span
                                className="MuiTouchRipple-root"
                              >
                                <TransitionGroup
                                  childFactory={[Function]}
                                  component={null}
                                  exit={true}
                                />
                              </span>
                            </ForwardRef(TouchRipple)>
                          </WithStyles(memo)>
                        </div>
                      </ForwardRef(ButtonBase)>
                    </WithStyles(ForwardRef(ButtonBase))>
                  </ForwardRef(ListItem)>
                </WithStyles(ForwardRef(ListItem))>
              </div>
            </Memo(List)>
          </Connect(Component)>
        </div>
        <div
          className="lists__addListButton"
          onClick={[Function]}
        >
          <WithStyles(ForwardRef(IconButton))
            aria-label="add List"
            color="inherit"
          >
            <ForwardRef(IconButton)
              aria-label="add List"
              classes={
                Object {
                  "colorInherit": "MuiIconButton-colorInherit",
                  "colorPrimary": "MuiIconButton-colorPrimary",
                  "colorSecondary": "MuiIconButton-colorSecondary",
                  "disabled": "Mui-disabled",
                  "edgeEnd": "MuiIconButton-edgeEnd",
                  "edgeStart": "MuiIconButton-edgeStart",
                  "label": "MuiIconButton-label",
                  "root": "MuiIconButton-root",
                  "sizeSmall": "MuiIconButton-sizeSmall",
                }
              }
              color="inherit"
            >
              <WithStyles(ForwardRef(ButtonBase))
                aria-label="add List"
                centerRipple={true}
                className="MuiIconButton-root MuiIconButton-colorInherit"
                disabled={false}
                focusRipple={true}
              >
                <ForwardRef(ButtonBase)
                  aria-label="add List"
                  centerRipple={true}
                  className="MuiIconButton-root MuiIconButton-colorInherit"
                  classes={
                    Object {
                      "disabled": "Mui-disabled",
                      "focusVisible": "Mui-focusVisible",
                      "root": "MuiButtonBase-root",
                    }
                  }
                  disabled={false}
                  focusRipple={true}
                >
                  <button
                    aria-label="add List"
                    className="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit"
                    disabled={false}
                    onBlur={[Function]}
                    onDragLeave={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    onKeyUp={[Function]}
                    onMouseDown={[Function]}
                    onMouseLeave={[Function]}
                    onMouseUp={[Function]}
                    onTouchEnd={[Function]}
                    onTouchMove={[Function]}
                    onTouchStart={[Function]}
                    tabIndex={0}
                    type="button"
                  >
                    <span
                      className="MuiIconButton-label"
                    >
                      <ForwardRef(PlaylistAddIcon)
                        fontSize="medium"
                      >
                        <WithStyles(ForwardRef(SvgIcon))
                          fontSize="medium"
                        >
                          <ForwardRef(SvgIcon)
                            classes={
                              Object {
                                "colorAction": "MuiSvgIcon-colorAction",
                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                "colorError": "MuiSvgIcon-colorError",
                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                "root": "MuiSvgIcon-root",
                              }
                            }
                            fontSize="medium"
                          >
                            <svg
                              aria-hidden={true}
                              className="MuiSvgIcon-root"
                              focusable="false"
                              viewBox="0 0 24 24"
                            >
                              <path
                                d="M14 10H2v2h12v-2zm0-4H2v2h12V6zm4 8v-4h-2v4h-4v2h4v4h2v-4h4v-2h-4zM2 16h8v-2H2v2z"
                              />
                            </svg>
                          </ForwardRef(SvgIcon)>
                        </WithStyles(ForwardRef(SvgIcon))>
                      </ForwardRef(PlaylistAddIcon)>
                    </span>
                    <WithStyles(memo)
                      center={true}
                    >
                      <ForwardRef(TouchRipple)
                        center={true}
                        classes={
                          Object {
                            "child": "MuiTouchRipple-child",
                            "childLeaving": "MuiTouchRipple-childLeaving",
                            "childPulsate": "MuiTouchRipple-childPulsate",
                            "ripple": "MuiTouchRipple-ripple",
                            "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                            "rippleVisible": "MuiTouchRipple-rippleVisible",
                            "root": "MuiTouchRipple-root",
                          }
                        }
                      >
                        <span
                          className="MuiTouchRipple-root"
                        >
                          <TransitionGroup
                            childFactory={[Function]}
                            component={null}
                            exit={true}
                          />
                        </span>
                      </ForwardRef(TouchRipple)>
                    </WithStyles(memo)>
                  </button>
                </ForwardRef(ButtonBase)>
              </WithStyles(ForwardRef(ButtonBase))>
            </ForwardRef(IconButton)>
          </WithStyles(ForwardRef(IconButton))>
          <span>
            Добавить список
          </span>
        </div>
        <Memo(EditForm)
          eventClose={[Function]}
          eventSave={[Function]}
          initialLabel=""
          text="Название списка"
          title="Новый список"
        >
          <WithStyles(ForwardRef(Dialog))
            TransitionComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "render": [Function],
              }
            }
            aria-describedby="alert-dialog-slide-description"
            aria-labelledby="alert-dialog-slide-title"
            color="primary"
            keepMounted={true}
            onClose={[Function]}
            open={true}
          >
            <ForwardRef(Dialog)
              TransitionComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "render": [Function],
                }
              }
              aria-describedby="alert-dialog-slide-description"
              aria-labelledby="alert-dialog-slide-title"
              classes={
                Object {
                  "container": "MuiDialog-container",
                  "paper": "MuiDialog-paper",
                  "paperFullScreen": "MuiDialog-paperFullScreen",
                  "paperFullWidth": "MuiDialog-paperFullWidth",
                  "paperScrollBody": "MuiDialog-paperScrollBody",
                  "paperScrollPaper": "MuiDialog-paperScrollPaper",
                  "paperWidthFalse": "MuiDialog-paperWidthFalse",
                  "paperWidthLg": "MuiDialog-paperWidthLg",
                  "paperWidthMd": "MuiDialog-paperWidthMd",
                  "paperWidthSm": "MuiDialog-paperWidthSm",
                  "paperWidthXl": "MuiDialog-paperWidthXl",
                  "paperWidthXs": "MuiDialog-paperWidthXs",
                  "root": "MuiDialog-root",
                  "scrollBody": "MuiDialog-scrollBody",
                  "scrollPaper": "MuiDialog-scrollPaper",
                }
              }
              color="primary"
              keepMounted={true}
              onClose={[Function]}
              open={true}
            >
              <ForwardRef(Modal)
                BackdropComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "Naked": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "propTypes": Object {
                        "children": [Function],
                        "className": [Function],
                        "classes": [Function],
                        "invisible": [Function],
                        "open": [Function],
                        "transitionDuration": [Function],
                      },
                      "render": [Function],
                    },
                    "options": Object {
                      "defaultTheme": Object {
                        "breakpoints": Object {
                          "between": [Function],
                          "down": [Function],
                          "keys": Array [
                            "xs",
                            "sm",
                            "md",
                            "lg",
                            "xl",
                          ],
                          "only": [Function],
                          "up": [Function],
                          "values": Object {
                            "lg": 1280,
                            "md": 960,
                            "sm": 600,
                            "xl": 1920,
                            "xs": 0,
                          },
                          "width": [Function],
                        },
                        "direction": "ltr",
                        "mixins": Object {
                          "gutters": [Function],
                          "toolbar": Object {
                            "@media (min-width:0px) and (orientation: landscape)": Object {
                              "minHeight": 48,
                            },
                            "@media (min-width:600px)": Object {
                              "minHeight": 64,
                            },
                            "minHeight": 56,
                          },
                        },
                        "overrides": Object {},
                        "palette": Object {
                          "action": Object {
                            "activatedOpacity": 0.12,
                            "active": "rgba(0, 0, 0, 0.54)",
                            "disabled": "rgba(0, 0, 0, 0.26)",
                            "disabledBackground": "rgba(0, 0, 0, 0.12)",
                            "disabledOpacity": 0.38,
                            "focus": "rgba(0, 0, 0, 0.12)",
                            "focusOpacity": 0.12,
                            "hover": "rgba(0, 0, 0, 0.04)",
                            "hoverOpacity": 0.04,
                            "selected": "rgba(0, 0, 0, 0.08)",
                            "selectedOpacity": 0.08,
                          },
                          "augmentColor": [Function],
                          "background": Object {
                            "default": "#fafafa",
                            "paper": "#fff",
                          },
                          "common": Object {
                            "black": "#000",
                            "white": "#fff",
                          },
                          "contrastThreshold": 3,
                          "divider": "rgba(0, 0, 0, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "getContrastText": [Function],
                          "grey": Object {
                            "100": "#f5f5f5",
                            "200": "#eeeeee",
                            "300": "#e0e0e0",
                            "400": "#bdbdbd",
                            "50": "#fafafa",
                            "500": "#9e9e9e",
                            "600": "#757575",
                            "700": "#616161",
                            "800": "#424242",
                            "900": "#212121",
                            "A100": "#d5d5d5",
                            "A200": "#aaaaaa",
                            "A400": "#303030",
                            "A700": "#616161",
                          },
                          "info": Object {
                            "contrastText": "#fff",
                            "dark": "#1976d2",
                            "light": "#64b5f6",
                            "main": "#2196f3",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "success": Object {
                            "contrastText": "rgba(0, 0, 0, 0.87)",
                            "dark": "#388e3c",
                            "light": "#81c784",
                            "main": "#4caf50",
                          },
                          "text": Object {
                            "disabled": "rgba(0, 0, 0, 0.38)",
                            "hint": "rgba(0, 0, 0, 0.38)",
                            "primary": "rgba(0, 0, 0, 0.87)",
                            "secondary": "rgba(0, 0, 0, 0.54)",
                          },
                          "tonalOffset": 0.2,
                          "type": "light",
                          "warning": Object {
                            "contrastText": "rgba(0, 0, 0, 0.87)",
                            "dark": "#f57c00",
                            "light": "#ffb74d",
                            "main": "#ff9800",
                          },
                        },
                        "props": Object {},
                        "shadows": Array [
                          "none",
                          "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                          "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                          "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                          "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                          "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                          "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                          "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                          "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                          "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                          "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                          "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                          "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                          "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                          "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                          "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                          "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                          "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                          "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                        ],
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": [Function],
                        "transitions": Object {
                          "create": [Function],
                          "duration": Object {
                            "complex": 375,
                            "enteringScreen": 225,
                            "leavingScreen": 195,
                            "short": 250,
                            "shorter": 200,
                            "shortest": 150,
                            "standard": 300,
                          },
                          "easing": Object {
                            "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                            "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                            "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                            "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                          },
                          "getAutoHeightDuration": [Function],
                        },
                        "typography": Object {
                          "body1": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "1rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.00938em",
                            "lineHeight": 1.5,
                          },
                          "body2": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.875rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.01071em",
                            "lineHeight": 1.43,
                          },
                          "button": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.875rem",
                            "fontWeight": 500,
                            "letterSpacing": "0.02857em",
                            "lineHeight": 1.75,
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.75rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.03333em",
                            "lineHeight": 1.66,
                          },
                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                          "fontSize": 14,
                          "fontWeightBold": 700,
                          "fontWeightLight": 300,
                          "fontWeightMedium": 500,
                          "fontWeightRegular": 400,
                          "h1": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "6rem",
                            "fontWeight": 300,
                            "letterSpacing": "-0.01562em",
                            "lineHeight": 1.167,
                          },
                          "h2": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "3.75rem",
                            "fontWeight": 300,
                            "letterSpacing": "-0.00833em",
                            "lineHeight": 1.2,
                          },
                          "h3": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "3rem",
                            "fontWeight": 400,
                            "letterSpacing": "0em",
                            "lineHeight": 1.167,
                          },
                          "h4": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "2.125rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.00735em",
                            "lineHeight": 1.235,
                          },
                          "h5": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "1.5rem",
                            "fontWeight": 400,
                            "letterSpacing": "0em",
                            "lineHeight": 1.334,
                          },
                          "h6": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "1.25rem",
                            "fontWeight": 500,
                            "letterSpacing": "0.0075em",
                            "lineHeight": 1.6,
                          },
                          "htmlFontSize": 16,
                          "overline": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.75rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.08333em",
                            "lineHeight": 2.66,
                            "textTransform": "uppercase",
                          },
                          "pxToRem": [Function],
                          "round": [Function],
                          "subtitle1": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "1rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.00938em",
                            "lineHeight": 1.75,
                          },
                          "subtitle2": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.875rem",
                            "fontWeight": 500,
                            "letterSpacing": "0.00714em",
                            "lineHeight": 1.57,
                          },
                        },
                        "zIndex": Object {
                          "appBar": 1100,
                          "drawer": 1200,
                          "mobileStepper": 1000,
                          "modal": 1300,
                          "snackbar": 1400,
                          "speedDial": 1050,
                          "tooltip": 1500,
                        },
                      },
                      "name": "MuiBackdrop",
                    },
                    "propTypes": Object {
                      "classes": [Function],
                      "innerRef": [Function],
                    },
                    "render": [Function],
                    "useStyles": [Function],
                  }
                }
                BackdropProps={
                  Object {
                    "transitionDuration": Object {
                      "enter": 225,
                      "exit": 195,
                    },
                  }
                }
                className="MuiDialog-root"
                closeAfterTransition={true}
                color="primary"
                disableEscapeKeyDown={false}
                keepMounted={true}
                onClose={[Function]}
                open={true}
              >
                <ForwardRef(Portal)
                  disablePortal={false}
                >
                  <Portal
                    containerInfo={
                      <body
                        style="padding-right: 0px; overflow: hidden;"
                      >
                        <div
                          aria-hidden="true"
                          class="MuiPopover-root"
                          id="simple-menu"
                          role="presentation"
                          style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px; visibility: hidden;"
                        >
                          <div
                            data-test="sentinelStart"
                            tabindex="0"
                          />
                          <div
                            class="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                            style="opacity: 0; visibility: hidden;"
                            tabindex="-1"
                          >
                            <ul
                              class="MuiList-root MuiMenu-list MuiList-padding"
                              role="menu"
                              tabindex="-1"
                            >
                              <li
                                aria-disabled="false"
                                class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_edit MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                role="menuitem"
                                tabindex="0"
                              >
                                Редактировать
                                <span
                                  class="MuiTouchRipple-root"
                                />
                              </li>
                              <li
                                aria-disabled="false"
                                class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_delete MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                role="menuitem"
                                tabindex="-1"
                              >
                                Удалить
                                <span
                                  class="MuiTouchRipple-root"
                                />
                              </li>
                            </ul>
                          </div>
                          <div
                            data-test="sentinelEnd"
                            tabindex="0"
                          />
                        </div>
                        <div
                          class="MuiDialog-root"
                          color="primary"
                          role="presentation"
                          style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                        >
                          <div
                            aria-hidden="true"
                            class="MuiBackdrop-root"
                            style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                          />
                          <div
                            data-test="sentinelStart"
                            tabindex="0"
                          />
                          <div
                            class="MuiDialog-container MuiDialog-scrollPaper"
                            role="none presentation"
                            style="webkit-transform: none; transform: none; webkit-transition: -webkit-transform 225ms cubic-bezier(0.0, 0, 0.2, 1) 0ms; transition: transform 225ms cubic-bezier(0.0, 0, 0.2, 1) 0ms;"
                            tabindex="-1"
                          >
                            <div
                              aria-describedby="alert-dialog-slide-description"
                              aria-labelledby="alert-dialog-slide-title"
                              class="MuiPaper-root MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiPaper-elevation24 MuiPaper-rounded"
                              role="dialog"
                            >
                              <div
                                class="MuiDialogTitle-root EditToDoListItem__title"
                                id="alert-dialog-slide-title"
                              >
                                <h2
                                  class="MuiTypography-root MuiTypography-h6"
                                >
                                  Новый список
                                </h2>
                              </div>
                              <div
                                class="MuiDialogContent-root"
                              >
                                <div
                                  class="MuiFormControl-root MuiTextField-root MuiFormControl-marginDense MuiFormControl-fullWidth"
                                >
                                  <label
                                    class="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-marginDense MuiFormLabel-filled Mui-focused Mui-focused"
                                    data-shrink="true"
                                    for="name"
                                    id="name-label"
                                  >
                                    Название списка
                                  </label>
                                  <div
                                    class="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-fullWidth MuiInput-fullWidth Mui-focused Mui-focused MuiInputBase-formControl MuiInput-formControl MuiInputBase-marginDense MuiInput-marginDense"
                                  >
                                    <input
                                      aria-invalid="false"
                                      autocomplete="off"
                                      class="MuiInputBase-input MuiInput-input MuiInputBase-inputMarginDense MuiInput-inputMarginDense"
                                      id="name"
                                      maxlength="40"
                                      type="text"
                                      value="Мой новый список"
                                    />
                                  </div>
                                </div>
                              </div>
                              <div
                                class="MuiDialogActions-root MuiDialogActions-spacing"
                              >
                                <button
                                  class="MuiButtonBase-root MuiButton-root MuiButton-contained"
                                  tabindex="0"
                                  type="button"
                                >
                                  <span
                                    class="MuiButton-label"
                                  >
                                    Отменить
                                  </span>
                                  <span
                                    class="MuiTouchRipple-root"
                                  />
                                </button>
                                <button
                                  class="MuiButtonBase-root MuiButton-root MuiButton-contained saveButton MuiButton-containedPrimary"
                                  tabindex="0"
                                  type="button"
                                >
                                  <span
                                    class="MuiButton-label"
                                  >
                                    <span
                                      class="MuiButton-startIcon MuiButton-iconSizeMedium"
                                    >
                                      <svg
                                        aria-hidden="true"
                                        class="MuiSvgIcon-root"
                                        focusable="false"
                                        viewBox="0 0 24 24"
                                      >
                                        <path
                                          d="M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z"
                                        />
                                      </svg>
                                    </span>
                                    Сохранить
                                  </span>
                                  <span
                                    class="MuiTouchRipple-root"
                                  />
                                </button>
                              </div>
                            </div>
                          </div>
                          <div
                            data-test="sentinelEnd"
                            tabindex="0"
                          />
                        </div>
                      </body>
                    }
                  >
                    <div
                      className="MuiDialog-root"
                      color="primary"
                      onKeyDown={[Function]}
                      role="presentation"
                      style={
                        Object {
                          "bottom": 0,
                          "left": 0,
                          "position": "fixed",
                          "right": 0,
                          "top": 0,
                          "zIndex": 1300,
                        }
                      }
                    >
                      <WithStyles(ForwardRef(Backdrop))
                        onClick={[Function]}
                        open={true}
                        transitionDuration={
                          Object {
                            "enter": 225,
                            "exit": 195,
                          }
                        }
                      >
                        <ForwardRef(Backdrop)
                          classes={
                            Object {
                              "invisible": "MuiBackdrop-invisible",
                              "root": "MuiBackdrop-root",
                            }
                          }
                          onClick={[Function]}
                          open={true}
                          transitionDuration={
                            Object {
                              "enter": 225,
                              "exit": 195,
                            }
                          }
                        >
                          <ForwardRef(Fade)
                            in={true}
                            onClick={[Function]}
                            timeout={
                              Object {
                                "enter": 225,
                                "exit": 195,
                              }
                            }
                          >
                            <Transition
                              appear={true}
                              enter={true}
                              exit={true}
                              in={true}
                              mountOnEnter={false}
                              onClick={[Function]}
                              onEnter={[Function]}
                              onEntered={[Function]}
                              onEntering={[Function]}
                              onExit={[Function]}
                              onExited={[Function]}
                              onExiting={[Function]}
                              timeout={
                                Object {
                                  "enter": 225,
                                  "exit": 195,
                                }
                              }
                              unmountOnExit={false}
                            >
                              <div
                                aria-hidden={true}
                                className="MuiBackdrop-root"
                                onClick={[Function]}
                                style={
                                  Object {
                                    "opacity": 1,
                                    "visibility": undefined,
                                  }
                                }
                              />
                            </Transition>
                          </ForwardRef(Fade)>
                        </ForwardRef(Backdrop)>
                      </WithStyles(ForwardRef(Backdrop))>
                      <Unstable_TrapFocus
                        disableAutoFocus={false}
                        disableEnforceFocus={false}
                        disableRestoreFocus={false}
                        getDoc={[Function]}
                        isEnabled={[Function]}
                        open={true}
                      >
                        <div
                          data-test="sentinelStart"
                          tabIndex={0}
                        />
                        <ForwardRef
                          appear={true}
                          in={true}
                          onEnter={[Function]}
                          onExited={[Function]}
                          role="none presentation"
                          tabIndex="-1"
                          timeout={
                            Object {
                              "enter": 225,
                              "exit": 195,
                            }
                          }
                        >
                          <ForwardRef(Slide)
                            appear={true}
                            direction="up"
                            in={true}
                            onEnter={[Function]}
                            onExited={[Function]}
                            role="none presentation"
                            tabIndex="-1"
                            timeout={
                              Object {
                                "enter": 225,
                                "exit": 195,
                              }
                            }
                          >
                            <Transition
                              appear={true}
                              enter={true}
                              exit={true}
                              in={true}
                              mountOnEnter={false}
                              nodeRef={
                                Object {
                                  "current": <div
                                    class="MuiDialog-container MuiDialog-scrollPaper"
                                    role="none presentation"
                                    style="webkit-transform: none; transform: none; webkit-transition: -webkit-transform 225ms cubic-bezier(0.0, 0, 0.2, 1) 0ms; transition: transform 225ms cubic-bezier(0.0, 0, 0.2, 1) 0ms;"
                                    tabindex="-1"
                                  >
                                    <div
                                      aria-describedby="alert-dialog-slide-description"
                                      aria-labelledby="alert-dialog-slide-title"
                                      class="MuiPaper-root MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiPaper-elevation24 MuiPaper-rounded"
                                      role="dialog"
                                    >
                                      <div
                                        class="MuiDialogTitle-root EditToDoListItem__title"
                                        id="alert-dialog-slide-title"
                                      >
                                        <h2
                                          class="MuiTypography-root MuiTypography-h6"
                                        >
                                          Новый список
                                        </h2>
                                      </div>
                                      <div
                                        class="MuiDialogContent-root"
                                      >
                                        <div
                                          class="MuiFormControl-root MuiTextField-root MuiFormControl-marginDense MuiFormControl-fullWidth"
                                        >
                                          <label
                                            class="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-marginDense MuiFormLabel-filled Mui-focused Mui-focused"
                                            data-shrink="true"
                                            for="name"
                                            id="name-label"
                                          >
                                            Название списка
                                          </label>
                                          <div
                                            class="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-fullWidth MuiInput-fullWidth Mui-focused Mui-focused MuiInputBase-formControl MuiInput-formControl MuiInputBase-marginDense MuiInput-marginDense"
                                          >
                                            <input
                                              aria-invalid="false"
                                              autocomplete="off"
                                              class="MuiInputBase-input MuiInput-input MuiInputBase-inputMarginDense MuiInput-inputMarginDense"
                                              id="name"
                                              maxlength="40"
                                              type="text"
                                              value="Мой новый список"
                                            />
                                          </div>
                                        </div>
                                      </div>
                                      <div
                                        class="MuiDialogActions-root MuiDialogActions-spacing"
                                      >
                                        <button
                                          class="MuiButtonBase-root MuiButton-root MuiButton-contained"
                                          tabindex="0"
                                          type="button"
                                        >
                                          <span
                                            class="MuiButton-label"
                                          >
                                            Отменить
                                          </span>
                                          <span
                                            class="MuiTouchRipple-root"
                                          />
                                        </button>
                                        <button
                                          class="MuiButtonBase-root MuiButton-root MuiButton-contained saveButton MuiButton-containedPrimary"
                                          tabindex="0"
                                          type="button"
                                        >
                                          <span
                                            class="MuiButton-label"
                                          >
                                            <span
                                              class="MuiButton-startIcon MuiButton-iconSizeMedium"
                                            >
                                              <svg
                                                aria-hidden="true"
                                                class="MuiSvgIcon-root"
                                                focusable="false"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z"
                                                />
                                              </svg>
                                            </span>
                                            Сохранить
                                          </span>
                                          <span
                                            class="MuiTouchRipple-root"
                                          />
                                        </button>
                                      </div>
                                    </div>
                                  </div>,
                                }
                              }
                              onEnter={[Function]}
                              onEntered={[Function]}
                              onEntering={[Function]}
                              onExit={[Function]}
                              onExited={[Function]}
                              onExiting={[Function]}
                              role="none presentation"
                              tabIndex="-1"
                              timeout={
                                Object {
                                  "enter": 225,
                                  "exit": 195,
                                }
                              }
                              unmountOnExit={false}
                            >
                              <div
                                className="MuiDialog-container MuiDialog-scrollPaper"
                                onMouseDown={[Function]}
                                onMouseUp={[Function]}
                                role="none presentation"
                                style={
                                  Object {
                                    "visibility": undefined,
                                  }
                                }
                                tabIndex="-1"
                              >
                                <WithStyles(ForwardRef(Paper))
                                  aria-describedby="alert-dialog-slide-description"
                                  aria-labelledby="alert-dialog-slide-title"
                                  className="MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm"
                                  elevation={24}
                                  role="dialog"
                                >
                                  <ForwardRef(Paper)
                                    aria-describedby="alert-dialog-slide-description"
                                    aria-labelledby="alert-dialog-slide-title"
                                    className="MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm"
                                    classes={
                                      Object {
                                        "elevation0": "MuiPaper-elevation0",
                                        "elevation1": "MuiPaper-elevation1",
                                        "elevation10": "MuiPaper-elevation10",
                                        "elevation11": "MuiPaper-elevation11",
                                        "elevation12": "MuiPaper-elevation12",
                                        "elevation13": "MuiPaper-elevation13",
                                        "elevation14": "MuiPaper-elevation14",
                                        "elevation15": "MuiPaper-elevation15",
                                        "elevation16": "MuiPaper-elevation16",
                                        "elevation17": "MuiPaper-elevation17",
                                        "elevation18": "MuiPaper-elevation18",
                                        "elevation19": "MuiPaper-elevation19",
                                        "elevation2": "MuiPaper-elevation2",
                                        "elevation20": "MuiPaper-elevation20",
                                        "elevation21": "MuiPaper-elevation21",
                                        "elevation22": "MuiPaper-elevation22",
                                        "elevation23": "MuiPaper-elevation23",
                                        "elevation24": "MuiPaper-elevation24",
                                        "elevation3": "MuiPaper-elevation3",
                                        "elevation4": "MuiPaper-elevation4",
                                        "elevation5": "MuiPaper-elevation5",
                                        "elevation6": "MuiPaper-elevation6",
                                        "elevation7": "MuiPaper-elevation7",
                                        "elevation8": "MuiPaper-elevation8",
                                        "elevation9": "MuiPaper-elevation9",
                                        "outlined": "MuiPaper-outlined",
                                        "root": "MuiPaper-root",
                                        "rounded": "MuiPaper-rounded",
                                      }
                                    }
                                    elevation={24}
                                    role="dialog"
                                  >
                                    <div
                                      aria-describedby="alert-dialog-slide-description"
                                      aria-labelledby="alert-dialog-slide-title"
                                      className="MuiPaper-root MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiPaper-elevation24 MuiPaper-rounded"
                                      role="dialog"
                                    >
                                      <WithStyles(ForwardRef(DialogTitle))
                                        className="EditToDoListItem__title"
                                        id="alert-dialog-slide-title"
                                      >
                                        <ForwardRef(DialogTitle)
                                          className="EditToDoListItem__title"
                                          classes={
                                            Object {
                                              "root": "MuiDialogTitle-root",
                                            }
                                          }
                                          id="alert-dialog-slide-title"
                                        >
                                          <div
                                            className="MuiDialogTitle-root EditToDoListItem__title"
                                            id="alert-dialog-slide-title"
                                          >
                                            <WithStyles(ForwardRef(Typography))
                                              component="h2"
                                              variant="h6"
                                            >
                                              <ForwardRef(Typography)
                                                classes={
                                                  Object {
                                                    "alignCenter": "MuiTypography-alignCenter",
                                                    "alignJustify": "MuiTypography-alignJustify",
                                                    "alignLeft": "MuiTypography-alignLeft",
                                                    "alignRight": "MuiTypography-alignRight",
                                                    "body1": "MuiTypography-body1",
                                                    "body2": "MuiTypography-body2",
                                                    "button": "MuiTypography-button",
                                                    "caption": "MuiTypography-caption",
                                                    "colorError": "MuiTypography-colorError",
                                                    "colorInherit": "MuiTypography-colorInherit",
                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                    "displayBlock": "MuiTypography-displayBlock",
                                                    "displayInline": "MuiTypography-displayInline",
                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                    "h1": "MuiTypography-h1",
                                                    "h2": "MuiTypography-h2",
                                                    "h3": "MuiTypography-h3",
                                                    "h4": "MuiTypography-h4",
                                                    "h5": "MuiTypography-h5",
                                                    "h6": "MuiTypography-h6",
                                                    "noWrap": "MuiTypography-noWrap",
                                                    "overline": "MuiTypography-overline",
                                                    "paragraph": "MuiTypography-paragraph",
                                                    "root": "MuiTypography-root",
                                                    "srOnly": "MuiTypography-srOnly",
                                                    "subtitle1": "MuiTypography-subtitle1",
                                                    "subtitle2": "MuiTypography-subtitle2",
                                                  }
                                                }
                                                component="h2"
                                                variant="h6"
                                              >
                                                <h2
                                                  className="MuiTypography-root MuiTypography-h6"
                                                >
                                                  Новый список
                                                </h2>
                                              </ForwardRef(Typography)>
                                            </WithStyles(ForwardRef(Typography))>
                                          </div>
                                        </ForwardRef(DialogTitle)>
                                      </WithStyles(ForwardRef(DialogTitle))>
                                      <WithStyles(ForwardRef(DialogContent))>
                                        <ForwardRef(DialogContent)
                                          classes={
                                            Object {
                                              "dividers": "MuiDialogContent-dividers",
                                              "root": "MuiDialogContent-root",
                                            }
                                          }
                                        >
                                          <div
                                            className="MuiDialogContent-root"
                                          >
                                            <WithStyles(ForwardRef(TextField))
                                              autoComplete="off"
                                              autoFocus={true}
                                              color="primary"
                                              fullWidth={true}
                                              id="name"
                                              inputProps={
                                                Object {
                                                  "maxLength": "40",
                                                }
                                              }
                                              label="Название списка"
                                              margin="dense"
                                              onChange={[Function]}
                                              onKeyPress={[Function]}
                                              type="text"
                                              value="Мой новый список"
                                            >
                                              <ForwardRef(TextField)
                                                autoComplete="off"
                                                autoFocus={true}
                                                classes={
                                                  Object {
                                                    "root": "MuiTextField-root",
                                                  }
                                                }
                                                color="primary"
                                                fullWidth={true}
                                                id="name"
                                                inputProps={
                                                  Object {
                                                    "maxLength": "40",
                                                  }
                                                }
                                                label="Название списка"
                                                margin="dense"
                                                onChange={[Function]}
                                                onKeyPress={[Function]}
                                                type="text"
                                                value="Мой новый список"
                                              >
                                                <WithStyles(ForwardRef(FormControl))
                                                  className="MuiTextField-root"
                                                  color="primary"
                                                  disabled={false}
                                                  error={false}
                                                  fullWidth={true}
                                                  margin="dense"
                                                  onKeyPress={[Function]}
                                                  required={false}
                                                  variant="standard"
                                                >
                                                  <ForwardRef(FormControl)
                                                    className="MuiTextField-root"
                                                    classes={
                                                      Object {
                                                        "fullWidth": "MuiFormControl-fullWidth",
                                                        "marginDense": "MuiFormControl-marginDense",
                                                        "marginNormal": "MuiFormControl-marginNormal",
                                                        "root": "MuiFormControl-root",
                                                      }
                                                    }
                                                    color="primary"
                                                    disabled={false}
                                                    error={false}
                                                    fullWidth={true}
                                                    margin="dense"
                                                    onKeyPress={[Function]}
                                                    required={false}
                                                    variant="standard"
                                                  >
                                                    <div
                                                      className="MuiFormControl-root MuiTextField-root MuiFormControl-marginDense MuiFormControl-fullWidth"
                                                      onKeyPress={[Function]}
                                                    >
                                                      <WithStyles(ForwardRef(InputLabel))
                                                        htmlFor="name"
                                                        id="name-label"
                                                      >
                                                        <ForwardRef(InputLabel)
                                                          classes={
                                                            Object {
                                                              "animated": "MuiInputLabel-animated",
                                                              "asterisk": "MuiInputLabel-asterisk",
                                                              "disabled": "Mui-disabled",
                                                              "error": "Mui-error",
                                                              "filled": "MuiInputLabel-filled",
                                                              "focused": "Mui-focused",
                                                              "formControl": "MuiInputLabel-formControl",
                                                              "marginDense": "MuiInputLabel-marginDense",
                                                              "outlined": "MuiInputLabel-outlined",
                                                              "required": "Mui-required",
                                                              "root": "MuiInputLabel-root",
                                                              "shrink": "MuiInputLabel-shrink",
                                                            }
                                                          }
                                                          htmlFor="name"
                                                          id="name-label"
                                                        >
                                                          <WithStyles(ForwardRef(FormLabel))
                                                            className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-marginDense"
                                                            classes={
                                                              Object {
                                                                "asterisk": "MuiInputLabel-asterisk",
                                                                "disabled": "Mui-disabled",
                                                                "error": "Mui-error",
                                                                "focused": "Mui-focused",
                                                                "required": "Mui-required",
                                                              }
                                                            }
                                                            data-shrink={true}
                                                            htmlFor="name"
                                                            id="name-label"
                                                          >
                                                            <ForwardRef(FormLabel)
                                                              className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-marginDense"
                                                              classes={
                                                                Object {
                                                                  "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                                                  "colorSecondary": "MuiFormLabel-colorSecondary",
                                                                  "disabled": "Mui-disabled Mui-disabled",
                                                                  "error": "Mui-error Mui-error",
                                                                  "filled": "MuiFormLabel-filled",
                                                                  "focused": "Mui-focused Mui-focused",
                                                                  "required": "Mui-required Mui-required",
                                                                  "root": "MuiFormLabel-root",
                                                                }
                                                              }
                                                              data-shrink={true}
                                                              htmlFor="name"
                                                              id="name-label"
                                                            >
                                                              <label
                                                                className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-marginDense MuiFormLabel-filled Mui-focused Mui-focused"
                                                                data-shrink={true}
                                                                htmlFor="name"
                                                                id="name-label"
                                                              >
                                                                Название списка
                                                              </label>
                                                            </ForwardRef(FormLabel)>
                                                          </WithStyles(ForwardRef(FormLabel))>
                                                        </ForwardRef(InputLabel)>
                                                      </WithStyles(ForwardRef(InputLabel))>
                                                      <WithStyles(ForwardRef(Input))
                                                        autoComplete="off"
                                                        autoFocus={true}
                                                        fullWidth={true}
                                                        id="name"
                                                        inputProps={
                                                          Object {
                                                            "maxLength": "40",
                                                          }
                                                        }
                                                        multiline={false}
                                                        onChange={[Function]}
                                                        type="text"
                                                        value="Мой новый список"
                                                      >
                                                        <ForwardRef(Input)
                                                          autoComplete="off"
                                                          autoFocus={true}
                                                          classes={
                                                            Object {
                                                              "colorSecondary": "MuiInput-colorSecondary",
                                                              "disabled": "Mui-disabled",
                                                              "error": "Mui-error",
                                                              "focused": "Mui-focused",
                                                              "formControl": "MuiInput-formControl",
                                                              "fullWidth": "MuiInput-fullWidth",
                                                              "input": "MuiInput-input",
                                                              "inputMarginDense": "MuiInput-inputMarginDense",
                                                              "inputMultiline": "MuiInput-inputMultiline",
                                                              "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                              "marginDense": "MuiInput-marginDense",
                                                              "multiline": "MuiInput-multiline",
                                                              "root": "MuiInput-root",
                                                              "underline": "MuiInput-underline",
                                                            }
                                                          }
                                                          fullWidth={true}
                                                          id="name"
                                                          inputProps={
                                                            Object {
                                                              "maxLength": "40",
                                                            }
                                                          }
                                                          multiline={false}
                                                          onChange={[Function]}
                                                          type="text"
                                                          value="Мой новый список"
                                                        >
                                                          <WithStyles(ForwardRef(InputBase))
                                                            autoComplete="off"
                                                            autoFocus={true}
                                                            classes={
                                                              Object {
                                                                "colorSecondary": "MuiInput-colorSecondary",
                                                                "disabled": "Mui-disabled",
                                                                "error": "Mui-error",
                                                                "focused": "Mui-focused",
                                                                "formControl": "MuiInput-formControl",
                                                                "fullWidth": "MuiInput-fullWidth",
                                                                "input": "MuiInput-input",
                                                                "inputMarginDense": "MuiInput-inputMarginDense",
                                                                "inputMultiline": "MuiInput-inputMultiline",
                                                                "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                                "marginDense": "MuiInput-marginDense",
                                                                "multiline": "MuiInput-multiline",
                                                                "root": "MuiInput-root MuiInput-underline",
                                                                "underline": null,
                                                              }
                                                            }
                                                            fullWidth={true}
                                                            id="name"
                                                            inputComponent="input"
                                                            inputProps={
                                                              Object {
                                                                "maxLength": "40",
                                                              }
                                                            }
                                                            multiline={false}
                                                            onChange={[Function]}
                                                            type="text"
                                                            value="Мой новый список"
                                                          >
                                                            <ForwardRef(InputBase)
                                                              autoComplete="off"
                                                              autoFocus={true}
                                                              classes={
                                                                Object {
                                                                  "adornedEnd": "MuiInputBase-adornedEnd",
                                                                  "adornedStart": "MuiInputBase-adornedStart",
                                                                  "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                                  "disabled": "Mui-disabled Mui-disabled",
                                                                  "error": "Mui-error Mui-error",
                                                                  "focused": "Mui-focused Mui-focused",
                                                                  "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                                  "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                                  "input": "MuiInputBase-input MuiInput-input",
                                                                  "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                                  "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                                  "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                                  "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                                  "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                                  "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                                  "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                                  "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                                  "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                                }
                                                              }
                                                              fullWidth={true}
                                                              id="name"
                                                              inputComponent="input"
                                                              inputProps={
                                                                Object {
                                                                  "maxLength": "40",
                                                                }
                                                              }
                                                              multiline={false}
                                                              onChange={[Function]}
                                                              type="text"
                                                              value="Мой новый список"
                                                            >
                                                              <div
                                                                className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-fullWidth MuiInput-fullWidth Mui-focused Mui-focused MuiInputBase-formControl MuiInput-formControl MuiInputBase-marginDense MuiInput-marginDense"
                                                                onClick={[Function]}
                                                              >
                                                                <input
                                                                  aria-invalid={false}
                                                                  autoComplete="off"
                                                                  autoFocus={true}
                                                                  className="MuiInputBase-input MuiInput-input MuiInputBase-inputMarginDense MuiInput-inputMarginDense"
                                                                  disabled={false}
                                                                  id="name"
                                                                  maxLength="40"
                                                                  onAnimationStart={[Function]}
                                                                  onBlur={[Function]}
                                                                  onChange={[Function]}
                                                                  onFocus={[Function]}
                                                                  required={false}
                                                                  type="text"
                                                                  value="Мой новый список"
                                                                />
                                                              </div>
                                                            </ForwardRef(InputBase)>
                                                          </WithStyles(ForwardRef(InputBase))>
                                                        </ForwardRef(Input)>
                                                      </WithStyles(ForwardRef(Input))>
                                                    </div>
                                                  </ForwardRef(FormControl)>
                                                </WithStyles(ForwardRef(FormControl))>
                                              </ForwardRef(TextField)>
                                            </WithStyles(ForwardRef(TextField))>
                                          </div>
                                        </ForwardRef(DialogContent)>
                                      </WithStyles(ForwardRef(DialogContent))>
                                      <WithStyles(ForwardRef(DialogActions))>
                                        <ForwardRef(DialogActions)
                                          classes={
                                            Object {
                                              "root": "MuiDialogActions-root",
                                              "spacing": "MuiDialogActions-spacing",
                                            }
                                          }
                                        >
                                          <div
                                            className="MuiDialogActions-root MuiDialogActions-spacing"
                                          >
                                            <WithStyles(ForwardRef(Button))
                                              onClick={[Function]}
                                              size="medium"
                                              variant="contained"
                                            >
                                              <ForwardRef(Button)
                                                classes={
                                                  Object {
                                                    "colorInherit": "MuiButton-colorInherit",
                                                    "contained": "MuiButton-contained",
                                                    "containedPrimary": "MuiButton-containedPrimary",
                                                    "containedSecondary": "MuiButton-containedSecondary",
                                                    "containedSizeLarge": "MuiButton-containedSizeLarge",
                                                    "containedSizeSmall": "MuiButton-containedSizeSmall",
                                                    "disableElevation": "MuiButton-disableElevation",
                                                    "disabled": "Mui-disabled",
                                                    "endIcon": "MuiButton-endIcon",
                                                    "focusVisible": "Mui-focusVisible",
                                                    "fullWidth": "MuiButton-fullWidth",
                                                    "iconSizeLarge": "MuiButton-iconSizeLarge",
                                                    "iconSizeMedium": "MuiButton-iconSizeMedium",
                                                    "iconSizeSmall": "MuiButton-iconSizeSmall",
                                                    "label": "MuiButton-label",
                                                    "outlined": "MuiButton-outlined",
                                                    "outlinedPrimary": "MuiButton-outlinedPrimary",
                                                    "outlinedSecondary": "MuiButton-outlinedSecondary",
                                                    "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                                    "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                                    "root": "MuiButton-root",
                                                    "sizeLarge": "MuiButton-sizeLarge",
                                                    "sizeSmall": "MuiButton-sizeSmall",
                                                    "startIcon": "MuiButton-startIcon",
                                                    "text": "MuiButton-text",
                                                    "textPrimary": "MuiButton-textPrimary",
                                                    "textSecondary": "MuiButton-textSecondary",
                                                    "textSizeLarge": "MuiButton-textSizeLarge",
                                                    "textSizeSmall": "MuiButton-textSizeSmall",
                                                  }
                                                }
                                                onClick={[Function]}
                                                size="medium"
                                                variant="contained"
                                              >
                                                <WithStyles(ForwardRef(ButtonBase))
                                                  className="MuiButton-root MuiButton-contained"
                                                  component="button"
                                                  disabled={false}
                                                  focusRipple={true}
                                                  focusVisibleClassName="Mui-focusVisible"
                                                  onClick={[Function]}
                                                  type="button"
                                                >
                                                  <ForwardRef(ButtonBase)
                                                    className="MuiButton-root MuiButton-contained"
                                                    classes={
                                                      Object {
                                                        "disabled": "Mui-disabled",
                                                        "focusVisible": "Mui-focusVisible",
                                                        "root": "MuiButtonBase-root",
                                                      }
                                                    }
                                                    component="button"
                                                    disabled={false}
                                                    focusRipple={true}
                                                    focusVisibleClassName="Mui-focusVisible"
                                                    onClick={[Function]}
                                                    type="button"
                                                  >
                                                    <button
                                                      className="MuiButtonBase-root MuiButton-root MuiButton-contained"
                                                      disabled={false}
                                                      onBlur={[Function]}
                                                      onClick={[Function]}
                                                      onDragLeave={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyDown={[Function]}
                                                      onKeyUp={[Function]}
                                                      onMouseDown={[Function]}
                                                      onMouseLeave={[Function]}
                                                      onMouseUp={[Function]}
                                                      onTouchEnd={[Function]}
                                                      onTouchMove={[Function]}
                                                      onTouchStart={[Function]}
                                                      tabIndex={0}
                                                      type="button"
                                                    >
                                                      <span
                                                        className="MuiButton-label"
                                                      >
                                                        Отменить
                                                      </span>
                                                      <WithStyles(memo)
                                                        center={false}
                                                      >
                                                        <ForwardRef(TouchRipple)
                                                          center={false}
                                                          classes={
                                                            Object {
                                                              "child": "MuiTouchRipple-child",
                                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                                              "ripple": "MuiTouchRipple-ripple",
                                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                              "root": "MuiTouchRipple-root",
                                                            }
                                                          }
                                                        >
                                                          <span
                                                            className="MuiTouchRipple-root"
                                                          >
                                                            <TransitionGroup
                                                              childFactory={[Function]}
                                                              component={null}
                                                              exit={true}
                                                            />
                                                          </span>
                                                        </ForwardRef(TouchRipple)>
                                                      </WithStyles(memo)>
                                                    </button>
                                                  </ForwardRef(ButtonBase)>
                                                </WithStyles(ForwardRef(ButtonBase))>
                                              </ForwardRef(Button)>
                                            </WithStyles(ForwardRef(Button))>
                                            <WithStyles(ForwardRef(Button))
                                              className="saveButton"
                                              color="primary"
                                              disabled={false}
                                              onClick={[Function]}
                                              size="medium"
                                              startIcon={<Memo />}
                                              variant="contained"
                                            >
                                              <ForwardRef(Button)
                                                className="saveButton"
                                                classes={
                                                  Object {
                                                    "colorInherit": "MuiButton-colorInherit",
                                                    "contained": "MuiButton-contained",
                                                    "containedPrimary": "MuiButton-containedPrimary",
                                                    "containedSecondary": "MuiButton-containedSecondary",
                                                    "containedSizeLarge": "MuiButton-containedSizeLarge",
                                                    "containedSizeSmall": "MuiButton-containedSizeSmall",
                                                    "disableElevation": "MuiButton-disableElevation",
                                                    "disabled": "Mui-disabled",
                                                    "endIcon": "MuiButton-endIcon",
                                                    "focusVisible": "Mui-focusVisible",
                                                    "fullWidth": "MuiButton-fullWidth",
                                                    "iconSizeLarge": "MuiButton-iconSizeLarge",
                                                    "iconSizeMedium": "MuiButton-iconSizeMedium",
                                                    "iconSizeSmall": "MuiButton-iconSizeSmall",
                                                    "label": "MuiButton-label",
                                                    "outlined": "MuiButton-outlined",
                                                    "outlinedPrimary": "MuiButton-outlinedPrimary",
                                                    "outlinedSecondary": "MuiButton-outlinedSecondary",
                                                    "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                                    "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                                    "root": "MuiButton-root",
                                                    "sizeLarge": "MuiButton-sizeLarge",
                                                    "sizeSmall": "MuiButton-sizeSmall",
                                                    "startIcon": "MuiButton-startIcon",
                                                    "text": "MuiButton-text",
                                                    "textPrimary": "MuiButton-textPrimary",
                                                    "textSecondary": "MuiButton-textSecondary",
                                                    "textSizeLarge": "MuiButton-textSizeLarge",
                                                    "textSizeSmall": "MuiButton-textSizeSmall",
                                                  }
                                                }
                                                color="primary"
                                                disabled={false}
                                                onClick={[Function]}
                                                size="medium"
                                                startIcon={<Memo />}
                                                variant="contained"
                                              >
                                                <WithStyles(ForwardRef(ButtonBase))
                                                  className="MuiButton-root MuiButton-contained saveButton MuiButton-containedPrimary"
                                                  component="button"
                                                  disabled={false}
                                                  focusRipple={true}
                                                  focusVisibleClassName="Mui-focusVisible"
                                                  onClick={[Function]}
                                                  type="button"
                                                >
                                                  <ForwardRef(ButtonBase)
                                                    className="MuiButton-root MuiButton-contained saveButton MuiButton-containedPrimary"
                                                    classes={
                                                      Object {
                                                        "disabled": "Mui-disabled",
                                                        "focusVisible": "Mui-focusVisible",
                                                        "root": "MuiButtonBase-root",
                                                      }
                                                    }
                                                    component="button"
                                                    disabled={false}
                                                    focusRipple={true}
                                                    focusVisibleClassName="Mui-focusVisible"
                                                    onClick={[Function]}
                                                    type="button"
                                                  >
                                                    <button
                                                      className="MuiButtonBase-root MuiButton-root MuiButton-contained saveButton MuiButton-containedPrimary"
                                                      disabled={false}
                                                      onBlur={[Function]}
                                                      onClick={[Function]}
                                                      onDragLeave={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyDown={[Function]}
                                                      onKeyUp={[Function]}
                                                      onMouseDown={[Function]}
                                                      onMouseLeave={[Function]}
                                                      onMouseUp={[Function]}
                                                      onTouchEnd={[Function]}
                                                      onTouchMove={[Function]}
                                                      onTouchStart={[Function]}
                                                      tabIndex={0}
                                                      type="button"
                                                    >
                                                      <span
                                                        className="MuiButton-label"
                                                      >
                                                        <span
                                                          className="MuiButton-startIcon MuiButton-iconSizeMedium"
                                                        >
                                                          <ForwardRef(SaveIcon)>
                                                            <WithStyles(ForwardRef(SvgIcon))>
                                                              <ForwardRef(SvgIcon)
                                                                classes={
                                                                  Object {
                                                                    "colorAction": "MuiSvgIcon-colorAction",
                                                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                    "colorError": "MuiSvgIcon-colorError",
                                                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                    "root": "MuiSvgIcon-root",
                                                                  }
                                                                }
                                                              >
                                                                <svg
                                                                  aria-hidden={true}
                                                                  className="MuiSvgIcon-root"
                                                                  focusable="false"
                                                                  viewBox="0 0 24 24"
                                                                >
                                                                  <path
                                                                    d="M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z"
                                                                  />
                                                                </svg>
                                                              </ForwardRef(SvgIcon)>
                                                            </WithStyles(ForwardRef(SvgIcon))>
                                                          </ForwardRef(SaveIcon)>
                                                        </span>
                                                        Сохранить
                                                      </span>
                                                      <WithStyles(memo)
                                                        center={false}
                                                      >
                                                        <ForwardRef(TouchRipple)
                                                          center={false}
                                                          classes={
                                                            Object {
                                                              "child": "MuiTouchRipple-child",
                                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                                              "ripple": "MuiTouchRipple-ripple",
                                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                              "root": "MuiTouchRipple-root",
                                                            }
                                                          }
                                                        >
                                                          <span
                                                            className="MuiTouchRipple-root"
                                                          >
                                                            <TransitionGroup
                                                              childFactory={[Function]}
                                                              component={null}
                                                              exit={true}
                                                            />
                                                          </span>
                                                        </ForwardRef(TouchRipple)>
                                                      </WithStyles(memo)>
                                                    </button>
                                                  </ForwardRef(ButtonBase)>
                                                </WithStyles(ForwardRef(ButtonBase))>
                                              </ForwardRef(Button)>
                                            </WithStyles(ForwardRef(Button))>
                                          </div>
                                        </ForwardRef(DialogActions)>
                                      </WithStyles(ForwardRef(DialogActions))>
                                    </div>
                                  </ForwardRef(Paper)>
                                </WithStyles(ForwardRef(Paper))>
                              </div>
                            </Transition>
                          </ForwardRef(Slide)>
                        </ForwardRef>
                        <div
                          data-test="sentinelEnd"
                          tabIndex={0}
                        />
                      </Unstable_TrapFocus>
                    </div>
                  </Portal>
                </ForwardRef(Portal)>
              </ForwardRef(Modal)>
            </ForwardRef(Dialog)>
          </WithStyles(ForwardRef(Dialog))>
        </Memo(EditForm)>
      </div>
    </Memo(Lists)>
  </Connect(Component)>
</Provider>
`;

exports[`Checking adding a list 4`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(Component)>
    <Memo(Lists)
      addToDoListAC={[Function]}
      lists={
        Array [
          Object {
            "id": 1,
            "label": "Магазин",
            "toDoList": Array [],
          },
        ]
      }
      updateActiveTodoListIdAC={[Function]}
    >
      <div
        className="lists__close-wrapper null"
        onClick={[Function]}
      />
      <div
        className="lists null"
      >
        <input
          checked={false}
          className="hidden-menu-ticker"
          id="hmt"
          readOnly={true}
          type="checkbox"
        />
        <label
          className="btn-menu toggleMenu null"
          htmlFor="hmt"
          onClick={[Function]}
        >
          <span
            className="first"
          />
          <span
            className="second"
          />
          <span
            className="third"
          />
        </label>
        <h1
          className="lists_main"
          onClick={[Function]}
        >
          <ForwardRef(HomeIcon)>
            <WithStyles(ForwardRef(SvgIcon))>
              <ForwardRef(SvgIcon)
                classes={
                  Object {
                    "colorAction": "MuiSvgIcon-colorAction",
                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                    "colorError": "MuiSvgIcon-colorError",
                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                    "root": "MuiSvgIcon-root",
                  }
                }
              >
                <svg
                  aria-hidden={true}
                  className="MuiSvgIcon-root"
                  focusable="false"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z"
                  />
                </svg>
              </ForwardRef(SvgIcon)>
            </WithStyles(ForwardRef(SvgIcon))>
          </ForwardRef(HomeIcon)>
          <span>
            Главная
          </span>
        </h1>
        <h2
          className="lists__title"
        >
          <ForwardRef(FormatListBulletedIcon)>
            <WithStyles(ForwardRef(SvgIcon))>
              <ForwardRef(SvgIcon)
                classes={
                  Object {
                    "colorAction": "MuiSvgIcon-colorAction",
                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                    "colorError": "MuiSvgIcon-colorError",
                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                    "root": "MuiSvgIcon-root",
                  }
                }
              >
                <svg
                  aria-hidden={true}
                  className="MuiSvgIcon-root"
                  focusable="false"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M4 10.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm0-6c-.83 0-1.5.67-1.5 1.5S3.17 7.5 4 7.5 5.5 6.83 5.5 6 4.83 4.5 4 4.5zm0 12c-.83 0-1.5.68-1.5 1.5s.68 1.5 1.5 1.5 1.5-.68 1.5-1.5-.67-1.5-1.5-1.5zM7 19h14v-2H7v2zm0-6h14v-2H7v2zm0-8v2h14V5H7z"
                  />
                </svg>
              </ForwardRef(SvgIcon)>
            </WithStyles(ForwardRef(SvgIcon))>
          </ForwardRef(FormatListBulletedIcon)>
          <span>
            Списки:
          </span>
        </h2>
        <div
          className="lists__renderList null"
        >
          <Connect(Component)
            id={1}
            key="1"
            label="Магазин"
            needsDone={0}
            toggleDrawer={[Function]}
          >
            <Memo(List)
              activeToDoListId={null}
              deleteToDoListAC={[Function]}
              id={1}
              label="Магазин"
              needsDone={0}
              toggleDrawer={[Function]}
              updateActiveTodoListIdAC={[Function]}
              updateToDoListLabelAC={[Function]}
            >
              <div>
                <WithStyles(ForwardRef(ListItem))
                  button={true}
                  className="list__item"
                  onClick={[Function]}
                >
                  <ForwardRef(ListItem)
                    button={true}
                    className="list__item"
                    classes={
                      Object {
                        "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                        "button": "MuiListItem-button",
                        "container": "MuiListItem-container",
                        "dense": "MuiListItem-dense",
                        "disabled": "Mui-disabled",
                        "divider": "MuiListItem-divider",
                        "focusVisible": "Mui-focusVisible",
                        "gutters": "MuiListItem-gutters",
                        "root": "MuiListItem-root",
                        "secondaryAction": "MuiListItem-secondaryAction",
                        "selected": "Mui-selected",
                      }
                    }
                    onClick={[Function]}
                  >
                    <WithStyles(ForwardRef(ButtonBase))
                      className="MuiListItem-root list__item MuiListItem-gutters MuiListItem-button"
                      component="div"
                      disabled={false}
                      focusVisibleClassName="Mui-focusVisible"
                      onClick={[Function]}
                    >
                      <ForwardRef(ButtonBase)
                        className="MuiListItem-root list__item MuiListItem-gutters MuiListItem-button"
                        classes={
                          Object {
                            "disabled": "Mui-disabled",
                            "focusVisible": "Mui-focusVisible",
                            "root": "MuiButtonBase-root",
                          }
                        }
                        component="div"
                        disabled={false}
                        focusVisibleClassName="Mui-focusVisible"
                        onClick={[Function]}
                      >
                        <div
                          aria-disabled={false}
                          className="MuiButtonBase-root MuiListItem-root list__item MuiListItem-gutters MuiListItem-button"
                          onBlur={[Function]}
                          onClick={[Function]}
                          onDragLeave={[Function]}
                          onFocus={[Function]}
                          onKeyDown={[Function]}
                          onKeyUp={[Function]}
                          onMouseDown={[Function]}
                          onMouseLeave={[Function]}
                          onMouseUp={[Function]}
                          onTouchEnd={[Function]}
                          onTouchMove={[Function]}
                          onTouchStart={[Function]}
                          role="button"
                          tabIndex={0}
                        >
                          <div
                            key=".0"
                          >
                            Магазин
                          </div>
                          <div
                            className="list__wrapper__list__buttonMenu"
                            key=".1"
                          >
                            <WithStyles(ForwardRef(IconButton))
                              aria-controls="simple-menu"
                              aria-haspopup="true"
                              className="list__buttonMenu"
                              onClick={[Function]}
                            >
                              <ForwardRef(IconButton)
                                aria-controls="simple-menu"
                                aria-haspopup="true"
                                className="list__buttonMenu"
                                classes={
                                  Object {
                                    "colorInherit": "MuiIconButton-colorInherit",
                                    "colorPrimary": "MuiIconButton-colorPrimary",
                                    "colorSecondary": "MuiIconButton-colorSecondary",
                                    "disabled": "Mui-disabled",
                                    "edgeEnd": "MuiIconButton-edgeEnd",
                                    "edgeStart": "MuiIconButton-edgeStart",
                                    "label": "MuiIconButton-label",
                                    "root": "MuiIconButton-root",
                                    "sizeSmall": "MuiIconButton-sizeSmall",
                                  }
                                }
                                onClick={[Function]}
                              >
                                <WithStyles(ForwardRef(ButtonBase))
                                  aria-controls="simple-menu"
                                  aria-haspopup="true"
                                  centerRipple={true}
                                  className="MuiIconButton-root list__buttonMenu"
                                  disabled={false}
                                  focusRipple={true}
                                  onClick={[Function]}
                                >
                                  <ForwardRef(ButtonBase)
                                    aria-controls="simple-menu"
                                    aria-haspopup="true"
                                    centerRipple={true}
                                    className="MuiIconButton-root list__buttonMenu"
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "focusVisible": "Mui-focusVisible",
                                        "root": "MuiButtonBase-root",
                                      }
                                    }
                                    disabled={false}
                                    focusRipple={true}
                                    onClick={[Function]}
                                  >
                                    <button
                                      aria-controls="simple-menu"
                                      aria-haspopup="true"
                                      className="MuiButtonBase-root MuiIconButton-root list__buttonMenu"
                                      disabled={false}
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={0}
                                      type="button"
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <ForwardRef(MoreVertIcon)>
                                          <WithStyles(ForwardRef(SvgIcon))>
                                            <ForwardRef(SvgIcon)
                                              classes={
                                                Object {
                                                  "colorAction": "MuiSvgIcon-colorAction",
                                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                  "colorError": "MuiSvgIcon-colorError",
                                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                  "root": "MuiSvgIcon-root",
                                                }
                                              }
                                            >
                                              <svg
                                                aria-hidden={true}
                                                className="MuiSvgIcon-root"
                                                focusable="false"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                                />
                                              </svg>
                                            </ForwardRef(SvgIcon)>
                                          </WithStyles(ForwardRef(SvgIcon))>
                                        </ForwardRef(MoreVertIcon)>
                                      </span>
                                      <WithStyles(memo)
                                        center={true}
                                      >
                                        <ForwardRef(TouchRipple)
                                          center={true}
                                          classes={
                                            Object {
                                              "child": "MuiTouchRipple-child",
                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                              "ripple": "MuiTouchRipple-ripple",
                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                              "root": "MuiTouchRipple-root",
                                            }
                                          }
                                        >
                                          <span
                                            className="MuiTouchRipple-root"
                                          >
                                            <TransitionGroup
                                              childFactory={[Function]}
                                              component={null}
                                              exit={true}
                                            />
                                          </span>
                                        </ForwardRef(TouchRipple)>
                                      </WithStyles(memo)>
                                    </button>
                                  </ForwardRef(ButtonBase)>
                                </WithStyles(ForwardRef(ButtonBase))>
                              </ForwardRef(IconButton)>
                            </WithStyles(ForwardRef(IconButton))>
                            <WithStyles(ForwardRef(Menu))
                              TransitionComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "propTypes": Object {
                                    "children": [Function],
                                    "disableStrictModeCompat": [Function],
                                    "in": [Function],
                                    "onEnter": [Function],
                                    "onEntered": [Function],
                                    "onEntering": [Function],
                                    "onExit": [Function],
                                    "onExited": [Function],
                                    "onExiting": [Function],
                                    "style": [Function],
                                    "timeout": [Function],
                                  },
                                  "render": [Function],
                                }
                              }
                              anchorEl={null}
                              id="simple-menu"
                              keepMounted={true}
                              onClose={[Function]}
                              open={false}
                            >
                              <ForwardRef(Menu)
                                TransitionComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "propTypes": Object {
                                      "children": [Function],
                                      "disableStrictModeCompat": [Function],
                                      "in": [Function],
                                      "onEnter": [Function],
                                      "onEntered": [Function],
                                      "onEntering": [Function],
                                      "onExit": [Function],
                                      "onExited": [Function],
                                      "onExiting": [Function],
                                      "style": [Function],
                                      "timeout": [Function],
                                    },
                                    "render": [Function],
                                  }
                                }
                                anchorEl={null}
                                classes={
                                  Object {
                                    "list": "MuiMenu-list",
                                    "paper": "MuiMenu-paper",
                                  }
                                }
                                id="simple-menu"
                                keepMounted={true}
                                onClose={[Function]}
                                open={false}
                              >
                                <WithStyles(ForwardRef(Popover))
                                  PaperProps={
                                    Object {
                                      "classes": Object {
                                        "root": "MuiMenu-paper",
                                      },
                                    }
                                  }
                                  TransitionComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "propTypes": Object {
                                        "children": [Function],
                                        "disableStrictModeCompat": [Function],
                                        "in": [Function],
                                        "onEnter": [Function],
                                        "onEntered": [Function],
                                        "onEntering": [Function],
                                        "onExit": [Function],
                                        "onExited": [Function],
                                        "onExiting": [Function],
                                        "style": [Function],
                                        "timeout": [Function],
                                      },
                                      "render": [Function],
                                    }
                                  }
                                  TransitionProps={
                                    Object {
                                      "onEntering": [Function],
                                    }
                                  }
                                  anchorEl={null}
                                  anchorOrigin={
                                    Object {
                                      "horizontal": "left",
                                      "vertical": "top",
                                    }
                                  }
                                  getContentAnchorEl={[Function]}
                                  id="simple-menu"
                                  keepMounted={true}
                                  onClose={[Function]}
                                  open={false}
                                  transformOrigin={
                                    Object {
                                      "horizontal": "left",
                                      "vertical": "top",
                                    }
                                  }
                                  transitionDuration="auto"
                                >
                                  <ForwardRef(Popover)
                                    PaperProps={
                                      Object {
                                        "classes": Object {
                                          "root": "MuiMenu-paper",
                                        },
                                      }
                                    }
                                    TransitionComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "propTypes": Object {
                                          "children": [Function],
                                          "disableStrictModeCompat": [Function],
                                          "in": [Function],
                                          "onEnter": [Function],
                                          "onEntered": [Function],
                                          "onEntering": [Function],
                                          "onExit": [Function],
                                          "onExited": [Function],
                                          "onExiting": [Function],
                                          "style": [Function],
                                          "timeout": [Function],
                                        },
                                        "render": [Function],
                                      }
                                    }
                                    TransitionProps={
                                      Object {
                                        "onEntering": [Function],
                                      }
                                    }
                                    anchorEl={null}
                                    anchorOrigin={
                                      Object {
                                        "horizontal": "left",
                                        "vertical": "top",
                                      }
                                    }
                                    classes={
                                      Object {
                                        "paper": "MuiPopover-paper",
                                        "root": "MuiPopover-root",
                                      }
                                    }
                                    getContentAnchorEl={[Function]}
                                    id="simple-menu"
                                    keepMounted={true}
                                    onClose={[Function]}
                                    open={false}
                                    transformOrigin={
                                      Object {
                                        "horizontal": "left",
                                        "vertical": "top",
                                      }
                                    }
                                    transitionDuration="auto"
                                  >
                                    <ForwardRef(Modal)
                                      BackdropProps={
                                        Object {
                                          "invisible": true,
                                        }
                                      }
                                      className="MuiPopover-root"
                                      id="simple-menu"
                                      keepMounted={true}
                                      onClose={[Function]}
                                      open={false}
                                    >
                                      <ForwardRef(Portal)
                                        disablePortal={false}
                                      >
                                        <Portal
                                          containerInfo={
                                            <body
                                              style=""
                                            >
                                              <div
                                                aria-hidden="true"
                                                class="MuiPopover-root"
                                                id="simple-menu"
                                                role="presentation"
                                                style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px; visibility: hidden;"
                                              >
                                                <div
                                                  data-test="sentinelStart"
                                                  tabindex="0"
                                                />
                                                <div
                                                  class="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                                  style="opacity: 0; visibility: hidden;"
                                                  tabindex="-1"
                                                >
                                                  <ul
                                                    class="MuiList-root MuiMenu-list MuiList-padding"
                                                    role="menu"
                                                    tabindex="-1"
                                                  >
                                                    <li
                                                      aria-disabled="false"
                                                      class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_edit MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                      role="menuitem"
                                                      tabindex="0"
                                                    >
                                                      Редактировать
                                                      <span
                                                        class="MuiTouchRipple-root"
                                                      />
                                                    </li>
                                                    <li
                                                      aria-disabled="false"
                                                      class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_delete MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                      role="menuitem"
                                                      tabindex="-1"
                                                    >
                                                      Удалить
                                                      <span
                                                        class="MuiTouchRipple-root"
                                                      />
                                                    </li>
                                                  </ul>
                                                </div>
                                                <div
                                                  data-test="sentinelEnd"
                                                  tabindex="0"
                                                />
                                              </div>
                                            </body>
                                          }
                                        >
                                          <div
                                            className="MuiPopover-root"
                                            id="simple-menu"
                                            onKeyDown={[Function]}
                                            role="presentation"
                                            style={
                                              Object {
                                                "bottom": 0,
                                                "left": 0,
                                                "position": "fixed",
                                                "right": 0,
                                                "top": 0,
                                                "visibility": "hidden",
                                                "zIndex": 1300,
                                              }
                                            }
                                          >
                                            <ForwardRef(SimpleBackdrop)
                                              invisible={true}
                                              onClick={[Function]}
                                              open={false}
                                            />
                                            <Unstable_TrapFocus
                                              disableAutoFocus={false}
                                              disableEnforceFocus={false}
                                              disableRestoreFocus={false}
                                              getDoc={[Function]}
                                              isEnabled={[Function]}
                                              open={false}
                                            >
                                              <div
                                                data-test="sentinelStart"
                                                tabIndex={0}
                                              />
                                              <ForwardRef(Fade)
                                                appear={true}
                                                in={false}
                                                onEnter={[Function]}
                                                onEntering={[Function]}
                                                onExited={[Function]}
                                                tabIndex="-1"
                                              >
                                                <Transition
                                                  appear={true}
                                                  enter={true}
                                                  exit={true}
                                                  in={false}
                                                  mountOnEnter={false}
                                                  onEnter={[Function]}
                                                  onEntered={[Function]}
                                                  onEntering={[Function]}
                                                  onExit={[Function]}
                                                  onExited={[Function]}
                                                  onExiting={[Function]}
                                                  tabIndex="-1"
                                                  timeout={
                                                    Object {
                                                      "enter": 225,
                                                      "exit": 195,
                                                    }
                                                  }
                                                  unmountOnExit={false}
                                                >
                                                  <WithStyles(ForwardRef(Paper))
                                                    className="MuiPopover-paper"
                                                    classes={
                                                      Object {
                                                        "root": "MuiMenu-paper",
                                                      }
                                                    }
                                                    elevation={8}
                                                    style={
                                                      Object {
                                                        "opacity": 0,
                                                        "visibility": "hidden",
                                                      }
                                                    }
                                                    tabIndex="-1"
                                                  >
                                                    <ForwardRef(Paper)
                                                      className="MuiPopover-paper"
                                                      classes={
                                                        Object {
                                                          "elevation0": "MuiPaper-elevation0",
                                                          "elevation1": "MuiPaper-elevation1",
                                                          "elevation10": "MuiPaper-elevation10",
                                                          "elevation11": "MuiPaper-elevation11",
                                                          "elevation12": "MuiPaper-elevation12",
                                                          "elevation13": "MuiPaper-elevation13",
                                                          "elevation14": "MuiPaper-elevation14",
                                                          "elevation15": "MuiPaper-elevation15",
                                                          "elevation16": "MuiPaper-elevation16",
                                                          "elevation17": "MuiPaper-elevation17",
                                                          "elevation18": "MuiPaper-elevation18",
                                                          "elevation19": "MuiPaper-elevation19",
                                                          "elevation2": "MuiPaper-elevation2",
                                                          "elevation20": "MuiPaper-elevation20",
                                                          "elevation21": "MuiPaper-elevation21",
                                                          "elevation22": "MuiPaper-elevation22",
                                                          "elevation23": "MuiPaper-elevation23",
                                                          "elevation24": "MuiPaper-elevation24",
                                                          "elevation3": "MuiPaper-elevation3",
                                                          "elevation4": "MuiPaper-elevation4",
                                                          "elevation5": "MuiPaper-elevation5",
                                                          "elevation6": "MuiPaper-elevation6",
                                                          "elevation7": "MuiPaper-elevation7",
                                                          "elevation8": "MuiPaper-elevation8",
                                                          "elevation9": "MuiPaper-elevation9",
                                                          "outlined": "MuiPaper-outlined",
                                                          "root": "MuiPaper-root MuiMenu-paper",
                                                          "rounded": "MuiPaper-rounded",
                                                        }
                                                      }
                                                      elevation={8}
                                                      style={
                                                        Object {
                                                          "opacity": 0,
                                                          "visibility": "hidden",
                                                        }
                                                      }
                                                      tabIndex="-1"
                                                    >
                                                      <div
                                                        className="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                                        style={
                                                          Object {
                                                            "opacity": 0,
                                                            "visibility": "hidden",
                                                          }
                                                        }
                                                        tabIndex="-1"
                                                      >
                                                        <ForwardRef(MenuList)
                                                          actions={
                                                            Object {
                                                              "current": Object {
                                                                "adjustStyleForScrollbar": [Function],
                                                              },
                                                            }
                                                          }
                                                          autoFocus={false}
                                                          autoFocusItem={false}
                                                          className="MuiMenu-list"
                                                          onKeyDown={[Function]}
                                                          variant="selectedMenu"
                                                        >
                                                          <WithStyles(ForwardRef(List))
                                                            className="MuiMenu-list"
                                                            onKeyDown={[Function]}
                                                            role="menu"
                                                            tabIndex={-1}
                                                          >
                                                            <ForwardRef(List)
                                                              className="MuiMenu-list"
                                                              classes={
                                                                Object {
                                                                  "dense": "MuiList-dense",
                                                                  "padding": "MuiList-padding",
                                                                  "root": "MuiList-root",
                                                                  "subheader": "MuiList-subheader",
                                                                }
                                                              }
                                                              onKeyDown={[Function]}
                                                              role="menu"
                                                              tabIndex={-1}
                                                            >
                                                              <ul
                                                                className="MuiList-root MuiMenu-list MuiList-padding"
                                                                onKeyDown={[Function]}
                                                                role="menu"
                                                                tabIndex={-1}
                                                              >
                                                                <WithStyles(ForwardRef(MenuItem))
                                                                  className="ListItem_edit"
                                                                  key=".$.0"
                                                                  onClick={[Function]}
                                                                  tabIndex={0}
                                                                >
                                                                  <ForwardRef(MenuItem)
                                                                    className="ListItem_edit"
                                                                    classes={
                                                                      Object {
                                                                        "dense": "MuiMenuItem-dense",
                                                                        "gutters": "MuiMenuItem-gutters",
                                                                        "root": "MuiMenuItem-root",
                                                                        "selected": "Mui-selected",
                                                                      }
                                                                    }
                                                                    onClick={[Function]}
                                                                    tabIndex={0}
                                                                  >
                                                                    <WithStyles(ForwardRef(ListItem))
                                                                      button={true}
                                                                      className="MuiMenuItem-root ListItem_edit MuiMenuItem-gutters"
                                                                      classes={
                                                                        Object {
                                                                          "dense": "MuiMenuItem-dense",
                                                                        }
                                                                      }
                                                                      component="li"
                                                                      disableGutters={false}
                                                                      onClick={[Function]}
                                                                      role="menuitem"
                                                                      tabIndex={0}
                                                                    >
                                                                      <ForwardRef(ListItem)
                                                                        button={true}
                                                                        className="MuiMenuItem-root ListItem_edit MuiMenuItem-gutters"
                                                                        classes={
                                                                          Object {
                                                                            "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                                            "button": "MuiListItem-button",
                                                                            "container": "MuiListItem-container",
                                                                            "dense": "MuiListItem-dense MuiMenuItem-dense",
                                                                            "disabled": "Mui-disabled",
                                                                            "divider": "MuiListItem-divider",
                                                                            "focusVisible": "Mui-focusVisible",
                                                                            "gutters": "MuiListItem-gutters",
                                                                            "root": "MuiListItem-root",
                                                                            "secondaryAction": "MuiListItem-secondaryAction",
                                                                            "selected": "Mui-selected",
                                                                          }
                                                                        }
                                                                        component="li"
                                                                        disableGutters={false}
                                                                        onClick={[Function]}
                                                                        role="menuitem"
                                                                        tabIndex={0}
                                                                      >
                                                                        <WithStyles(ForwardRef(ButtonBase))
                                                                          className="MuiListItem-root MuiMenuItem-root ListItem_edit MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                          component="li"
                                                                          disabled={false}
                                                                          focusVisibleClassName="Mui-focusVisible"
                                                                          onClick={[Function]}
                                                                          role="menuitem"
                                                                          tabIndex={0}
                                                                        >
                                                                          <ForwardRef(ButtonBase)
                                                                            className="MuiListItem-root MuiMenuItem-root ListItem_edit MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                            classes={
                                                                              Object {
                                                                                "disabled": "Mui-disabled",
                                                                                "focusVisible": "Mui-focusVisible",
                                                                                "root": "MuiButtonBase-root",
                                                                              }
                                                                            }
                                                                            component="li"
                                                                            disabled={false}
                                                                            focusVisibleClassName="Mui-focusVisible"
                                                                            onClick={[Function]}
                                                                            role="menuitem"
                                                                            tabIndex={0}
                                                                          >
                                                                            <li
                                                                              aria-disabled={false}
                                                                              className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_edit MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                              onBlur={[Function]}
                                                                              onClick={[Function]}
                                                                              onDragLeave={[Function]}
                                                                              onFocus={[Function]}
                                                                              onKeyDown={[Function]}
                                                                              onKeyUp={[Function]}
                                                                              onMouseDown={[Function]}
                                                                              onMouseLeave={[Function]}
                                                                              onMouseUp={[Function]}
                                                                              onTouchEnd={[Function]}
                                                                              onTouchMove={[Function]}
                                                                              onTouchStart={[Function]}
                                                                              role="menuitem"
                                                                              tabIndex={0}
                                                                            >
                                                                              Редактировать
                                                                              <WithStyles(memo)
                                                                                center={false}
                                                                              >
                                                                                <ForwardRef(TouchRipple)
                                                                                  center={false}
                                                                                  classes={
                                                                                    Object {
                                                                                      "child": "MuiTouchRipple-child",
                                                                                      "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                      "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                      "ripple": "MuiTouchRipple-ripple",
                                                                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                      "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                      "root": "MuiTouchRipple-root",
                                                                                    }
                                                                                  }
                                                                                >
                                                                                  <span
                                                                                    className="MuiTouchRipple-root"
                                                                                  >
                                                                                    <TransitionGroup
                                                                                      childFactory={[Function]}
                                                                                      component={null}
                                                                                      exit={true}
                                                                                    />
                                                                                  </span>
                                                                                </ForwardRef(TouchRipple)>
                                                                              </WithStyles(memo)>
                                                                            </li>
                                                                          </ForwardRef(ButtonBase)>
                                                                        </WithStyles(ForwardRef(ButtonBase))>
                                                                      </ForwardRef(ListItem)>
                                                                    </WithStyles(ForwardRef(ListItem))>
                                                                  </ForwardRef(MenuItem)>
                                                                </WithStyles(ForwardRef(MenuItem))>
                                                                <WithStyles(ForwardRef(MenuItem))
                                                                  className="ListItem_delete"
                                                                  key=".$.1"
                                                                  onClick={[Function]}
                                                                >
                                                                  <ForwardRef(MenuItem)
                                                                    className="ListItem_delete"
                                                                    classes={
                                                                      Object {
                                                                        "dense": "MuiMenuItem-dense",
                                                                        "gutters": "MuiMenuItem-gutters",
                                                                        "root": "MuiMenuItem-root",
                                                                        "selected": "Mui-selected",
                                                                      }
                                                                    }
                                                                    onClick={[Function]}
                                                                  >
                                                                    <WithStyles(ForwardRef(ListItem))
                                                                      button={true}
                                                                      className="MuiMenuItem-root ListItem_delete MuiMenuItem-gutters"
                                                                      classes={
                                                                        Object {
                                                                          "dense": "MuiMenuItem-dense",
                                                                        }
                                                                      }
                                                                      component="li"
                                                                      disableGutters={false}
                                                                      onClick={[Function]}
                                                                      role="menuitem"
                                                                      tabIndex={-1}
                                                                    >
                                                                      <ForwardRef(ListItem)
                                                                        button={true}
                                                                        className="MuiMenuItem-root ListItem_delete MuiMenuItem-gutters"
                                                                        classes={
                                                                          Object {
                                                                            "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                                            "button": "MuiListItem-button",
                                                                            "container": "MuiListItem-container",
                                                                            "dense": "MuiListItem-dense MuiMenuItem-dense",
                                                                            "disabled": "Mui-disabled",
                                                                            "divider": "MuiListItem-divider",
                                                                            "focusVisible": "Mui-focusVisible",
                                                                            "gutters": "MuiListItem-gutters",
                                                                            "root": "MuiListItem-root",
                                                                            "secondaryAction": "MuiListItem-secondaryAction",
                                                                            "selected": "Mui-selected",
                                                                          }
                                                                        }
                                                                        component="li"
                                                                        disableGutters={false}
                                                                        onClick={[Function]}
                                                                        role="menuitem"
                                                                        tabIndex={-1}
                                                                      >
                                                                        <WithStyles(ForwardRef(ButtonBase))
                                                                          className="MuiListItem-root MuiMenuItem-root ListItem_delete MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                          component="li"
                                                                          disabled={false}
                                                                          focusVisibleClassName="Mui-focusVisible"
                                                                          onClick={[Function]}
                                                                          role="menuitem"
                                                                          tabIndex={-1}
                                                                        >
                                                                          <ForwardRef(ButtonBase)
                                                                            className="MuiListItem-root MuiMenuItem-root ListItem_delete MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                            classes={
                                                                              Object {
                                                                                "disabled": "Mui-disabled",
                                                                                "focusVisible": "Mui-focusVisible",
                                                                                "root": "MuiButtonBase-root",
                                                                              }
                                                                            }
                                                                            component="li"
                                                                            disabled={false}
                                                                            focusVisibleClassName="Mui-focusVisible"
                                                                            onClick={[Function]}
                                                                            role="menuitem"
                                                                            tabIndex={-1}
                                                                          >
                                                                            <li
                                                                              aria-disabled={false}
                                                                              className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_delete MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                              onBlur={[Function]}
                                                                              onClick={[Function]}
                                                                              onDragLeave={[Function]}
                                                                              onFocus={[Function]}
                                                                              onKeyDown={[Function]}
                                                                              onKeyUp={[Function]}
                                                                              onMouseDown={[Function]}
                                                                              onMouseLeave={[Function]}
                                                                              onMouseUp={[Function]}
                                                                              onTouchEnd={[Function]}
                                                                              onTouchMove={[Function]}
                                                                              onTouchStart={[Function]}
                                                                              role="menuitem"
                                                                              tabIndex={-1}
                                                                            >
                                                                              Удалить
                                                                              <WithStyles(memo)
                                                                                center={false}
                                                                              >
                                                                                <ForwardRef(TouchRipple)
                                                                                  center={false}
                                                                                  classes={
                                                                                    Object {
                                                                                      "child": "MuiTouchRipple-child",
                                                                                      "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                      "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                      "ripple": "MuiTouchRipple-ripple",
                                                                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                      "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                      "root": "MuiTouchRipple-root",
                                                                                    }
                                                                                  }
                                                                                >
                                                                                  <span
                                                                                    className="MuiTouchRipple-root"
                                                                                  >
                                                                                    <TransitionGroup
                                                                                      childFactory={[Function]}
                                                                                      component={null}
                                                                                      exit={true}
                                                                                    />
                                                                                  </span>
                                                                                </ForwardRef(TouchRipple)>
                                                                              </WithStyles(memo)>
                                                                            </li>
                                                                          </ForwardRef(ButtonBase)>
                                                                        </WithStyles(ForwardRef(ButtonBase))>
                                                                      </ForwardRef(ListItem)>
                                                                    </WithStyles(ForwardRef(ListItem))>
                                                                  </ForwardRef(MenuItem)>
                                                                </WithStyles(ForwardRef(MenuItem))>
                                                              </ul>
                                                            </ForwardRef(List)>
                                                          </WithStyles(ForwardRef(List))>
                                                        </ForwardRef(MenuList)>
                                                      </div>
                                                    </ForwardRef(Paper)>
                                                  </WithStyles(ForwardRef(Paper))>
                                                </Transition>
                                              </ForwardRef(Fade)>
                                              <div
                                                data-test="sentinelEnd"
                                                tabIndex={0}
                                              />
                                            </Unstable_TrapFocus>
                                          </div>
                                        </Portal>
                                      </ForwardRef(Portal)>
                                    </ForwardRef(Modal)>
                                  </ForwardRef(Popover)>
                                </WithStyles(ForwardRef(Popover))>
                              </ForwardRef(Menu)>
                            </WithStyles(ForwardRef(Menu))>
                          </div>
                          <WithStyles(memo)
                            center={false}
                          >
                            <ForwardRef(TouchRipple)
                              center={false}
                              classes={
                                Object {
                                  "child": "MuiTouchRipple-child",
                                  "childLeaving": "MuiTouchRipple-childLeaving",
                                  "childPulsate": "MuiTouchRipple-childPulsate",
                                  "ripple": "MuiTouchRipple-ripple",
                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                  "rippleVisible": "MuiTouchRipple-rippleVisible",
                                  "root": "MuiTouchRipple-root",
                                }
                              }
                            >
                              <span
                                className="MuiTouchRipple-root"
                              >
                                <TransitionGroup
                                  childFactory={[Function]}
                                  component={null}
                                  exit={true}
                                />
                              </span>
                            </ForwardRef(TouchRipple)>
                          </WithStyles(memo)>
                        </div>
                      </ForwardRef(ButtonBase)>
                    </WithStyles(ForwardRef(ButtonBase))>
                  </ForwardRef(ListItem)>
                </WithStyles(ForwardRef(ListItem))>
              </div>
            </Memo(List)>
          </Connect(Component)>
        </div>
        <div
          className="lists__addListButton"
          onClick={[Function]}
        >
          <WithStyles(ForwardRef(IconButton))
            aria-label="add List"
            color="inherit"
          >
            <ForwardRef(IconButton)
              aria-label="add List"
              classes={
                Object {
                  "colorInherit": "MuiIconButton-colorInherit",
                  "colorPrimary": "MuiIconButton-colorPrimary",
                  "colorSecondary": "MuiIconButton-colorSecondary",
                  "disabled": "Mui-disabled",
                  "edgeEnd": "MuiIconButton-edgeEnd",
                  "edgeStart": "MuiIconButton-edgeStart",
                  "label": "MuiIconButton-label",
                  "root": "MuiIconButton-root",
                  "sizeSmall": "MuiIconButton-sizeSmall",
                }
              }
              color="inherit"
            >
              <WithStyles(ForwardRef(ButtonBase))
                aria-label="add List"
                centerRipple={true}
                className="MuiIconButton-root MuiIconButton-colorInherit"
                disabled={false}
                focusRipple={true}
              >
                <ForwardRef(ButtonBase)
                  aria-label="add List"
                  centerRipple={true}
                  className="MuiIconButton-root MuiIconButton-colorInherit"
                  classes={
                    Object {
                      "disabled": "Mui-disabled",
                      "focusVisible": "Mui-focusVisible",
                      "root": "MuiButtonBase-root",
                    }
                  }
                  disabled={false}
                  focusRipple={true}
                >
                  <button
                    aria-label="add List"
                    className="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit"
                    disabled={false}
                    onBlur={[Function]}
                    onDragLeave={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    onKeyUp={[Function]}
                    onMouseDown={[Function]}
                    onMouseLeave={[Function]}
                    onMouseUp={[Function]}
                    onTouchEnd={[Function]}
                    onTouchMove={[Function]}
                    onTouchStart={[Function]}
                    tabIndex={0}
                    type="button"
                  >
                    <span
                      className="MuiIconButton-label"
                    >
                      <ForwardRef(PlaylistAddIcon)
                        fontSize="medium"
                      >
                        <WithStyles(ForwardRef(SvgIcon))
                          fontSize="medium"
                        >
                          <ForwardRef(SvgIcon)
                            classes={
                              Object {
                                "colorAction": "MuiSvgIcon-colorAction",
                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                "colorError": "MuiSvgIcon-colorError",
                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                "root": "MuiSvgIcon-root",
                              }
                            }
                            fontSize="medium"
                          >
                            <svg
                              aria-hidden={true}
                              className="MuiSvgIcon-root"
                              focusable="false"
                              viewBox="0 0 24 24"
                            >
                              <path
                                d="M14 10H2v2h12v-2zm0-4H2v2h12V6zm4 8v-4h-2v4h-4v2h4v4h2v-4h4v-2h-4zM2 16h8v-2H2v2z"
                              />
                            </svg>
                          </ForwardRef(SvgIcon)>
                        </WithStyles(ForwardRef(SvgIcon))>
                      </ForwardRef(PlaylistAddIcon)>
                    </span>
                    <WithStyles(memo)
                      center={true}
                    >
                      <ForwardRef(TouchRipple)
                        center={true}
                        classes={
                          Object {
                            "child": "MuiTouchRipple-child",
                            "childLeaving": "MuiTouchRipple-childLeaving",
                            "childPulsate": "MuiTouchRipple-childPulsate",
                            "ripple": "MuiTouchRipple-ripple",
                            "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                            "rippleVisible": "MuiTouchRipple-rippleVisible",
                            "root": "MuiTouchRipple-root",
                          }
                        }
                      >
                        <span
                          className="MuiTouchRipple-root"
                        >
                          <TransitionGroup
                            childFactory={[Function]}
                            component={null}
                            exit={true}
                          />
                        </span>
                      </ForwardRef(TouchRipple)>
                    </WithStyles(memo)>
                  </button>
                </ForwardRef(ButtonBase)>
              </WithStyles(ForwardRef(ButtonBase))>
            </ForwardRef(IconButton)>
          </WithStyles(ForwardRef(IconButton))>
          <span>
            Добавить список
          </span>
        </div>
      </div>
    </Memo(Lists)>
  </Connect(Component)>
</Provider>
`;

exports[`Checking the deletion of a Task 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(Component)
    item={
      Object {
        "date": null,
        "done": false,
        "id": 13371488,
        "important": false,
        "label": "Задача1",
        "subtask": null,
        "time": null,
      }
    }
    key="13371488"
  >
    <Memo(ToDoListItem)
      deleteTaskAC={[Function]}
      item={
        Object {
          "date": null,
          "done": false,
          "id": 13371488,
          "important": false,
          "label": "Задача1",
          "subtask": null,
          "time": null,
        }
      }
      togglePropertyTaskAC={[Function]}
      updateDateOrTimeTaskAC={[Function]}
    >
      <div
        className="todolist__close-wrapper null"
        onClick={[Function]}
      />
      <WithStyles(ForwardRef(Accordion))
        TransitionProps={
          Object {
            "unmountOnExit": true,
          }
        }
        className="ToDoListItem__Accordion null null"
      >
        <ForwardRef(Accordion)
          TransitionProps={
            Object {
              "unmountOnExit": true,
            }
          }
          className="ToDoListItem__Accordion null null"
          classes={
            Object {
              "disabled": "Mui-disabled",
              "expanded": "Mui-expanded",
              "root": "MuiAccordion-root",
              "rounded": "MuiAccordion-rounded",
            }
          }
        >
          <WithStyles(ForwardRef(Paper))
            className="MuiAccordion-root ToDoListItem__Accordion null null MuiAccordion-rounded"
            square={false}
          >
            <ForwardRef(Paper)
              className="MuiAccordion-root ToDoListItem__Accordion null null MuiAccordion-rounded"
              classes={
                Object {
                  "elevation0": "MuiPaper-elevation0",
                  "elevation1": "MuiPaper-elevation1",
                  "elevation10": "MuiPaper-elevation10",
                  "elevation11": "MuiPaper-elevation11",
                  "elevation12": "MuiPaper-elevation12",
                  "elevation13": "MuiPaper-elevation13",
                  "elevation14": "MuiPaper-elevation14",
                  "elevation15": "MuiPaper-elevation15",
                  "elevation16": "MuiPaper-elevation16",
                  "elevation17": "MuiPaper-elevation17",
                  "elevation18": "MuiPaper-elevation18",
                  "elevation19": "MuiPaper-elevation19",
                  "elevation2": "MuiPaper-elevation2",
                  "elevation20": "MuiPaper-elevation20",
                  "elevation21": "MuiPaper-elevation21",
                  "elevation22": "MuiPaper-elevation22",
                  "elevation23": "MuiPaper-elevation23",
                  "elevation24": "MuiPaper-elevation24",
                  "elevation3": "MuiPaper-elevation3",
                  "elevation4": "MuiPaper-elevation4",
                  "elevation5": "MuiPaper-elevation5",
                  "elevation6": "MuiPaper-elevation6",
                  "elevation7": "MuiPaper-elevation7",
                  "elevation8": "MuiPaper-elevation8",
                  "elevation9": "MuiPaper-elevation9",
                  "outlined": "MuiPaper-outlined",
                  "root": "MuiPaper-root",
                  "rounded": "MuiPaper-rounded",
                }
              }
              square={false}
            >
              <div
                className="MuiPaper-root MuiAccordion-root ToDoListItem__Accordion null null MuiAccordion-rounded MuiPaper-elevation1 MuiPaper-rounded"
              >
                <WithStyles(ForwardRef(AccordionSummary))
                  aria-controls="panel1a-content"
                  className="ToDoListItem__Accordion_grid"
                  expandIcon={
                    <Memo
                      className="ToDoListItem__Accordion_expandIcon"
                    />
                  }
                  id="panel1a-header"
                  key=".0"
                >
                  <ForwardRef(AccordionSummary)
                    aria-controls="panel1a-content"
                    className="ToDoListItem__Accordion_grid"
                    classes={
                      Object {
                        "content": "MuiAccordionSummary-content",
                        "disabled": "Mui-disabled",
                        "expandIcon": "MuiAccordionSummary-expandIcon",
                        "expanded": "Mui-expanded",
                        "focusVisible": "Mui-focusVisible",
                        "focused": "Mui-focused",
                        "root": "MuiAccordionSummary-root",
                      }
                    }
                    expandIcon={
                      <Memo
                        className="ToDoListItem__Accordion_expandIcon"
                      />
                    }
                    id="panel1a-header"
                  >
                    <WithStyles(ForwardRef(ButtonBase))
                      aria-controls="panel1a-content"
                      aria-expanded={false}
                      className="MuiAccordionSummary-root ToDoListItem__Accordion_grid"
                      component="div"
                      disableRipple={true}
                      disabled={false}
                      focusRipple={false}
                      focusVisibleClassName="Mui-focusVisible Mui-focused"
                      id="panel1a-header"
                      onClick={[Function]}
                    >
                      <ForwardRef(ButtonBase)
                        aria-controls="panel1a-content"
                        aria-expanded={false}
                        className="MuiAccordionSummary-root ToDoListItem__Accordion_grid"
                        classes={
                          Object {
                            "disabled": "Mui-disabled",
                            "focusVisible": "Mui-focusVisible",
                            "root": "MuiButtonBase-root",
                          }
                        }
                        component="div"
                        disableRipple={true}
                        disabled={false}
                        focusRipple={false}
                        focusVisibleClassName="Mui-focusVisible Mui-focused"
                        id="panel1a-header"
                        onClick={[Function]}
                      >
                        <div
                          aria-controls="panel1a-content"
                          aria-disabled={false}
                          aria-expanded={false}
                          className="MuiButtonBase-root MuiAccordionSummary-root ToDoListItem__Accordion_grid"
                          id="panel1a-header"
                          onBlur={[Function]}
                          onClick={[Function]}
                          onDragLeave={[Function]}
                          onFocus={[Function]}
                          onKeyDown={[Function]}
                          onKeyUp={[Function]}
                          onMouseDown={[Function]}
                          onMouseLeave={[Function]}
                          onMouseUp={[Function]}
                          onTouchEnd={[Function]}
                          onTouchMove={[Function]}
                          onTouchStart={[Function]}
                          role="button"
                          tabIndex={0}
                        >
                          <div
                            className="MuiAccordionSummary-content"
                          >
                            <div
                              className="ToDoListItem null null"
                            >
                              <div
                                className="ToDoListItem__leftBlock"
                              >
                                <WithStyles(ForwardRef(IconButton))
                                  aria-label="delete"
                                  className="ToDoListItem__button ToDoListItem__buttonDone"
                                  color="inherit"
                                  onClick={[Function]}
                                >
                                  <ForwardRef(IconButton)
                                    aria-label="delete"
                                    className="ToDoListItem__button ToDoListItem__buttonDone"
                                    classes={
                                      Object {
                                        "colorInherit": "MuiIconButton-colorInherit",
                                        "colorPrimary": "MuiIconButton-colorPrimary",
                                        "colorSecondary": "MuiIconButton-colorSecondary",
                                        "disabled": "Mui-disabled",
                                        "edgeEnd": "MuiIconButton-edgeEnd",
                                        "edgeStart": "MuiIconButton-edgeStart",
                                        "label": "MuiIconButton-label",
                                        "root": "MuiIconButton-root",
                                        "sizeSmall": "MuiIconButton-sizeSmall",
                                      }
                                    }
                                    color="inherit"
                                    onClick={[Function]}
                                  >
                                    <WithStyles(ForwardRef(ButtonBase))
                                      aria-label="delete"
                                      centerRipple={true}
                                      className="MuiIconButton-root ToDoListItem__button ToDoListItem__buttonDone MuiIconButton-colorInherit"
                                      disabled={false}
                                      focusRipple={true}
                                      onClick={[Function]}
                                    >
                                      <ForwardRef(ButtonBase)
                                        aria-label="delete"
                                        centerRipple={true}
                                        className="MuiIconButton-root ToDoListItem__button ToDoListItem__buttonDone MuiIconButton-colorInherit"
                                        classes={
                                          Object {
                                            "disabled": "Mui-disabled",
                                            "focusVisible": "Mui-focusVisible",
                                            "root": "MuiButtonBase-root",
                                          }
                                        }
                                        disabled={false}
                                        focusRipple={true}
                                        onClick={[Function]}
                                      >
                                        <button
                                          aria-label="delete"
                                          className="MuiButtonBase-root MuiIconButton-root ToDoListItem__button ToDoListItem__buttonDone MuiIconButton-colorInherit"
                                          disabled={false}
                                          onBlur={[Function]}
                                          onClick={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex={0}
                                          type="button"
                                        >
                                          <span
                                            className="MuiIconButton-label"
                                          >
                                            <ForwardRef(CheckIcon)
                                              fontSize="small"
                                            >
                                              <WithStyles(ForwardRef(SvgIcon))
                                                fontSize="small"
                                              >
                                                <ForwardRef(SvgIcon)
                                                  classes={
                                                    Object {
                                                      "colorAction": "MuiSvgIcon-colorAction",
                                                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                      "colorError": "MuiSvgIcon-colorError",
                                                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                      "root": "MuiSvgIcon-root",
                                                    }
                                                  }
                                                  fontSize="small"
                                                >
                                                  <svg
                                                    aria-hidden={true}
                                                    className="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                                    focusable="false"
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <path
                                                      d="M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z"
                                                    />
                                                  </svg>
                                                </ForwardRef(SvgIcon)>
                                              </WithStyles(ForwardRef(SvgIcon))>
                                            </ForwardRef(CheckIcon)>
                                          </span>
                                          <WithStyles(memo)
                                            center={true}
                                          >
                                            <ForwardRef(TouchRipple)
                                              center={true}
                                              classes={
                                                Object {
                                                  "child": "MuiTouchRipple-child",
                                                  "childLeaving": "MuiTouchRipple-childLeaving",
                                                  "childPulsate": "MuiTouchRipple-childPulsate",
                                                  "ripple": "MuiTouchRipple-ripple",
                                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                  "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                  "root": "MuiTouchRipple-root",
                                                }
                                              }
                                            >
                                              <span
                                                className="MuiTouchRipple-root"
                                              >
                                                <TransitionGroup
                                                  childFactory={[Function]}
                                                  component={null}
                                                  exit={true}
                                                />
                                              </span>
                                            </ForwardRef(TouchRipple)>
                                          </WithStyles(memo)>
                                        </button>
                                      </ForwardRef(ButtonBase)>
                                    </WithStyles(ForwardRef(ButtonBase))>
                                  </ForwardRef(IconButton)>
                                </WithStyles(ForwardRef(IconButton))>
                                Задача1
                              </div>
                              <WithStyles(ForwardRef(IconButton))
                                aria-controls="simple-menu"
                                aria-haspopup="true"
                                className="list__buttonMenu ToDoListItem__button_menu"
                                onClick={[Function]}
                              >
                                <ForwardRef(IconButton)
                                  aria-controls="simple-menu"
                                  aria-haspopup="true"
                                  className="list__buttonMenu ToDoListItem__button_menu"
                                  classes={
                                    Object {
                                      "colorInherit": "MuiIconButton-colorInherit",
                                      "colorPrimary": "MuiIconButton-colorPrimary",
                                      "colorSecondary": "MuiIconButton-colorSecondary",
                                      "disabled": "Mui-disabled",
                                      "edgeEnd": "MuiIconButton-edgeEnd",
                                      "edgeStart": "MuiIconButton-edgeStart",
                                      "label": "MuiIconButton-label",
                                      "root": "MuiIconButton-root",
                                      "sizeSmall": "MuiIconButton-sizeSmall",
                                    }
                                  }
                                  onClick={[Function]}
                                >
                                  <WithStyles(ForwardRef(ButtonBase))
                                    aria-controls="simple-menu"
                                    aria-haspopup="true"
                                    centerRipple={true}
                                    className="MuiIconButton-root list__buttonMenu ToDoListItem__button_menu"
                                    disabled={false}
                                    focusRipple={true}
                                    onClick={[Function]}
                                  >
                                    <ForwardRef(ButtonBase)
                                      aria-controls="simple-menu"
                                      aria-haspopup="true"
                                      centerRipple={true}
                                      className="MuiIconButton-root list__buttonMenu ToDoListItem__button_menu"
                                      classes={
                                        Object {
                                          "disabled": "Mui-disabled",
                                          "focusVisible": "Mui-focusVisible",
                                          "root": "MuiButtonBase-root",
                                        }
                                      }
                                      disabled={false}
                                      focusRipple={true}
                                      onClick={[Function]}
                                    >
                                      <button
                                        aria-controls="simple-menu"
                                        aria-haspopup="true"
                                        className="MuiButtonBase-root MuiIconButton-root list__buttonMenu ToDoListItem__button_menu"
                                        disabled={false}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onDragLeave={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                        onMouseDown={[Function]}
                                        onMouseLeave={[Function]}
                                        onMouseUp={[Function]}
                                        onTouchEnd={[Function]}
                                        onTouchMove={[Function]}
                                        onTouchStart={[Function]}
                                        tabIndex={0}
                                        type="button"
                                      >
                                        <span
                                          className="MuiIconButton-label"
                                        >
                                          <ForwardRef(MoreVertIcon)>
                                            <WithStyles(ForwardRef(SvgIcon))>
                                              <ForwardRef(SvgIcon)
                                                classes={
                                                  Object {
                                                    "colorAction": "MuiSvgIcon-colorAction",
                                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                    "colorError": "MuiSvgIcon-colorError",
                                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                    "root": "MuiSvgIcon-root",
                                                  }
                                                }
                                              >
                                                <svg
                                                  aria-hidden={true}
                                                  className="MuiSvgIcon-root"
                                                  focusable="false"
                                                  viewBox="0 0 24 24"
                                                >
                                                  <path
                                                    d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                                  />
                                                </svg>
                                              </ForwardRef(SvgIcon)>
                                            </WithStyles(ForwardRef(SvgIcon))>
                                          </ForwardRef(MoreVertIcon)>
                                        </span>
                                        <WithStyles(memo)
                                          center={true}
                                        >
                                          <ForwardRef(TouchRipple)
                                            center={true}
                                            classes={
                                              Object {
                                                "child": "MuiTouchRipple-child",
                                                "childLeaving": "MuiTouchRipple-childLeaving",
                                                "childPulsate": "MuiTouchRipple-childPulsate",
                                                "ripple": "MuiTouchRipple-ripple",
                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                "root": "MuiTouchRipple-root",
                                              }
                                            }
                                          >
                                            <span
                                              className="MuiTouchRipple-root"
                                            >
                                              <TransitionGroup
                                                childFactory={[Function]}
                                                component={null}
                                                exit={true}
                                              />
                                            </span>
                                          </ForwardRef(TouchRipple)>
                                        </WithStyles(memo)>
                                      </button>
                                    </ForwardRef(ButtonBase)>
                                  </WithStyles(ForwardRef(ButtonBase))>
                                </ForwardRef(IconButton)>
                              </WithStyles(ForwardRef(IconButton))>
                              <div
                                className="ToDoListItem__buttons null"
                              >
                                <Memo(DatePicker)
                                  date={null}
                                  eventSaveDateOrTime={[Function]}
                                  time={null}
                                >
                                  <div
                                    className="DatePicker"
                                    onClick={[Function]}
                                  >
                                    <MuiPickersUtilsProvider
                                      locale={
                                        Object {
                                          "code": "ru",
                                          "formatDistance": [Function],
                                          "formatLong": Object {
                                            "date": [Function],
                                            "dateTime": [Function],
                                            "time": [Function],
                                          },
                                          "formatRelative": [Function],
                                          "localize": Object {
                                            "day": [Function],
                                            "dayPeriod": [Function],
                                            "era": [Function],
                                            "month": [Function],
                                            "ordinalNumber": [Function],
                                            "quarter": [Function],
                                          },
                                          "match": Object {
                                            "day": [Function],
                                            "dayPeriod": [Function],
                                            "era": [Function],
                                            "month": [Function],
                                            "ordinalNumber": [Function],
                                            "quarter": [Function],
                                          },
                                          "options": Object {
                                            "firstWeekContainsDate": 1,
                                            "weekStartsOn": 1,
                                          },
                                        }
                                      }
                                      onClick={[Function]}
                                      utils={[Function]}
                                    >
                                      <PickerWithState
                                        DialogProps={
                                          Object {
                                            "className": "DatePicker__pickers",
                                          }
                                        }
                                        KeyboardButtonProps={
                                          Object {
                                            "aria-label": "change date",
                                          }
                                        }
                                        allowKeyboardControl={true}
                                        autoComplete="off"
                                        cancelLabel="отмена"
                                        className="DatePicker__item"
                                        format="MM/dd/yyyy"
                                        invalidDateMessage="Invalid Date Format"
                                        label="Дата"
                                        margin="normal"
                                        maxDate={2100-01-01T00:00:00.000Z}
                                        maxDateMessage="Date should not be after maximal date"
                                        minDate={1900-01-01T00:00:00.000Z}
                                        minDateMessage="Date should not be before minimal date"
                                        onChange={[Function]}
                                        onClick={[Function]}
                                        openTo="date"
                                        value={null}
                                        views={
                                          Array [
                                            "year",
                                            "date",
                                          ]
                                        }
                                      >
                                        <Wrapper
                                          DateInputProps={
                                            Object {
                                              "format": "MM/dd/yyyy",
                                              "inputValue": "",
                                              "onChange": [Function],
                                              "openPicker": [Function],
                                              "validationError": "",
                                            }
                                          }
                                          DialogProps={
                                            Object {
                                              "className": "DatePicker__pickers",
                                            }
                                          }
                                          InputComponent={[Function]}
                                          KeyboardButtonProps={
                                            Object {
                                              "aria-label": "change date",
                                            }
                                          }
                                          autoComplete="off"
                                          cancelLabel="отмена"
                                          className="DatePicker__item"
                                          format="MM/dd/yyyy"
                                          label="Дата"
                                          margin="normal"
                                          onAccept={[Function]}
                                          onClear={[Function]}
                                          onClick={[Function]}
                                          onDismiss={[Function]}
                                          onSetToday={[Function]}
                                          open={false}
                                        >
                                          <ModalWrapper
                                            DateInputProps={
                                              Object {
                                                "format": "MM/dd/yyyy",
                                                "inputValue": "",
                                                "onChange": [Function],
                                                "openPicker": [Function],
                                                "validationError": "",
                                              }
                                            }
                                            DialogProps={
                                              Object {
                                                "className": "DatePicker__pickers",
                                              }
                                            }
                                            InputComponent={[Function]}
                                            KeyboardButtonProps={
                                              Object {
                                                "aria-label": "change date",
                                              }
                                            }
                                            autoComplete="off"
                                            cancelLabel="отмена"
                                            className="DatePicker__item"
                                            clearLabel="Clear"
                                            clearable={false}
                                            format="MM/dd/yyyy"
                                            label="Дата"
                                            margin="normal"
                                            okLabel="OK"
                                            onAccept={[Function]}
                                            onClear={[Function]}
                                            onClick={[Function]}
                                            onDismiss={[Function]}
                                            onSetToday={[Function]}
                                            open={false}
                                            showTodayButton={false}
                                            todayLabel="Today"
                                          >
                                            <KeyboardDateInput
                                              KeyboardButtonProps={
                                                Object {
                                                  "aria-label": "change date",
                                                }
                                              }
                                              autoComplete="off"
                                              className="DatePicker__item"
                                              format="MM/dd/yyyy"
                                              inputValue=""
                                              keyboardIcon={<KeyboardIcon />}
                                              label="Дата"
                                              margin="normal"
                                              onChange={[Function]}
                                              onClick={[Function]}
                                              openPicker={[Function]}
                                              validationError=""
                                            >
                                              <Rifm
                                                format={[Function]}
                                                key="__/__/____"
                                                onChange={[Function]}
                                                refuse={/\\[\\^\\\\d\\]\\+/gi}
                                                value=""
                                              >
                                                <WithStyles(ForwardRef(TextField))
                                                  InputProps={
                                                    Object {
                                                      "endAdornment": <WithStyles(ForwardRef(InputAdornment))
                                                        position="end"
                                                      >
                                                        <WithStyles(ForwardRef(IconButton))
                                                          aria-label="change date"
                                                          onClick={[Function]}
                                                        >
                                                          <KeyboardIcon />
                                                        </WithStyles(ForwardRef(IconButton))>
                                                      </WithStyles(ForwardRef(InputAdornment))>,
                                                    }
                                                  }
                                                  autoComplete="off"
                                                  className="DatePicker__item"
                                                  error={false}
                                                  helperText=""
                                                  label="Дата"
                                                  margin="normal"
                                                  onChange={[Function]}
                                                  onClick={[Function]}
                                                  value=""
                                                >
                                                  <ForwardRef(TextField)
                                                    InputProps={
                                                      Object {
                                                        "endAdornment": <WithStyles(ForwardRef(InputAdornment))
                                                          position="end"
                                                        >
                                                          <WithStyles(ForwardRef(IconButton))
                                                            aria-label="change date"
                                                            onClick={[Function]}
                                                          >
                                                            <KeyboardIcon />
                                                          </WithStyles(ForwardRef(IconButton))>
                                                        </WithStyles(ForwardRef(InputAdornment))>,
                                                      }
                                                    }
                                                    autoComplete="off"
                                                    className="DatePicker__item"
                                                    classes={
                                                      Object {
                                                        "root": "MuiTextField-root",
                                                      }
                                                    }
                                                    error={false}
                                                    helperText=""
                                                    label="Дата"
                                                    margin="normal"
                                                    onChange={[Function]}
                                                    onClick={[Function]}
                                                    value=""
                                                  >
                                                    <WithStyles(ForwardRef(FormControl))
                                                      className="MuiTextField-root DatePicker__item"
                                                      color="primary"
                                                      disabled={false}
                                                      error={false}
                                                      fullWidth={false}
                                                      margin="normal"
                                                      onClick={[Function]}
                                                      required={false}
                                                      variant="standard"
                                                    >
                                                      <ForwardRef(FormControl)
                                                        className="MuiTextField-root DatePicker__item"
                                                        classes={
                                                          Object {
                                                            "fullWidth": "MuiFormControl-fullWidth",
                                                            "marginDense": "MuiFormControl-marginDense",
                                                            "marginNormal": "MuiFormControl-marginNormal",
                                                            "root": "MuiFormControl-root",
                                                          }
                                                        }
                                                        color="primary"
                                                        disabled={false}
                                                        error={false}
                                                        fullWidth={false}
                                                        margin="normal"
                                                        onClick={[Function]}
                                                        required={false}
                                                        variant="standard"
                                                      >
                                                        <div
                                                          className="MuiFormControl-root MuiTextField-root DatePicker__item MuiFormControl-marginNormal"
                                                          onClick={[Function]}
                                                        >
                                                          <WithStyles(ForwardRef(InputLabel))>
                                                            <ForwardRef(InputLabel)
                                                              classes={
                                                                Object {
                                                                  "animated": "MuiInputLabel-animated",
                                                                  "asterisk": "MuiInputLabel-asterisk",
                                                                  "disabled": "Mui-disabled",
                                                                  "error": "Mui-error",
                                                                  "filled": "MuiInputLabel-filled",
                                                                  "focused": "Mui-focused",
                                                                  "formControl": "MuiInputLabel-formControl",
                                                                  "marginDense": "MuiInputLabel-marginDense",
                                                                  "outlined": "MuiInputLabel-outlined",
                                                                  "required": "Mui-required",
                                                                  "root": "MuiInputLabel-root",
                                                                  "shrink": "MuiInputLabel-shrink",
                                                                }
                                                              }
                                                            >
                                                              <WithStyles(ForwardRef(FormLabel))
                                                                className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                                                                classes={
                                                                  Object {
                                                                    "asterisk": "MuiInputLabel-asterisk",
                                                                    "disabled": "Mui-disabled",
                                                                    "error": "Mui-error",
                                                                    "focused": "Mui-focused",
                                                                    "required": "Mui-required",
                                                                  }
                                                                }
                                                                data-shrink={false}
                                                              >
                                                                <ForwardRef(FormLabel)
                                                                  className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                                                                  classes={
                                                                    Object {
                                                                      "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                                                      "colorSecondary": "MuiFormLabel-colorSecondary",
                                                                      "disabled": "Mui-disabled Mui-disabled",
                                                                      "error": "Mui-error Mui-error",
                                                                      "filled": "MuiFormLabel-filled",
                                                                      "focused": "Mui-focused Mui-focused",
                                                                      "required": "Mui-required Mui-required",
                                                                      "root": "MuiFormLabel-root",
                                                                    }
                                                                  }
                                                                  data-shrink={false}
                                                                >
                                                                  <label
                                                                    className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                                                                    data-shrink={false}
                                                                  >
                                                                    Дата
                                                                  </label>
                                                                </ForwardRef(FormLabel)>
                                                              </WithStyles(ForwardRef(FormLabel))>
                                                            </ForwardRef(InputLabel)>
                                                          </WithStyles(ForwardRef(InputLabel))>
                                                          <WithStyles(ForwardRef(Input))
                                                            autoComplete="off"
                                                            autoFocus={false}
                                                            endAdornment={
                                                              <WithStyles(ForwardRef(InputAdornment))
                                                                position="end"
                                                              >
                                                                <WithStyles(ForwardRef(IconButton))
                                                                  aria-label="change date"
                                                                  onClick={[Function]}
                                                                >
                                                                  <KeyboardIcon />
                                                                </WithStyles(ForwardRef(IconButton))>
                                                              </WithStyles(ForwardRef(InputAdornment))>
                                                            }
                                                            fullWidth={false}
                                                            multiline={false}
                                                            onChange={[Function]}
                                                            value=""
                                                          >
                                                            <ForwardRef(Input)
                                                              autoComplete="off"
                                                              autoFocus={false}
                                                              classes={
                                                                Object {
                                                                  "colorSecondary": "MuiInput-colorSecondary",
                                                                  "disabled": "Mui-disabled",
                                                                  "error": "Mui-error",
                                                                  "focused": "Mui-focused",
                                                                  "formControl": "MuiInput-formControl",
                                                                  "fullWidth": "MuiInput-fullWidth",
                                                                  "input": "MuiInput-input",
                                                                  "inputMarginDense": "MuiInput-inputMarginDense",
                                                                  "inputMultiline": "MuiInput-inputMultiline",
                                                                  "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                                  "marginDense": "MuiInput-marginDense",
                                                                  "multiline": "MuiInput-multiline",
                                                                  "root": "MuiInput-root",
                                                                  "underline": "MuiInput-underline",
                                                                }
                                                              }
                                                              endAdornment={
                                                                <WithStyles(ForwardRef(InputAdornment))
                                                                  position="end"
                                                                >
                                                                  <WithStyles(ForwardRef(IconButton))
                                                                    aria-label="change date"
                                                                    onClick={[Function]}
                                                                  >
                                                                    <KeyboardIcon />
                                                                  </WithStyles(ForwardRef(IconButton))>
                                                                </WithStyles(ForwardRef(InputAdornment))>
                                                              }
                                                              fullWidth={false}
                                                              multiline={false}
                                                              onChange={[Function]}
                                                              value=""
                                                            >
                                                              <WithStyles(ForwardRef(InputBase))
                                                                autoComplete="off"
                                                                autoFocus={false}
                                                                classes={
                                                                  Object {
                                                                    "colorSecondary": "MuiInput-colorSecondary",
                                                                    "disabled": "Mui-disabled",
                                                                    "error": "Mui-error",
                                                                    "focused": "Mui-focused",
                                                                    "formControl": "MuiInput-formControl",
                                                                    "fullWidth": "MuiInput-fullWidth",
                                                                    "input": "MuiInput-input",
                                                                    "inputMarginDense": "MuiInput-inputMarginDense",
                                                                    "inputMultiline": "MuiInput-inputMultiline",
                                                                    "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                                    "marginDense": "MuiInput-marginDense",
                                                                    "multiline": "MuiInput-multiline",
                                                                    "root": "MuiInput-root MuiInput-underline",
                                                                    "underline": null,
                                                                  }
                                                                }
                                                                endAdornment={
                                                                  <WithStyles(ForwardRef(InputAdornment))
                                                                    position="end"
                                                                  >
                                                                    <WithStyles(ForwardRef(IconButton))
                                                                      aria-label="change date"
                                                                      onClick={[Function]}
                                                                    >
                                                                      <KeyboardIcon />
                                                                    </WithStyles(ForwardRef(IconButton))>
                                                                  </WithStyles(ForwardRef(InputAdornment))>
                                                                }
                                                                fullWidth={false}
                                                                inputComponent="input"
                                                                multiline={false}
                                                                onChange={[Function]}
                                                                type="text"
                                                                value=""
                                                              >
                                                                <ForwardRef(InputBase)
                                                                  autoComplete="off"
                                                                  autoFocus={false}
                                                                  classes={
                                                                    Object {
                                                                      "adornedEnd": "MuiInputBase-adornedEnd",
                                                                      "adornedStart": "MuiInputBase-adornedStart",
                                                                      "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                                      "disabled": "Mui-disabled Mui-disabled",
                                                                      "error": "Mui-error Mui-error",
                                                                      "focused": "Mui-focused Mui-focused",
                                                                      "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                                      "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                                      "input": "MuiInputBase-input MuiInput-input",
                                                                      "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                                      "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                                      "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                                      "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                                      "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                                      "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                                      "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                                      "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                                      "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                                    }
                                                                  }
                                                                  endAdornment={
                                                                    <WithStyles(ForwardRef(InputAdornment))
                                                                      position="end"
                                                                    >
                                                                      <WithStyles(ForwardRef(IconButton))
                                                                        aria-label="change date"
                                                                        onClick={[Function]}
                                                                      >
                                                                        <KeyboardIcon />
                                                                      </WithStyles(ForwardRef(IconButton))>
                                                                    </WithStyles(ForwardRef(InputAdornment))>
                                                                  }
                                                                  fullWidth={false}
                                                                  inputComponent="input"
                                                                  multiline={false}
                                                                  onChange={[Function]}
                                                                  type="text"
                                                                  value=""
                                                                >
                                                                  <div
                                                                    className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedEnd"
                                                                    onClick={[Function]}
                                                                  >
                                                                    <input
                                                                      aria-invalid={false}
                                                                      autoComplete="off"
                                                                      autoFocus={false}
                                                                      className="MuiInputBase-input MuiInput-input MuiInputBase-inputAdornedEnd"
                                                                      disabled={false}
                                                                      onAnimationStart={[Function]}
                                                                      onBlur={[Function]}
                                                                      onChange={[Function]}
                                                                      onFocus={[Function]}
                                                                      required={false}
                                                                      type="text"
                                                                      value=""
                                                                    />
                                                                    <WithStyles(ForwardRef(InputAdornment))
                                                                      position="end"
                                                                    >
                                                                      <ForwardRef(InputAdornment)
                                                                        classes={
                                                                          Object {
                                                                            "disablePointerEvents": "MuiInputAdornment-disablePointerEvents",
                                                                            "filled": "MuiInputAdornment-filled",
                                                                            "hiddenLabel": "MuiInputAdornment-hiddenLabel",
                                                                            "marginDense": "MuiInputAdornment-marginDense",
                                                                            "positionEnd": "MuiInputAdornment-positionEnd",
                                                                            "positionStart": "MuiInputAdornment-positionStart",
                                                                            "root": "MuiInputAdornment-root",
                                                                          }
                                                                        }
                                                                        position="end"
                                                                      >
                                                                        <div
                                                                          className="MuiInputAdornment-root MuiInputAdornment-positionEnd"
                                                                        >
                                                                          <WithStyles(ForwardRef(IconButton))
                                                                            aria-label="change date"
                                                                            onClick={[Function]}
                                                                          >
                                                                            <ForwardRef(IconButton)
                                                                              aria-label="change date"
                                                                              classes={
                                                                                Object {
                                                                                  "colorInherit": "MuiIconButton-colorInherit",
                                                                                  "colorPrimary": "MuiIconButton-colorPrimary",
                                                                                  "colorSecondary": "MuiIconButton-colorSecondary",
                                                                                  "disabled": "Mui-disabled",
                                                                                  "edgeEnd": "MuiIconButton-edgeEnd",
                                                                                  "edgeStart": "MuiIconButton-edgeStart",
                                                                                  "label": "MuiIconButton-label",
                                                                                  "root": "MuiIconButton-root",
                                                                                  "sizeSmall": "MuiIconButton-sizeSmall",
                                                                                }
                                                                              }
                                                                              onClick={[Function]}
                                                                            >
                                                                              <WithStyles(ForwardRef(ButtonBase))
                                                                                aria-label="change date"
                                                                                centerRipple={true}
                                                                                className="MuiIconButton-root"
                                                                                disabled={false}
                                                                                focusRipple={true}
                                                                                onClick={[Function]}
                                                                              >
                                                                                <ForwardRef(ButtonBase)
                                                                                  aria-label="change date"
                                                                                  centerRipple={true}
                                                                                  className="MuiIconButton-root"
                                                                                  classes={
                                                                                    Object {
                                                                                      "disabled": "Mui-disabled",
                                                                                      "focusVisible": "Mui-focusVisible",
                                                                                      "root": "MuiButtonBase-root",
                                                                                    }
                                                                                  }
                                                                                  disabled={false}
                                                                                  focusRipple={true}
                                                                                  onClick={[Function]}
                                                                                >
                                                                                  <button
                                                                                    aria-label="change date"
                                                                                    className="MuiButtonBase-root MuiIconButton-root"
                                                                                    disabled={false}
                                                                                    onBlur={[Function]}
                                                                                    onClick={[Function]}
                                                                                    onDragLeave={[Function]}
                                                                                    onFocus={[Function]}
                                                                                    onKeyDown={[Function]}
                                                                                    onKeyUp={[Function]}
                                                                                    onMouseDown={[Function]}
                                                                                    onMouseLeave={[Function]}
                                                                                    onMouseUp={[Function]}
                                                                                    onTouchEnd={[Function]}
                                                                                    onTouchMove={[Function]}
                                                                                    onTouchStart={[Function]}
                                                                                    tabIndex={0}
                                                                                    type="button"
                                                                                  >
                                                                                    <span
                                                                                      className="MuiIconButton-label"
                                                                                    >
                                                                                      <KeyboardIcon>
                                                                                        <WithStyles(ForwardRef(SvgIcon))>
                                                                                          <ForwardRef(SvgIcon)
                                                                                            classes={
                                                                                              Object {
                                                                                                "colorAction": "MuiSvgIcon-colorAction",
                                                                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                                                "colorError": "MuiSvgIcon-colorError",
                                                                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                                                "root": "MuiSvgIcon-root",
                                                                                              }
                                                                                            }
                                                                                          >
                                                                                            <svg
                                                                                              aria-hidden={true}
                                                                                              className="MuiSvgIcon-root"
                                                                                              focusable="false"
                                                                                              viewBox="0 0 24 24"
                                                                                            >
                                                                                              <path
                                                                                                d="M17 12h-5v5h5v-5zM16 1v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2h-1V1h-2zm3 18H5V8h14v11z"
                                                                                              />
                                                                                              <path
                                                                                                d="M0 0h24v24H0z"
                                                                                                fill="none"
                                                                                              />
                                                                                            </svg>
                                                                                          </ForwardRef(SvgIcon)>
                                                                                        </WithStyles(ForwardRef(SvgIcon))>
                                                                                      </KeyboardIcon>
                                                                                    </span>
                                                                                    <WithStyles(memo)
                                                                                      center={true}
                                                                                    >
                                                                                      <ForwardRef(TouchRipple)
                                                                                        center={true}
                                                                                        classes={
                                                                                          Object {
                                                                                            "child": "MuiTouchRipple-child",
                                                                                            "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                            "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                            "ripple": "MuiTouchRipple-ripple",
                                                                                            "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                            "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                            "root": "MuiTouchRipple-root",
                                                                                          }
                                                                                        }
                                                                                      >
                                                                                        <span
                                                                                          className="MuiTouchRipple-root"
                                                                                        >
                                                                                          <TransitionGroup
                                                                                            childFactory={[Function]}
                                                                                            component={null}
                                                                                            exit={true}
                                                                                          />
                                                                                        </span>
                                                                                      </ForwardRef(TouchRipple)>
                                                                                    </WithStyles(memo)>
                                                                                  </button>
                                                                                </ForwardRef(ButtonBase)>
                                                                              </WithStyles(ForwardRef(ButtonBase))>
                                                                            </ForwardRef(IconButton)>
                                                                          </WithStyles(ForwardRef(IconButton))>
                                                                        </div>
                                                                      </ForwardRef(InputAdornment)>
                                                                    </WithStyles(ForwardRef(InputAdornment))>
                                                                  </div>
                                                                </ForwardRef(InputBase)>
                                                              </WithStyles(ForwardRef(InputBase))>
                                                            </ForwardRef(Input)>
                                                          </WithStyles(ForwardRef(Input))>
                                                        </div>
                                                      </ForwardRef(FormControl)>
                                                    </WithStyles(ForwardRef(FormControl))>
                                                  </ForwardRef(TextField)>
                                                </WithStyles(ForwardRef(TextField))>
                                              </Rifm>
                                            </KeyboardDateInput>
                                            <WithStyles(ModalDialog)
                                              cancelLabel="отмена"
                                              className="DatePicker__pickers"
                                              clearLabel="Clear"
                                              clearable={false}
                                              okLabel="OK"
                                              onAccept={[Function]}
                                              onClear={[Function]}
                                              onDismiss={[Function]}
                                              onSetToday={[Function]}
                                              open={false}
                                              showTodayButton={false}
                                              todayLabel="Today"
                                            >
                                              <ModalDialog
                                                cancelLabel="отмена"
                                                className="DatePicker__pickers"
                                                classes={
                                                  Object {
                                                    "dialog": "MuiPickersModal-dialog",
                                                    "dialogRoot": "MuiPickersModal-dialogRoot",
                                                    "dialogRootWider": "MuiPickersModal-dialogRootWider",
                                                    "withAdditionalAction": "MuiPickersModal-withAdditionalAction",
                                                  }
                                                }
                                                clearLabel="Clear"
                                                clearable={false}
                                                okLabel="OK"
                                                onAccept={[Function]}
                                                onClear={[Function]}
                                                onDismiss={[Function]}
                                                onSetToday={[Function]}
                                                open={false}
                                                showTodayButton={false}
                                                todayLabel="Today"
                                              >
                                                <WithStyles(ForwardRef(Dialog))
                                                  className="DatePicker__pickers"
                                                  classes={
                                                    Object {
                                                      "paper": "MuiPickersModal-dialogRoot",
                                                    }
                                                  }
                                                  onClose={[Function]}
                                                  open={false}
                                                  role="dialog"
                                                >
                                                  <ForwardRef(Dialog)
                                                    className="DatePicker__pickers"
                                                    classes={
                                                      Object {
                                                        "container": "MuiDialog-container",
                                                        "paper": "MuiDialog-paper MuiPickersModal-dialogRoot",
                                                        "paperFullScreen": "MuiDialog-paperFullScreen",
                                                        "paperFullWidth": "MuiDialog-paperFullWidth",
                                                        "paperScrollBody": "MuiDialog-paperScrollBody",
                                                        "paperScrollPaper": "MuiDialog-paperScrollPaper",
                                                        "paperWidthFalse": "MuiDialog-paperWidthFalse",
                                                        "paperWidthLg": "MuiDialog-paperWidthLg",
                                                        "paperWidthMd": "MuiDialog-paperWidthMd",
                                                        "paperWidthSm": "MuiDialog-paperWidthSm",
                                                        "paperWidthXl": "MuiDialog-paperWidthXl",
                                                        "paperWidthXs": "MuiDialog-paperWidthXs",
                                                        "root": "MuiDialog-root",
                                                        "scrollBody": "MuiDialog-scrollBody",
                                                        "scrollPaper": "MuiDialog-scrollPaper",
                                                      }
                                                    }
                                                    onClose={[Function]}
                                                    open={false}
                                                    role="dialog"
                                                  >
                                                    <ForwardRef(Modal)
                                                      BackdropComponent={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "Naked": Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "propTypes": Object {
                                                              "children": [Function],
                                                              "className": [Function],
                                                              "classes": [Function],
                                                              "invisible": [Function],
                                                              "open": [Function],
                                                              "transitionDuration": [Function],
                                                            },
                                                            "render": [Function],
                                                          },
                                                          "options": Object {
                                                            "defaultTheme": Object {
                                                              "breakpoints": Object {
                                                                "between": [Function],
                                                                "down": [Function],
                                                                "keys": Array [
                                                                  "xs",
                                                                  "sm",
                                                                  "md",
                                                                  "lg",
                                                                  "xl",
                                                                ],
                                                                "only": [Function],
                                                                "up": [Function],
                                                                "values": Object {
                                                                  "lg": 1280,
                                                                  "md": 960,
                                                                  "sm": 600,
                                                                  "xl": 1920,
                                                                  "xs": 0,
                                                                },
                                                                "width": [Function],
                                                              },
                                                              "direction": "ltr",
                                                              "mixins": Object {
                                                                "gutters": [Function],
                                                                "toolbar": Object {
                                                                  "@media (min-width:0px) and (orientation: landscape)": Object {
                                                                    "minHeight": 48,
                                                                  },
                                                                  "@media (min-width:600px)": Object {
                                                                    "minHeight": 64,
                                                                  },
                                                                  "minHeight": 56,
                                                                },
                                                              },
                                                              "overrides": Object {},
                                                              "palette": Object {
                                                                "action": Object {
                                                                  "activatedOpacity": 0.12,
                                                                  "active": "rgba(0, 0, 0, 0.54)",
                                                                  "disabled": "rgba(0, 0, 0, 0.26)",
                                                                  "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                                                  "disabledOpacity": 0.38,
                                                                  "focus": "rgba(0, 0, 0, 0.12)",
                                                                  "focusOpacity": 0.12,
                                                                  "hover": "rgba(0, 0, 0, 0.04)",
                                                                  "hoverOpacity": 0.04,
                                                                  "selected": "rgba(0, 0, 0, 0.08)",
                                                                  "selectedOpacity": 0.08,
                                                                },
                                                                "augmentColor": [Function],
                                                                "background": Object {
                                                                  "default": "#fafafa",
                                                                  "paper": "#fff",
                                                                },
                                                                "common": Object {
                                                                  "black": "#000",
                                                                  "white": "#fff",
                                                                },
                                                                "contrastThreshold": 3,
                                                                "divider": "rgba(0, 0, 0, 0.12)",
                                                                "error": Object {
                                                                  "contrastText": "#fff",
                                                                  "dark": "#d32f2f",
                                                                  "light": "#e57373",
                                                                  "main": "#f44336",
                                                                },
                                                                "getContrastText": [Function],
                                                                "grey": Object {
                                                                  "100": "#f5f5f5",
                                                                  "200": "#eeeeee",
                                                                  "300": "#e0e0e0",
                                                                  "400": "#bdbdbd",
                                                                  "50": "#fafafa",
                                                                  "500": "#9e9e9e",
                                                                  "600": "#757575",
                                                                  "700": "#616161",
                                                                  "800": "#424242",
                                                                  "900": "#212121",
                                                                  "A100": "#d5d5d5",
                                                                  "A200": "#aaaaaa",
                                                                  "A400": "#303030",
                                                                  "A700": "#616161",
                                                                },
                                                                "info": Object {
                                                                  "contrastText": "#fff",
                                                                  "dark": "#1976d2",
                                                                  "light": "#64b5f6",
                                                                  "main": "#2196f3",
                                                                },
                                                                "primary": Object {
                                                                  "contrastText": "#fff",
                                                                  "dark": "#303f9f",
                                                                  "light": "#7986cb",
                                                                  "main": "#3f51b5",
                                                                },
                                                                "secondary": Object {
                                                                  "contrastText": "#fff",
                                                                  "dark": "#c51162",
                                                                  "light": "#ff4081",
                                                                  "main": "#f50057",
                                                                },
                                                                "success": Object {
                                                                  "contrastText": "rgba(0, 0, 0, 0.87)",
                                                                  "dark": "#388e3c",
                                                                  "light": "#81c784",
                                                                  "main": "#4caf50",
                                                                },
                                                                "text": Object {
                                                                  "disabled": "rgba(0, 0, 0, 0.38)",
                                                                  "hint": "rgba(0, 0, 0, 0.38)",
                                                                  "primary": "rgba(0, 0, 0, 0.87)",
                                                                  "secondary": "rgba(0, 0, 0, 0.54)",
                                                                },
                                                                "tonalOffset": 0.2,
                                                                "type": "light",
                                                                "warning": Object {
                                                                  "contrastText": "rgba(0, 0, 0, 0.87)",
                                                                  "dark": "#f57c00",
                                                                  "light": "#ffb74d",
                                                                  "main": "#ff9800",
                                                                },
                                                              },
                                                              "props": Object {},
                                                              "shadows": Array [
                                                                "none",
                                                                "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                                                "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                                                "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                                                "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                                                "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                                                "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                                                "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                                                "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                                                "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                                                "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                                                "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                                                "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                                                "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                                                "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                                                "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                                                "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                                                "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                                                "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                                              ],
                                                              "shape": Object {
                                                                "borderRadius": 4,
                                                              },
                                                              "spacing": [Function],
                                                              "transitions": Object {
                                                                "create": [Function],
                                                                "duration": Object {
                                                                  "complex": 375,
                                                                  "enteringScreen": 225,
                                                                  "leavingScreen": 195,
                                                                  "short": 250,
                                                                  "shorter": 200,
                                                                  "shortest": 150,
                                                                  "standard": 300,
                                                                },
                                                                "easing": Object {
                                                                  "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                                                  "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                                                  "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                                                  "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                                                },
                                                                "getAutoHeightDuration": [Function],
                                                              },
                                                              "typography": Object {
                                                                "body1": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "1rem",
                                                                  "fontWeight": 400,
                                                                  "letterSpacing": "0.00938em",
                                                                  "lineHeight": 1.5,
                                                                },
                                                                "body2": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "0.875rem",
                                                                  "fontWeight": 400,
                                                                  "letterSpacing": "0.01071em",
                                                                  "lineHeight": 1.43,
                                                                },
                                                                "button": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "0.875rem",
                                                                  "fontWeight": 500,
                                                                  "letterSpacing": "0.02857em",
                                                                  "lineHeight": 1.75,
                                                                  "textTransform": "uppercase",
                                                                },
                                                                "caption": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "0.75rem",
                                                                  "fontWeight": 400,
                                                                  "letterSpacing": "0.03333em",
                                                                  "lineHeight": 1.66,
                                                                },
                                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                "fontSize": 14,
                                                                "fontWeightBold": 700,
                                                                "fontWeightLight": 300,
                                                                "fontWeightMedium": 500,
                                                                "fontWeightRegular": 400,
                                                                "h1": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "6rem",
                                                                  "fontWeight": 300,
                                                                  "letterSpacing": "-0.01562em",
                                                                  "lineHeight": 1.167,
                                                                },
                                                                "h2": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "3.75rem",
                                                                  "fontWeight": 300,
                                                                  "letterSpacing": "-0.00833em",
                                                                  "lineHeight": 1.2,
                                                                },
                                                                "h3": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "3rem",
                                                                  "fontWeight": 400,
                                                                  "letterSpacing": "0em",
                                                                  "lineHeight": 1.167,
                                                                },
                                                                "h4": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "2.125rem",
                                                                  "fontWeight": 400,
                                                                  "letterSpacing": "0.00735em",
                                                                  "lineHeight": 1.235,
                                                                },
                                                                "h5": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "1.5rem",
                                                                  "fontWeight": 400,
                                                                  "letterSpacing": "0em",
                                                                  "lineHeight": 1.334,
                                                                },
                                                                "h6": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "1.25rem",
                                                                  "fontWeight": 500,
                                                                  "letterSpacing": "0.0075em",
                                                                  "lineHeight": 1.6,
                                                                },
                                                                "htmlFontSize": 16,
                                                                "overline": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "0.75rem",
                                                                  "fontWeight": 400,
                                                                  "letterSpacing": "0.08333em",
                                                                  "lineHeight": 2.66,
                                                                  "textTransform": "uppercase",
                                                                },
                                                                "pxToRem": [Function],
                                                                "round": [Function],
                                                                "subtitle1": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "1rem",
                                                                  "fontWeight": 400,
                                                                  "letterSpacing": "0.00938em",
                                                                  "lineHeight": 1.75,
                                                                },
                                                                "subtitle2": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "0.875rem",
                                                                  "fontWeight": 500,
                                                                  "letterSpacing": "0.00714em",
                                                                  "lineHeight": 1.57,
                                                                },
                                                              },
                                                              "zIndex": Object {
                                                                "appBar": 1100,
                                                                "drawer": 1200,
                                                                "mobileStepper": 1000,
                                                                "modal": 1300,
                                                                "snackbar": 1400,
                                                                "speedDial": 1050,
                                                                "tooltip": 1500,
                                                              },
                                                            },
                                                            "name": "MuiBackdrop",
                                                          },
                                                          "propTypes": Object {
                                                            "classes": [Function],
                                                            "innerRef": [Function],
                                                          },
                                                          "render": [Function],
                                                          "useStyles": [Function],
                                                        }
                                                      }
                                                      BackdropProps={
                                                        Object {
                                                          "transitionDuration": Object {
                                                            "enter": 225,
                                                            "exit": 195,
                                                          },
                                                        }
                                                      }
                                                      className="MuiDialog-root DatePicker__pickers"
                                                      closeAfterTransition={true}
                                                      disableEscapeKeyDown={false}
                                                      onClose={[Function]}
                                                      open={false}
                                                      role="dialog"
                                                    />
                                                  </ForwardRef(Dialog)>
                                                </WithStyles(ForwardRef(Dialog))>
                                              </ModalDialog>
                                            </WithStyles(ModalDialog)>
                                          </ModalWrapper>
                                        </Wrapper>
                                      </PickerWithState>
                                      <PickerWithState
                                        DialogProps={
                                          Object {
                                            "className": "DatePicker__pickers",
                                          }
                                        }
                                        KeyboardButtonProps={
                                          Object {
                                            "aria-label": "change time",
                                          }
                                        }
                                        ampm={false}
                                        autoComplete="off"
                                        cancelLabel="отмена"
                                        className="DatePicker__item DatePicker__item_time"
                                        invalidDateMessage="Invalid Time Format"
                                        keyboardIcon={<Memo />}
                                        label="Время"
                                        margin="normal"
                                        onChange={[Function]}
                                        onClick={[Function]}
                                        openTo="hours"
                                        value={null}
                                        views={
                                          Array [
                                            "hours",
                                            "minutes",
                                          ]
                                        }
                                      >
                                        <Wrapper
                                          DateInputProps={
                                            Object {
                                              "format": "HH:mm",
                                              "inputValue": "",
                                              "onChange": [Function],
                                              "openPicker": [Function],
                                              "validationError": "",
                                            }
                                          }
                                          DialogProps={
                                            Object {
                                              "className": "DatePicker__pickers",
                                            }
                                          }
                                          InputComponent={[Function]}
                                          KeyboardButtonProps={
                                            Object {
                                              "aria-label": "change time",
                                            }
                                          }
                                          autoComplete="off"
                                          cancelLabel="отмена"
                                          className="DatePicker__item DatePicker__item_time"
                                          format="HH:mm"
                                          keyboardIcon={<Memo />}
                                          label="Время"
                                          margin="normal"
                                          onAccept={[Function]}
                                          onClear={[Function]}
                                          onClick={[Function]}
                                          onDismiss={[Function]}
                                          onSetToday={[Function]}
                                          open={false}
                                          refuse={/\\[\\^\\\\d\\]\\+/gi}
                                        >
                                          <ModalWrapper
                                            DateInputProps={
                                              Object {
                                                "format": "HH:mm",
                                                "inputValue": "",
                                                "onChange": [Function],
                                                "openPicker": [Function],
                                                "validationError": "",
                                              }
                                            }
                                            DialogProps={
                                              Object {
                                                "className": "DatePicker__pickers",
                                              }
                                            }
                                            InputComponent={[Function]}
                                            KeyboardButtonProps={
                                              Object {
                                                "aria-label": "change time",
                                              }
                                            }
                                            autoComplete="off"
                                            cancelLabel="отмена"
                                            className="DatePicker__item DatePicker__item_time"
                                            clearLabel="Clear"
                                            clearable={false}
                                            format="HH:mm"
                                            keyboardIcon={<Memo />}
                                            label="Время"
                                            margin="normal"
                                            okLabel="OK"
                                            onAccept={[Function]}
                                            onClear={[Function]}
                                            onClick={[Function]}
                                            onDismiss={[Function]}
                                            onSetToday={[Function]}
                                            open={false}
                                            refuse={/\\[\\^\\\\d\\]\\+/gi}
                                            showTodayButton={false}
                                            todayLabel="Today"
                                          >
                                            <KeyboardDateInput
                                              KeyboardButtonProps={
                                                Object {
                                                  "aria-label": "change time",
                                                }
                                              }
                                              autoComplete="off"
                                              className="DatePicker__item DatePicker__item_time"
                                              format="HH:mm"
                                              inputValue=""
                                              keyboardIcon={<Memo />}
                                              label="Время"
                                              margin="normal"
                                              onChange={[Function]}
                                              onClick={[Function]}
                                              openPicker={[Function]}
                                              refuse={/\\[\\^\\\\d\\]\\+/gi}
                                              validationError=""
                                            >
                                              <Rifm
                                                format={[Function]}
                                                key="__:__"
                                                onChange={[Function]}
                                                refuse={/\\[\\^\\\\d\\]\\+/gi}
                                                value=""
                                              >
                                                <WithStyles(ForwardRef(TextField))
                                                  InputProps={
                                                    Object {
                                                      "endAdornment": <WithStyles(ForwardRef(InputAdornment))
                                                        position="end"
                                                      >
                                                        <WithStyles(ForwardRef(IconButton))
                                                          aria-label="change time"
                                                          onClick={[Function]}
                                                        >
                                                          <Memo />
                                                        </WithStyles(ForwardRef(IconButton))>
                                                      </WithStyles(ForwardRef(InputAdornment))>,
                                                    }
                                                  }
                                                  autoComplete="off"
                                                  className="DatePicker__item DatePicker__item_time"
                                                  error={false}
                                                  helperText=""
                                                  label="Время"
                                                  margin="normal"
                                                  onChange={[Function]}
                                                  onClick={[Function]}
                                                  value=""
                                                >
                                                  <ForwardRef(TextField)
                                                    InputProps={
                                                      Object {
                                                        "endAdornment": <WithStyles(ForwardRef(InputAdornment))
                                                          position="end"
                                                        >
                                                          <WithStyles(ForwardRef(IconButton))
                                                            aria-label="change time"
                                                            onClick={[Function]}
                                                          >
                                                            <Memo />
                                                          </WithStyles(ForwardRef(IconButton))>
                                                        </WithStyles(ForwardRef(InputAdornment))>,
                                                      }
                                                    }
                                                    autoComplete="off"
                                                    className="DatePicker__item DatePicker__item_time"
                                                    classes={
                                                      Object {
                                                        "root": "MuiTextField-root",
                                                      }
                                                    }
                                                    error={false}
                                                    helperText=""
                                                    label="Время"
                                                    margin="normal"
                                                    onChange={[Function]}
                                                    onClick={[Function]}
                                                    value=""
                                                  >
                                                    <WithStyles(ForwardRef(FormControl))
                                                      className="MuiTextField-root DatePicker__item DatePicker__item_time"
                                                      color="primary"
                                                      disabled={false}
                                                      error={false}
                                                      fullWidth={false}
                                                      margin="normal"
                                                      onClick={[Function]}
                                                      required={false}
                                                      variant="standard"
                                                    >
                                                      <ForwardRef(FormControl)
                                                        className="MuiTextField-root DatePicker__item DatePicker__item_time"
                                                        classes={
                                                          Object {
                                                            "fullWidth": "MuiFormControl-fullWidth",
                                                            "marginDense": "MuiFormControl-marginDense",
                                                            "marginNormal": "MuiFormControl-marginNormal",
                                                            "root": "MuiFormControl-root",
                                                          }
                                                        }
                                                        color="primary"
                                                        disabled={false}
                                                        error={false}
                                                        fullWidth={false}
                                                        margin="normal"
                                                        onClick={[Function]}
                                                        required={false}
                                                        variant="standard"
                                                      >
                                                        <div
                                                          className="MuiFormControl-root MuiTextField-root DatePicker__item DatePicker__item_time MuiFormControl-marginNormal"
                                                          onClick={[Function]}
                                                        >
                                                          <WithStyles(ForwardRef(InputLabel))>
                                                            <ForwardRef(InputLabel)
                                                              classes={
                                                                Object {
                                                                  "animated": "MuiInputLabel-animated",
                                                                  "asterisk": "MuiInputLabel-asterisk",
                                                                  "disabled": "Mui-disabled",
                                                                  "error": "Mui-error",
                                                                  "filled": "MuiInputLabel-filled",
                                                                  "focused": "Mui-focused",
                                                                  "formControl": "MuiInputLabel-formControl",
                                                                  "marginDense": "MuiInputLabel-marginDense",
                                                                  "outlined": "MuiInputLabel-outlined",
                                                                  "required": "Mui-required",
                                                                  "root": "MuiInputLabel-root",
                                                                  "shrink": "MuiInputLabel-shrink",
                                                                }
                                                              }
                                                            >
                                                              <WithStyles(ForwardRef(FormLabel))
                                                                className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                                                                classes={
                                                                  Object {
                                                                    "asterisk": "MuiInputLabel-asterisk",
                                                                    "disabled": "Mui-disabled",
                                                                    "error": "Mui-error",
                                                                    "focused": "Mui-focused",
                                                                    "required": "Mui-required",
                                                                  }
                                                                }
                                                                data-shrink={false}
                                                              >
                                                                <ForwardRef(FormLabel)
                                                                  className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                                                                  classes={
                                                                    Object {
                                                                      "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                                                      "colorSecondary": "MuiFormLabel-colorSecondary",
                                                                      "disabled": "Mui-disabled Mui-disabled",
                                                                      "error": "Mui-error Mui-error",
                                                                      "filled": "MuiFormLabel-filled",
                                                                      "focused": "Mui-focused Mui-focused",
                                                                      "required": "Mui-required Mui-required",
                                                                      "root": "MuiFormLabel-root",
                                                                    }
                                                                  }
                                                                  data-shrink={false}
                                                                >
                                                                  <label
                                                                    className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                                                                    data-shrink={false}
                                                                  >
                                                                    Время
                                                                  </label>
                                                                </ForwardRef(FormLabel)>
                                                              </WithStyles(ForwardRef(FormLabel))>
                                                            </ForwardRef(InputLabel)>
                                                          </WithStyles(ForwardRef(InputLabel))>
                                                          <WithStyles(ForwardRef(Input))
                                                            autoComplete="off"
                                                            autoFocus={false}
                                                            endAdornment={
                                                              <WithStyles(ForwardRef(InputAdornment))
                                                                position="end"
                                                              >
                                                                <WithStyles(ForwardRef(IconButton))
                                                                  aria-label="change time"
                                                                  onClick={[Function]}
                                                                >
                                                                  <Memo />
                                                                </WithStyles(ForwardRef(IconButton))>
                                                              </WithStyles(ForwardRef(InputAdornment))>
                                                            }
                                                            fullWidth={false}
                                                            multiline={false}
                                                            onChange={[Function]}
                                                            value=""
                                                          >
                                                            <ForwardRef(Input)
                                                              autoComplete="off"
                                                              autoFocus={false}
                                                              classes={
                                                                Object {
                                                                  "colorSecondary": "MuiInput-colorSecondary",
                                                                  "disabled": "Mui-disabled",
                                                                  "error": "Mui-error",
                                                                  "focused": "Mui-focused",
                                                                  "formControl": "MuiInput-formControl",
                                                                  "fullWidth": "MuiInput-fullWidth",
                                                                  "input": "MuiInput-input",
                                                                  "inputMarginDense": "MuiInput-inputMarginDense",
                                                                  "inputMultiline": "MuiInput-inputMultiline",
                                                                  "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                                  "marginDense": "MuiInput-marginDense",
                                                                  "multiline": "MuiInput-multiline",
                                                                  "root": "MuiInput-root",
                                                                  "underline": "MuiInput-underline",
                                                                }
                                                              }
                                                              endAdornment={
                                                                <WithStyles(ForwardRef(InputAdornment))
                                                                  position="end"
                                                                >
                                                                  <WithStyles(ForwardRef(IconButton))
                                                                    aria-label="change time"
                                                                    onClick={[Function]}
                                                                  >
                                                                    <Memo />
                                                                  </WithStyles(ForwardRef(IconButton))>
                                                                </WithStyles(ForwardRef(InputAdornment))>
                                                              }
                                                              fullWidth={false}
                                                              multiline={false}
                                                              onChange={[Function]}
                                                              value=""
                                                            >
                                                              <WithStyles(ForwardRef(InputBase))
                                                                autoComplete="off"
                                                                autoFocus={false}
                                                                classes={
                                                                  Object {
                                                                    "colorSecondary": "MuiInput-colorSecondary",
                                                                    "disabled": "Mui-disabled",
                                                                    "error": "Mui-error",
                                                                    "focused": "Mui-focused",
                                                                    "formControl": "MuiInput-formControl",
                                                                    "fullWidth": "MuiInput-fullWidth",
                                                                    "input": "MuiInput-input",
                                                                    "inputMarginDense": "MuiInput-inputMarginDense",
                                                                    "inputMultiline": "MuiInput-inputMultiline",
                                                                    "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                                    "marginDense": "MuiInput-marginDense",
                                                                    "multiline": "MuiInput-multiline",
                                                                    "root": "MuiInput-root MuiInput-underline",
                                                                    "underline": null,
                                                                  }
                                                                }
                                                                endAdornment={
                                                                  <WithStyles(ForwardRef(InputAdornment))
                                                                    position="end"
                                                                  >
                                                                    <WithStyles(ForwardRef(IconButton))
                                                                      aria-label="change time"
                                                                      onClick={[Function]}
                                                                    >
                                                                      <Memo />
                                                                    </WithStyles(ForwardRef(IconButton))>
                                                                  </WithStyles(ForwardRef(InputAdornment))>
                                                                }
                                                                fullWidth={false}
                                                                inputComponent="input"
                                                                multiline={false}
                                                                onChange={[Function]}
                                                                type="text"
                                                                value=""
                                                              >
                                                                <ForwardRef(InputBase)
                                                                  autoComplete="off"
                                                                  autoFocus={false}
                                                                  classes={
                                                                    Object {
                                                                      "adornedEnd": "MuiInputBase-adornedEnd",
                                                                      "adornedStart": "MuiInputBase-adornedStart",
                                                                      "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                                      "disabled": "Mui-disabled Mui-disabled",
                                                                      "error": "Mui-error Mui-error",
                                                                      "focused": "Mui-focused Mui-focused",
                                                                      "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                                      "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                                      "input": "MuiInputBase-input MuiInput-input",
                                                                      "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                                      "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                                      "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                                      "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                                      "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                                      "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                                      "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                                      "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                                      "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                                    }
                                                                  }
                                                                  endAdornment={
                                                                    <WithStyles(ForwardRef(InputAdornment))
                                                                      position="end"
                                                                    >
                                                                      <WithStyles(ForwardRef(IconButton))
                                                                        aria-label="change time"
                                                                        onClick={[Function]}
                                                                      >
                                                                        <Memo />
                                                                      </WithStyles(ForwardRef(IconButton))>
                                                                    </WithStyles(ForwardRef(InputAdornment))>
                                                                  }
                                                                  fullWidth={false}
                                                                  inputComponent="input"
                                                                  multiline={false}
                                                                  onChange={[Function]}
                                                                  type="text"
                                                                  value=""
                                                                >
                                                                  <div
                                                                    className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedEnd"
                                                                    onClick={[Function]}
                                                                  >
                                                                    <input
                                                                      aria-invalid={false}
                                                                      autoComplete="off"
                                                                      autoFocus={false}
                                                                      className="MuiInputBase-input MuiInput-input MuiInputBase-inputAdornedEnd"
                                                                      disabled={false}
                                                                      onAnimationStart={[Function]}
                                                                      onBlur={[Function]}
                                                                      onChange={[Function]}
                                                                      onFocus={[Function]}
                                                                      required={false}
                                                                      type="text"
                                                                      value=""
                                                                    />
                                                                    <WithStyles(ForwardRef(InputAdornment))
                                                                      position="end"
                                                                    >
                                                                      <ForwardRef(InputAdornment)
                                                                        classes={
                                                                          Object {
                                                                            "disablePointerEvents": "MuiInputAdornment-disablePointerEvents",
                                                                            "filled": "MuiInputAdornment-filled",
                                                                            "hiddenLabel": "MuiInputAdornment-hiddenLabel",
                                                                            "marginDense": "MuiInputAdornment-marginDense",
                                                                            "positionEnd": "MuiInputAdornment-positionEnd",
                                                                            "positionStart": "MuiInputAdornment-positionStart",
                                                                            "root": "MuiInputAdornment-root",
                                                                          }
                                                                        }
                                                                        position="end"
                                                                      >
                                                                        <div
                                                                          className="MuiInputAdornment-root MuiInputAdornment-positionEnd"
                                                                        >
                                                                          <WithStyles(ForwardRef(IconButton))
                                                                            aria-label="change time"
                                                                            onClick={[Function]}
                                                                          >
                                                                            <ForwardRef(IconButton)
                                                                              aria-label="change time"
                                                                              classes={
                                                                                Object {
                                                                                  "colorInherit": "MuiIconButton-colorInherit",
                                                                                  "colorPrimary": "MuiIconButton-colorPrimary",
                                                                                  "colorSecondary": "MuiIconButton-colorSecondary",
                                                                                  "disabled": "Mui-disabled",
                                                                                  "edgeEnd": "MuiIconButton-edgeEnd",
                                                                                  "edgeStart": "MuiIconButton-edgeStart",
                                                                                  "label": "MuiIconButton-label",
                                                                                  "root": "MuiIconButton-root",
                                                                                  "sizeSmall": "MuiIconButton-sizeSmall",
                                                                                }
                                                                              }
                                                                              onClick={[Function]}
                                                                            >
                                                                              <WithStyles(ForwardRef(ButtonBase))
                                                                                aria-label="change time"
                                                                                centerRipple={true}
                                                                                className="MuiIconButton-root"
                                                                                disabled={false}
                                                                                focusRipple={true}
                                                                                onClick={[Function]}
                                                                              >
                                                                                <ForwardRef(ButtonBase)
                                                                                  aria-label="change time"
                                                                                  centerRipple={true}
                                                                                  className="MuiIconButton-root"
                                                                                  classes={
                                                                                    Object {
                                                                                      "disabled": "Mui-disabled",
                                                                                      "focusVisible": "Mui-focusVisible",
                                                                                      "root": "MuiButtonBase-root",
                                                                                    }
                                                                                  }
                                                                                  disabled={false}
                                                                                  focusRipple={true}
                                                                                  onClick={[Function]}
                                                                                >
                                                                                  <button
                                                                                    aria-label="change time"
                                                                                    className="MuiButtonBase-root MuiIconButton-root"
                                                                                    disabled={false}
                                                                                    onBlur={[Function]}
                                                                                    onClick={[Function]}
                                                                                    onDragLeave={[Function]}
                                                                                    onFocus={[Function]}
                                                                                    onKeyDown={[Function]}
                                                                                    onKeyUp={[Function]}
                                                                                    onMouseDown={[Function]}
                                                                                    onMouseLeave={[Function]}
                                                                                    onMouseUp={[Function]}
                                                                                    onTouchEnd={[Function]}
                                                                                    onTouchMove={[Function]}
                                                                                    onTouchStart={[Function]}
                                                                                    tabIndex={0}
                                                                                    type="button"
                                                                                  >
                                                                                    <span
                                                                                      className="MuiIconButton-label"
                                                                                    >
                                                                                      <ForwardRef(AlarmIcon)>
                                                                                        <WithStyles(ForwardRef(SvgIcon))>
                                                                                          <ForwardRef(SvgIcon)
                                                                                            classes={
                                                                                              Object {
                                                                                                "colorAction": "MuiSvgIcon-colorAction",
                                                                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                                                "colorError": "MuiSvgIcon-colorError",
                                                                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                                                "root": "MuiSvgIcon-root",
                                                                                              }
                                                                                            }
                                                                                          >
                                                                                            <svg
                                                                                              aria-hidden={true}
                                                                                              className="MuiSvgIcon-root"
                                                                                              focusable="false"
                                                                                              viewBox="0 0 24 24"
                                                                                            >
                                                                                              <path
                                                                                                d="M22 5.72l-4.6-3.86-1.29 1.53 4.6 3.86L22 5.72zM7.88 3.39L6.6 1.86 2 5.71l1.29 1.53 4.59-3.85zM12.5 8H11v6l4.75 2.85.75-1.23-4-2.37V8zM12 4c-4.97 0-9 4.03-9 9s4.02 9 9 9c4.97 0 9-4.03 9-9s-4.03-9-9-9zm0 16c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7z"
                                                                                              />
                                                                                            </svg>
                                                                                          </ForwardRef(SvgIcon)>
                                                                                        </WithStyles(ForwardRef(SvgIcon))>
                                                                                      </ForwardRef(AlarmIcon)>
                                                                                    </span>
                                                                                    <WithStyles(memo)
                                                                                      center={true}
                                                                                    >
                                                                                      <ForwardRef(TouchRipple)
                                                                                        center={true}
                                                                                        classes={
                                                                                          Object {
                                                                                            "child": "MuiTouchRipple-child",
                                                                                            "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                            "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                            "ripple": "MuiTouchRipple-ripple",
                                                                                            "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                            "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                            "root": "MuiTouchRipple-root",
                                                                                          }
                                                                                        }
                                                                                      >
                                                                                        <span
                                                                                          className="MuiTouchRipple-root"
                                                                                        >
                                                                                          <TransitionGroup
                                                                                            childFactory={[Function]}
                                                                                            component={null}
                                                                                            exit={true}
                                                                                          />
                                                                                        </span>
                                                                                      </ForwardRef(TouchRipple)>
                                                                                    </WithStyles(memo)>
                                                                                  </button>
                                                                                </ForwardRef(ButtonBase)>
                                                                              </WithStyles(ForwardRef(ButtonBase))>
                                                                            </ForwardRef(IconButton)>
                                                                          </WithStyles(ForwardRef(IconButton))>
                                                                        </div>
                                                                      </ForwardRef(InputAdornment)>
                                                                    </WithStyles(ForwardRef(InputAdornment))>
                                                                  </div>
                                                                </ForwardRef(InputBase)>
                                                              </WithStyles(ForwardRef(InputBase))>
                                                            </ForwardRef(Input)>
                                                          </WithStyles(ForwardRef(Input))>
                                                        </div>
                                                      </ForwardRef(FormControl)>
                                                    </WithStyles(ForwardRef(FormControl))>
                                                  </ForwardRef(TextField)>
                                                </WithStyles(ForwardRef(TextField))>
                                              </Rifm>
                                            </KeyboardDateInput>
                                            <WithStyles(ModalDialog)
                                              cancelLabel="отмена"
                                              className="DatePicker__pickers"
                                              clearLabel="Clear"
                                              clearable={false}
                                              okLabel="OK"
                                              onAccept={[Function]}
                                              onClear={[Function]}
                                              onDismiss={[Function]}
                                              onSetToday={[Function]}
                                              open={false}
                                              showTodayButton={false}
                                              todayLabel="Today"
                                            >
                                              <ModalDialog
                                                cancelLabel="отмена"
                                                className="DatePicker__pickers"
                                                classes={
                                                  Object {
                                                    "dialog": "MuiPickersModal-dialog",
                                                    "dialogRoot": "MuiPickersModal-dialogRoot",
                                                    "dialogRootWider": "MuiPickersModal-dialogRootWider",
                                                    "withAdditionalAction": "MuiPickersModal-withAdditionalAction",
                                                  }
                                                }
                                                clearLabel="Clear"
                                                clearable={false}
                                                okLabel="OK"
                                                onAccept={[Function]}
                                                onClear={[Function]}
                                                onDismiss={[Function]}
                                                onSetToday={[Function]}
                                                open={false}
                                                showTodayButton={false}
                                                todayLabel="Today"
                                              >
                                                <WithStyles(ForwardRef(Dialog))
                                                  className="DatePicker__pickers"
                                                  classes={
                                                    Object {
                                                      "paper": "MuiPickersModal-dialogRoot",
                                                    }
                                                  }
                                                  onClose={[Function]}
                                                  open={false}
                                                  role="dialog"
                                                >
                                                  <ForwardRef(Dialog)
                                                    className="DatePicker__pickers"
                                                    classes={
                                                      Object {
                                                        "container": "MuiDialog-container",
                                                        "paper": "MuiDialog-paper MuiPickersModal-dialogRoot",
                                                        "paperFullScreen": "MuiDialog-paperFullScreen",
                                                        "paperFullWidth": "MuiDialog-paperFullWidth",
                                                        "paperScrollBody": "MuiDialog-paperScrollBody",
                                                        "paperScrollPaper": "MuiDialog-paperScrollPaper",
                                                        "paperWidthFalse": "MuiDialog-paperWidthFalse",
                                                        "paperWidthLg": "MuiDialog-paperWidthLg",
                                                        "paperWidthMd": "MuiDialog-paperWidthMd",
                                                        "paperWidthSm": "MuiDialog-paperWidthSm",
                                                        "paperWidthXl": "MuiDialog-paperWidthXl",
                                                        "paperWidthXs": "MuiDialog-paperWidthXs",
                                                        "root": "MuiDialog-root",
                                                        "scrollBody": "MuiDialog-scrollBody",
                                                        "scrollPaper": "MuiDialog-scrollPaper",
                                                      }
                                                    }
                                                    onClose={[Function]}
                                                    open={false}
                                                    role="dialog"
                                                  >
                                                    <ForwardRef(Modal)
                                                      BackdropComponent={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "Naked": Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "propTypes": Object {
                                                              "children": [Function],
                                                              "className": [Function],
                                                              "classes": [Function],
                                                              "invisible": [Function],
                                                              "open": [Function],
                                                              "transitionDuration": [Function],
                                                            },
                                                            "render": [Function],
                                                          },
                                                          "options": Object {
                                                            "defaultTheme": Object {
                                                              "breakpoints": Object {
                                                                "between": [Function],
                                                                "down": [Function],
                                                                "keys": Array [
                                                                  "xs",
                                                                  "sm",
                                                                  "md",
                                                                  "lg",
                                                                  "xl",
                                                                ],
                                                                "only": [Function],
                                                                "up": [Function],
                                                                "values": Object {
                                                                  "lg": 1280,
                                                                  "md": 960,
                                                                  "sm": 600,
                                                                  "xl": 1920,
                                                                  "xs": 0,
                                                                },
                                                                "width": [Function],
                                                              },
                                                              "direction": "ltr",
                                                              "mixins": Object {
                                                                "gutters": [Function],
                                                                "toolbar": Object {
                                                                  "@media (min-width:0px) and (orientation: landscape)": Object {
                                                                    "minHeight": 48,
                                                                  },
                                                                  "@media (min-width:600px)": Object {
                                                                    "minHeight": 64,
                                                                  },
                                                                  "minHeight": 56,
                                                                },
                                                              },
                                                              "overrides": Object {},
                                                              "palette": Object {
                                                                "action": Object {
                                                                  "activatedOpacity": 0.12,
                                                                  "active": "rgba(0, 0, 0, 0.54)",
                                                                  "disabled": "rgba(0, 0, 0, 0.26)",
                                                                  "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                                                  "disabledOpacity": 0.38,
                                                                  "focus": "rgba(0, 0, 0, 0.12)",
                                                                  "focusOpacity": 0.12,
                                                                  "hover": "rgba(0, 0, 0, 0.04)",
                                                                  "hoverOpacity": 0.04,
                                                                  "selected": "rgba(0, 0, 0, 0.08)",
                                                                  "selectedOpacity": 0.08,
                                                                },
                                                                "augmentColor": [Function],
                                                                "background": Object {
                                                                  "default": "#fafafa",
                                                                  "paper": "#fff",
                                                                },
                                                                "common": Object {
                                                                  "black": "#000",
                                                                  "white": "#fff",
                                                                },
                                                                "contrastThreshold": 3,
                                                                "divider": "rgba(0, 0, 0, 0.12)",
                                                                "error": Object {
                                                                  "contrastText": "#fff",
                                                                  "dark": "#d32f2f",
                                                                  "light": "#e57373",
                                                                  "main": "#f44336",
                                                                },
                                                                "getContrastText": [Function],
                                                                "grey": Object {
                                                                  "100": "#f5f5f5",
                                                                  "200": "#eeeeee",
                                                                  "300": "#e0e0e0",
                                                                  "400": "#bdbdbd",
                                                                  "50": "#fafafa",
                                                                  "500": "#9e9e9e",
                                                                  "600": "#757575",
                                                                  "700": "#616161",
                                                                  "800": "#424242",
                                                                  "900": "#212121",
                                                                  "A100": "#d5d5d5",
                                                                  "A200": "#aaaaaa",
                                                                  "A400": "#303030",
                                                                  "A700": "#616161",
                                                                },
                                                                "info": Object {
                                                                  "contrastText": "#fff",
                                                                  "dark": "#1976d2",
                                                                  "light": "#64b5f6",
                                                                  "main": "#2196f3",
                                                                },
                                                                "primary": Object {
                                                                  "contrastText": "#fff",
                                                                  "dark": "#303f9f",
                                                                  "light": "#7986cb",
                                                                  "main": "#3f51b5",
                                                                },
                                                                "secondary": Object {
                                                                  "contrastText": "#fff",
                                                                  "dark": "#c51162",
                                                                  "light": "#ff4081",
                                                                  "main": "#f50057",
                                                                },
                                                                "success": Object {
                                                                  "contrastText": "rgba(0, 0, 0, 0.87)",
                                                                  "dark": "#388e3c",
                                                                  "light": "#81c784",
                                                                  "main": "#4caf50",
                                                                },
                                                                "text": Object {
                                                                  "disabled": "rgba(0, 0, 0, 0.38)",
                                                                  "hint": "rgba(0, 0, 0, 0.38)",
                                                                  "primary": "rgba(0, 0, 0, 0.87)",
                                                                  "secondary": "rgba(0, 0, 0, 0.54)",
                                                                },
                                                                "tonalOffset": 0.2,
                                                                "type": "light",
                                                                "warning": Object {
                                                                  "contrastText": "rgba(0, 0, 0, 0.87)",
                                                                  "dark": "#f57c00",
                                                                  "light": "#ffb74d",
                                                                  "main": "#ff9800",
                                                                },
                                                              },
                                                              "props": Object {},
                                                              "shadows": Array [
                                                                "none",
                                                                "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                                                "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                                                "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                                                "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                                                "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                                                "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                                                "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                                                "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                                                "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                                                "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                                                "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                                                "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                                                "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                                                "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                                                "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                                                "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                                                "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                                                "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                                              ],
                                                              "shape": Object {
                                                                "borderRadius": 4,
                                                              },
                                                              "spacing": [Function],
                                                              "transitions": Object {
                                                                "create": [Function],
                                                                "duration": Object {
                                                                  "complex": 375,
                                                                  "enteringScreen": 225,
                                                                  "leavingScreen": 195,
                                                                  "short": 250,
                                                                  "shorter": 200,
                                                                  "shortest": 150,
                                                                  "standard": 300,
                                                                },
                                                                "easing": Object {
                                                                  "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                                                  "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                                                  "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                                                  "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                                                },
                                                                "getAutoHeightDuration": [Function],
                                                              },
                                                              "typography": Object {
                                                                "body1": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "1rem",
                                                                  "fontWeight": 400,
                                                                  "letterSpacing": "0.00938em",
                                                                  "lineHeight": 1.5,
                                                                },
                                                                "body2": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "0.875rem",
                                                                  "fontWeight": 400,
                                                                  "letterSpacing": "0.01071em",
                                                                  "lineHeight": 1.43,
                                                                },
                                                                "button": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "0.875rem",
                                                                  "fontWeight": 500,
                                                                  "letterSpacing": "0.02857em",
                                                                  "lineHeight": 1.75,
                                                                  "textTransform": "uppercase",
                                                                },
                                                                "caption": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "0.75rem",
                                                                  "fontWeight": 400,
                                                                  "letterSpacing": "0.03333em",
                                                                  "lineHeight": 1.66,
                                                                },
                                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                "fontSize": 14,
                                                                "fontWeightBold": 700,
                                                                "fontWeightLight": 300,
                                                                "fontWeightMedium": 500,
                                                                "fontWeightRegular": 400,
                                                                "h1": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "6rem",
                                                                  "fontWeight": 300,
                                                                  "letterSpacing": "-0.01562em",
                                                                  "lineHeight": 1.167,
                                                                },
                                                                "h2": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "3.75rem",
                                                                  "fontWeight": 300,
                                                                  "letterSpacing": "-0.00833em",
                                                                  "lineHeight": 1.2,
                                                                },
                                                                "h3": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "3rem",
                                                                  "fontWeight": 400,
                                                                  "letterSpacing": "0em",
                                                                  "lineHeight": 1.167,
                                                                },
                                                                "h4": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "2.125rem",
                                                                  "fontWeight": 400,
                                                                  "letterSpacing": "0.00735em",
                                                                  "lineHeight": 1.235,
                                                                },
                                                                "h5": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "1.5rem",
                                                                  "fontWeight": 400,
                                                                  "letterSpacing": "0em",
                                                                  "lineHeight": 1.334,
                                                                },
                                                                "h6": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "1.25rem",
                                                                  "fontWeight": 500,
                                                                  "letterSpacing": "0.0075em",
                                                                  "lineHeight": 1.6,
                                                                },
                                                                "htmlFontSize": 16,
                                                                "overline": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "0.75rem",
                                                                  "fontWeight": 400,
                                                                  "letterSpacing": "0.08333em",
                                                                  "lineHeight": 2.66,
                                                                  "textTransform": "uppercase",
                                                                },
                                                                "pxToRem": [Function],
                                                                "round": [Function],
                                                                "subtitle1": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "1rem",
                                                                  "fontWeight": 400,
                                                                  "letterSpacing": "0.00938em",
                                                                  "lineHeight": 1.75,
                                                                },
                                                                "subtitle2": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "0.875rem",
                                                                  "fontWeight": 500,
                                                                  "letterSpacing": "0.00714em",
                                                                  "lineHeight": 1.57,
                                                                },
                                                              },
                                                              "zIndex": Object {
                                                                "appBar": 1100,
                                                                "drawer": 1200,
                                                                "mobileStepper": 1000,
                                                                "modal": 1300,
                                                                "snackbar": 1400,
                                                                "speedDial": 1050,
                                                                "tooltip": 1500,
                                                              },
                                                            },
                                                            "name": "MuiBackdrop",
                                                          },
                                                          "propTypes": Object {
                                                            "classes": [Function],
                                                            "innerRef": [Function],
                                                          },
                                                          "render": [Function],
                                                          "useStyles": [Function],
                                                        }
                                                      }
                                                      BackdropProps={
                                                        Object {
                                                          "transitionDuration": Object {
                                                            "enter": 225,
                                                            "exit": 195,
                                                          },
                                                        }
                                                      }
                                                      className="MuiDialog-root DatePicker__pickers"
                                                      closeAfterTransition={true}
                                                      disableEscapeKeyDown={false}
                                                      onClose={[Function]}
                                                      open={false}
                                                      role="dialog"
                                                    />
                                                  </ForwardRef(Dialog)>
                                                </WithStyles(ForwardRef(Dialog))>
                                              </ModalDialog>
                                            </WithStyles(ModalDialog)>
                                          </ModalWrapper>
                                        </Wrapper>
                                      </PickerWithState>
                                    </MuiPickersUtilsProvider>
                                  </div>
                                </Memo(DatePicker)>
                                <WithStyles(ForwardRef(IconButton))
                                  aria-label="edit"
                                  className="ToDoListItem__button ToDoListItem__button_important  ToDoListItem__button_marginRight "
                                  color="inherit"
                                  onClick={[Function]}
                                >
                                  <ForwardRef(IconButton)
                                    aria-label="edit"
                                    className="ToDoListItem__button ToDoListItem__button_important  ToDoListItem__button_marginRight "
                                    classes={
                                      Object {
                                        "colorInherit": "MuiIconButton-colorInherit",
                                        "colorPrimary": "MuiIconButton-colorPrimary",
                                        "colorSecondary": "MuiIconButton-colorSecondary",
                                        "disabled": "Mui-disabled",
                                        "edgeEnd": "MuiIconButton-edgeEnd",
                                        "edgeStart": "MuiIconButton-edgeStart",
                                        "label": "MuiIconButton-label",
                                        "root": "MuiIconButton-root",
                                        "sizeSmall": "MuiIconButton-sizeSmall",
                                      }
                                    }
                                    color="inherit"
                                    onClick={[Function]}
                                  >
                                    <WithStyles(ForwardRef(ButtonBase))
                                      aria-label="edit"
                                      centerRipple={true}
                                      className="MuiIconButton-root ToDoListItem__button ToDoListItem__button_important  ToDoListItem__button_marginRight  MuiIconButton-colorInherit"
                                      disabled={false}
                                      focusRipple={true}
                                      onClick={[Function]}
                                    >
                                      <ForwardRef(ButtonBase)
                                        aria-label="edit"
                                        centerRipple={true}
                                        className="MuiIconButton-root ToDoListItem__button ToDoListItem__button_important  ToDoListItem__button_marginRight  MuiIconButton-colorInherit"
                                        classes={
                                          Object {
                                            "disabled": "Mui-disabled",
                                            "focusVisible": "Mui-focusVisible",
                                            "root": "MuiButtonBase-root",
                                          }
                                        }
                                        disabled={false}
                                        focusRipple={true}
                                        onClick={[Function]}
                                      >
                                        <button
                                          aria-label="edit"
                                          className="MuiButtonBase-root MuiIconButton-root ToDoListItem__button ToDoListItem__button_important  ToDoListItem__button_marginRight  MuiIconButton-colorInherit"
                                          disabled={false}
                                          onBlur={[Function]}
                                          onClick={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex={0}
                                          type="button"
                                        >
                                          <span
                                            className="MuiIconButton-label"
                                          >
                                            <ForwardRef(StarIcon)
                                              fontSize="medium"
                                            >
                                              <WithStyles(ForwardRef(SvgIcon))
                                                fontSize="medium"
                                              >
                                                <ForwardRef(SvgIcon)
                                                  classes={
                                                    Object {
                                                      "colorAction": "MuiSvgIcon-colorAction",
                                                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                      "colorError": "MuiSvgIcon-colorError",
                                                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                      "root": "MuiSvgIcon-root",
                                                    }
                                                  }
                                                  fontSize="medium"
                                                >
                                                  <svg
                                                    aria-hidden={true}
                                                    className="MuiSvgIcon-root"
                                                    focusable="false"
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <path
                                                      d="M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z"
                                                    />
                                                  </svg>
                                                </ForwardRef(SvgIcon)>
                                              </WithStyles(ForwardRef(SvgIcon))>
                                            </ForwardRef(StarIcon)>
                                          </span>
                                          <WithStyles(memo)
                                            center={true}
                                          >
                                            <ForwardRef(TouchRipple)
                                              center={true}
                                              classes={
                                                Object {
                                                  "child": "MuiTouchRipple-child",
                                                  "childLeaving": "MuiTouchRipple-childLeaving",
                                                  "childPulsate": "MuiTouchRipple-childPulsate",
                                                  "ripple": "MuiTouchRipple-ripple",
                                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                  "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                  "root": "MuiTouchRipple-root",
                                                }
                                              }
                                            >
                                              <span
                                                className="MuiTouchRipple-root"
                                              >
                                                <TransitionGroup
                                                  childFactory={[Function]}
                                                  component={null}
                                                  exit={true}
                                                />
                                              </span>
                                            </ForwardRef(TouchRipple)>
                                          </WithStyles(memo)>
                                        </button>
                                      </ForwardRef(ButtonBase)>
                                    </WithStyles(ForwardRef(ButtonBase))>
                                  </ForwardRef(IconButton)>
                                </WithStyles(ForwardRef(IconButton))>
                                <WithStyles(ForwardRef(IconButton))
                                  aria-label="edit"
                                  className="ToDoListItem__button ToDoListItem__button_edit ToDoListItem__button_marginRight"
                                  color="inherit"
                                  onClick={[Function]}
                                >
                                  <ForwardRef(IconButton)
                                    aria-label="edit"
                                    className="ToDoListItem__button ToDoListItem__button_edit ToDoListItem__button_marginRight"
                                    classes={
                                      Object {
                                        "colorInherit": "MuiIconButton-colorInherit",
                                        "colorPrimary": "MuiIconButton-colorPrimary",
                                        "colorSecondary": "MuiIconButton-colorSecondary",
                                        "disabled": "Mui-disabled",
                                        "edgeEnd": "MuiIconButton-edgeEnd",
                                        "edgeStart": "MuiIconButton-edgeStart",
                                        "label": "MuiIconButton-label",
                                        "root": "MuiIconButton-root",
                                        "sizeSmall": "MuiIconButton-sizeSmall",
                                      }
                                    }
                                    color="inherit"
                                    onClick={[Function]}
                                  >
                                    <WithStyles(ForwardRef(ButtonBase))
                                      aria-label="edit"
                                      centerRipple={true}
                                      className="MuiIconButton-root ToDoListItem__button ToDoListItem__button_edit ToDoListItem__button_marginRight MuiIconButton-colorInherit"
                                      disabled={false}
                                      focusRipple={true}
                                      onClick={[Function]}
                                    >
                                      <ForwardRef(ButtonBase)
                                        aria-label="edit"
                                        centerRipple={true}
                                        className="MuiIconButton-root ToDoListItem__button ToDoListItem__button_edit ToDoListItem__button_marginRight MuiIconButton-colorInherit"
                                        classes={
                                          Object {
                                            "disabled": "Mui-disabled",
                                            "focusVisible": "Mui-focusVisible",
                                            "root": "MuiButtonBase-root",
                                          }
                                        }
                                        disabled={false}
                                        focusRipple={true}
                                        onClick={[Function]}
                                      >
                                        <button
                                          aria-label="edit"
                                          className="MuiButtonBase-root MuiIconButton-root ToDoListItem__button ToDoListItem__button_edit ToDoListItem__button_marginRight MuiIconButton-colorInherit"
                                          disabled={false}
                                          onBlur={[Function]}
                                          onClick={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex={0}
                                          type="button"
                                        >
                                          <span
                                            className="MuiIconButton-label"
                                          >
                                            <ForwardRef(EditIcon)
                                              fontSize="medium"
                                            >
                                              <WithStyles(ForwardRef(SvgIcon))
                                                fontSize="medium"
                                              >
                                                <ForwardRef(SvgIcon)
                                                  classes={
                                                    Object {
                                                      "colorAction": "MuiSvgIcon-colorAction",
                                                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                      "colorError": "MuiSvgIcon-colorError",
                                                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                      "root": "MuiSvgIcon-root",
                                                    }
                                                  }
                                                  fontSize="medium"
                                                >
                                                  <svg
                                                    aria-hidden={true}
                                                    className="MuiSvgIcon-root"
                                                    focusable="false"
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <path
                                                      d="M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 00-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z"
                                                    />
                                                  </svg>
                                                </ForwardRef(SvgIcon)>
                                              </WithStyles(ForwardRef(SvgIcon))>
                                            </ForwardRef(EditIcon)>
                                          </span>
                                          <WithStyles(memo)
                                            center={true}
                                          >
                                            <ForwardRef(TouchRipple)
                                              center={true}
                                              classes={
                                                Object {
                                                  "child": "MuiTouchRipple-child",
                                                  "childLeaving": "MuiTouchRipple-childLeaving",
                                                  "childPulsate": "MuiTouchRipple-childPulsate",
                                                  "ripple": "MuiTouchRipple-ripple",
                                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                  "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                  "root": "MuiTouchRipple-root",
                                                }
                                              }
                                            >
                                              <span
                                                className="MuiTouchRipple-root"
                                              >
                                                <TransitionGroup
                                                  childFactory={[Function]}
                                                  component={null}
                                                  exit={true}
                                                />
                                              </span>
                                            </ForwardRef(TouchRipple)>
                                          </WithStyles(memo)>
                                        </button>
                                      </ForwardRef(ButtonBase)>
                                    </WithStyles(ForwardRef(ButtonBase))>
                                  </ForwardRef(IconButton)>
                                </WithStyles(ForwardRef(IconButton))>
                                <WithStyles(ForwardRef(IconButton))
                                  aria-label="delete"
                                  className="ToDoListItem__button ToDoListItem__button_delete"
                                  color="inherit"
                                  onClick={[Function]}
                                >
                                  <ForwardRef(IconButton)
                                    aria-label="delete"
                                    className="ToDoListItem__button ToDoListItem__button_delete"
                                    classes={
                                      Object {
                                        "colorInherit": "MuiIconButton-colorInherit",
                                        "colorPrimary": "MuiIconButton-colorPrimary",
                                        "colorSecondary": "MuiIconButton-colorSecondary",
                                        "disabled": "Mui-disabled",
                                        "edgeEnd": "MuiIconButton-edgeEnd",
                                        "edgeStart": "MuiIconButton-edgeStart",
                                        "label": "MuiIconButton-label",
                                        "root": "MuiIconButton-root",
                                        "sizeSmall": "MuiIconButton-sizeSmall",
                                      }
                                    }
                                    color="inherit"
                                    onClick={[Function]}
                                  >
                                    <WithStyles(ForwardRef(ButtonBase))
                                      aria-label="delete"
                                      centerRipple={true}
                                      className="MuiIconButton-root ToDoListItem__button ToDoListItem__button_delete MuiIconButton-colorInherit"
                                      disabled={false}
                                      focusRipple={true}
                                      onClick={[Function]}
                                    >
                                      <ForwardRef(ButtonBase)
                                        aria-label="delete"
                                        centerRipple={true}
                                        className="MuiIconButton-root ToDoListItem__button ToDoListItem__button_delete MuiIconButton-colorInherit"
                                        classes={
                                          Object {
                                            "disabled": "Mui-disabled",
                                            "focusVisible": "Mui-focusVisible",
                                            "root": "MuiButtonBase-root",
                                          }
                                        }
                                        disabled={false}
                                        focusRipple={true}
                                        onClick={[Function]}
                                      >
                                        <button
                                          aria-label="delete"
                                          className="MuiButtonBase-root MuiIconButton-root ToDoListItem__button ToDoListItem__button_delete MuiIconButton-colorInherit"
                                          disabled={false}
                                          onBlur={[Function]}
                                          onClick={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex={0}
                                          type="button"
                                        >
                                          <span
                                            className="MuiIconButton-label"
                                          >
                                            <ForwardRef(DeleteOutlinedIcon)
                                              fontSize="medium"
                                            >
                                              <WithStyles(ForwardRef(SvgIcon))
                                                fontSize="medium"
                                              >
                                                <ForwardRef(SvgIcon)
                                                  classes={
                                                    Object {
                                                      "colorAction": "MuiSvgIcon-colorAction",
                                                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                      "colorError": "MuiSvgIcon-colorError",
                                                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                      "root": "MuiSvgIcon-root",
                                                    }
                                                  }
                                                  fontSize="medium"
                                                >
                                                  <svg
                                                    aria-hidden={true}
                                                    className="MuiSvgIcon-root"
                                                    focusable="false"
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <path
                                                      d="M16 9v10H8V9h8m-1.5-6h-5l-1 1H5v2h14V4h-3.5l-1-1zM18 7H6v12c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7z"
                                                    />
                                                  </svg>
                                                </ForwardRef(SvgIcon)>
                                              </WithStyles(ForwardRef(SvgIcon))>
                                            </ForwardRef(DeleteOutlinedIcon)>
                                          </span>
                                          <WithStyles(memo)
                                            center={true}
                                          >
                                            <ForwardRef(TouchRipple)
                                              center={true}
                                              classes={
                                                Object {
                                                  "child": "MuiTouchRipple-child",
                                                  "childLeaving": "MuiTouchRipple-childLeaving",
                                                  "childPulsate": "MuiTouchRipple-childPulsate",
                                                  "ripple": "MuiTouchRipple-ripple",
                                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                  "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                  "root": "MuiTouchRipple-root",
                                                }
                                              }
                                            >
                                              <span
                                                className="MuiTouchRipple-root"
                                              >
                                                <TransitionGroup
                                                  childFactory={[Function]}
                                                  component={null}
                                                  exit={true}
                                                />
                                              </span>
                                            </ForwardRef(TouchRipple)>
                                          </WithStyles(memo)>
                                        </button>
                                      </ForwardRef(ButtonBase)>
                                    </WithStyles(ForwardRef(ButtonBase))>
                                  </ForwardRef(IconButton)>
                                </WithStyles(ForwardRef(IconButton))>
                              </div>
                            </div>
                          </div>
                          <WithStyles(ForwardRef(IconButton))
                            aria-hidden={true}
                            className="MuiAccordionSummary-expandIcon"
                            component="div"
                            edge="end"
                            role={null}
                            tabIndex={null}
                          >
                            <ForwardRef(IconButton)
                              aria-hidden={true}
                              className="MuiAccordionSummary-expandIcon"
                              classes={
                                Object {
                                  "colorInherit": "MuiIconButton-colorInherit",
                                  "colorPrimary": "MuiIconButton-colorPrimary",
                                  "colorSecondary": "MuiIconButton-colorSecondary",
                                  "disabled": "Mui-disabled",
                                  "edgeEnd": "MuiIconButton-edgeEnd",
                                  "edgeStart": "MuiIconButton-edgeStart",
                                  "label": "MuiIconButton-label",
                                  "root": "MuiIconButton-root",
                                  "sizeSmall": "MuiIconButton-sizeSmall",
                                }
                              }
                              component="div"
                              edge="end"
                              role={null}
                              tabIndex={null}
                            >
                              <WithStyles(ForwardRef(ButtonBase))
                                aria-hidden={true}
                                centerRipple={true}
                                className="MuiIconButton-root MuiAccordionSummary-expandIcon MuiIconButton-edgeEnd"
                                component="div"
                                disabled={false}
                                focusRipple={true}
                                role={null}
                                tabIndex={null}
                              >
                                <ForwardRef(ButtonBase)
                                  aria-hidden={true}
                                  centerRipple={true}
                                  className="MuiIconButton-root MuiAccordionSummary-expandIcon MuiIconButton-edgeEnd"
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "focusVisible": "Mui-focusVisible",
                                      "root": "MuiButtonBase-root",
                                    }
                                  }
                                  component="div"
                                  disabled={false}
                                  focusRipple={true}
                                  role={null}
                                  tabIndex={null}
                                >
                                  <div
                                    aria-disabled={false}
                                    aria-hidden={true}
                                    className="MuiButtonBase-root MuiIconButton-root MuiAccordionSummary-expandIcon MuiIconButton-edgeEnd"
                                    onBlur={[Function]}
                                    onDragLeave={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    role={null}
                                    tabIndex={null}
                                  >
                                    <span
                                      className="MuiIconButton-label"
                                    >
                                      <ForwardRef(ExpandMoreIcon)
                                        className="ToDoListItem__Accordion_expandIcon"
                                      >
                                        <WithStyles(ForwardRef(SvgIcon))
                                          className="ToDoListItem__Accordion_expandIcon"
                                        >
                                          <ForwardRef(SvgIcon)
                                            className="ToDoListItem__Accordion_expandIcon"
                                            classes={
                                              Object {
                                                "colorAction": "MuiSvgIcon-colorAction",
                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                "colorError": "MuiSvgIcon-colorError",
                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                "root": "MuiSvgIcon-root",
                                              }
                                            }
                                          >
                                            <svg
                                              aria-hidden={true}
                                              className="MuiSvgIcon-root ToDoListItem__Accordion_expandIcon"
                                              focusable="false"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
                                              />
                                            </svg>
                                          </ForwardRef(SvgIcon)>
                                        </WithStyles(ForwardRef(SvgIcon))>
                                      </ForwardRef(ExpandMoreIcon)>
                                    </span>
                                    <WithStyles(memo)
                                      center={true}
                                    >
                                      <ForwardRef(TouchRipple)
                                        center={true}
                                        classes={
                                          Object {
                                            "child": "MuiTouchRipple-child",
                                            "childLeaving": "MuiTouchRipple-childLeaving",
                                            "childPulsate": "MuiTouchRipple-childPulsate",
                                            "ripple": "MuiTouchRipple-ripple",
                                            "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                            "rippleVisible": "MuiTouchRipple-rippleVisible",
                                            "root": "MuiTouchRipple-root",
                                          }
                                        }
                                      >
                                        <span
                                          className="MuiTouchRipple-root"
                                        >
                                          <TransitionGroup
                                            childFactory={[Function]}
                                            component={null}
                                            exit={true}
                                          />
                                        </span>
                                      </ForwardRef(TouchRipple)>
                                    </WithStyles(memo)>
                                  </div>
                                </ForwardRef(ButtonBase)>
                              </WithStyles(ForwardRef(ButtonBase))>
                            </ForwardRef(IconButton)>
                          </WithStyles(ForwardRef(IconButton))>
                        </div>
                      </ForwardRef(ButtonBase)>
                    </WithStyles(ForwardRef(ButtonBase))>
                  </ForwardRef(AccordionSummary)>
                </WithStyles(ForwardRef(AccordionSummary))>
                <WithStyles(ForwardRef(Collapse))
                  in={false}
                  timeout="auto"
                  unmountOnExit={true}
                >
                  <ForwardRef(Collapse)
                    classes={
                      Object {
                        "entered": "MuiCollapse-entered",
                        "hidden": "MuiCollapse-hidden",
                        "root": "MuiCollapse-root",
                        "wrapper": "MuiCollapse-wrapper",
                        "wrapperInner": "MuiCollapse-wrapperInner",
                      }
                    }
                    in={false}
                    timeout="auto"
                    unmountOnExit={true}
                  >
                    <Transition
                      addEndListener={[Function]}
                      appear={false}
                      enter={true}
                      exit={true}
                      in={false}
                      mountOnEnter={false}
                      onEnter={[Function]}
                      onEntered={[Function]}
                      onEntering={[Function]}
                      onExit={[Function]}
                      onExited={[Function]}
                      onExiting={[Function]}
                      timeout={null}
                      unmountOnExit={true}
                    />
                  </ForwardRef(Collapse)>
                </WithStyles(ForwardRef(Collapse))>
              </div>
            </ForwardRef(Paper)>
          </WithStyles(ForwardRef(Paper))>
        </ForwardRef(Accordion)>
      </WithStyles(ForwardRef(Accordion))>
    </Memo(ToDoListItem)>
  </Connect(Component)>
</Provider>
`;

exports[`Checking the deletion of a Task 2`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(Component)
    item={
      Object {
        "date": null,
        "done": false,
        "id": 13371488,
        "important": false,
        "label": "Задача1",
        "subtask": null,
        "time": null,
      }
    }
    key="13371488"
  >
    <Memo(ToDoListItem)
      deleteTaskAC={[Function]}
      item={
        Object {
          "date": null,
          "done": false,
          "id": 13371488,
          "important": false,
          "label": "Задача1",
          "subtask": null,
          "time": null,
        }
      }
      togglePropertyTaskAC={[Function]}
      updateDateOrTimeTaskAC={[Function]}
    >
      <div
        className="todolist__close-wrapper null"
        onClick={[Function]}
      />
      <WithStyles(ForwardRef(Accordion))
        TransitionProps={
          Object {
            "unmountOnExit": true,
          }
        }
        className="ToDoListItem__Accordion null null"
      >
        <ForwardRef(Accordion)
          TransitionProps={
            Object {
              "unmountOnExit": true,
            }
          }
          className="ToDoListItem__Accordion null null"
          classes={
            Object {
              "disabled": "Mui-disabled",
              "expanded": "Mui-expanded",
              "root": "MuiAccordion-root",
              "rounded": "MuiAccordion-rounded",
            }
          }
        >
          <WithStyles(ForwardRef(Paper))
            className="MuiAccordion-root ToDoListItem__Accordion null null MuiAccordion-rounded"
            square={false}
          >
            <ForwardRef(Paper)
              className="MuiAccordion-root ToDoListItem__Accordion null null MuiAccordion-rounded"
              classes={
                Object {
                  "elevation0": "MuiPaper-elevation0",
                  "elevation1": "MuiPaper-elevation1",
                  "elevation10": "MuiPaper-elevation10",
                  "elevation11": "MuiPaper-elevation11",
                  "elevation12": "MuiPaper-elevation12",
                  "elevation13": "MuiPaper-elevation13",
                  "elevation14": "MuiPaper-elevation14",
                  "elevation15": "MuiPaper-elevation15",
                  "elevation16": "MuiPaper-elevation16",
                  "elevation17": "MuiPaper-elevation17",
                  "elevation18": "MuiPaper-elevation18",
                  "elevation19": "MuiPaper-elevation19",
                  "elevation2": "MuiPaper-elevation2",
                  "elevation20": "MuiPaper-elevation20",
                  "elevation21": "MuiPaper-elevation21",
                  "elevation22": "MuiPaper-elevation22",
                  "elevation23": "MuiPaper-elevation23",
                  "elevation24": "MuiPaper-elevation24",
                  "elevation3": "MuiPaper-elevation3",
                  "elevation4": "MuiPaper-elevation4",
                  "elevation5": "MuiPaper-elevation5",
                  "elevation6": "MuiPaper-elevation6",
                  "elevation7": "MuiPaper-elevation7",
                  "elevation8": "MuiPaper-elevation8",
                  "elevation9": "MuiPaper-elevation9",
                  "outlined": "MuiPaper-outlined",
                  "root": "MuiPaper-root",
                  "rounded": "MuiPaper-rounded",
                }
              }
              square={false}
            >
              <div
                className="MuiPaper-root MuiAccordion-root ToDoListItem__Accordion null null MuiAccordion-rounded MuiPaper-elevation1 MuiPaper-rounded"
              >
                <WithStyles(ForwardRef(AccordionSummary))
                  aria-controls="panel1a-content"
                  className="ToDoListItem__Accordion_grid"
                  expandIcon={
                    <Memo
                      className="ToDoListItem__Accordion_expandIcon"
                    />
                  }
                  id="panel1a-header"
                  key=".0"
                >
                  <ForwardRef(AccordionSummary)
                    aria-controls="panel1a-content"
                    className="ToDoListItem__Accordion_grid"
                    classes={
                      Object {
                        "content": "MuiAccordionSummary-content",
                        "disabled": "Mui-disabled",
                        "expandIcon": "MuiAccordionSummary-expandIcon",
                        "expanded": "Mui-expanded",
                        "focusVisible": "Mui-focusVisible",
                        "focused": "Mui-focused",
                        "root": "MuiAccordionSummary-root",
                      }
                    }
                    expandIcon={
                      <Memo
                        className="ToDoListItem__Accordion_expandIcon"
                      />
                    }
                    id="panel1a-header"
                  >
                    <WithStyles(ForwardRef(ButtonBase))
                      aria-controls="panel1a-content"
                      aria-expanded={false}
                      className="MuiAccordionSummary-root ToDoListItem__Accordion_grid"
                      component="div"
                      disableRipple={true}
                      disabled={false}
                      focusRipple={false}
                      focusVisibleClassName="Mui-focusVisible Mui-focused"
                      id="panel1a-header"
                      onClick={[Function]}
                    >
                      <ForwardRef(ButtonBase)
                        aria-controls="panel1a-content"
                        aria-expanded={false}
                        className="MuiAccordionSummary-root ToDoListItem__Accordion_grid"
                        classes={
                          Object {
                            "disabled": "Mui-disabled",
                            "focusVisible": "Mui-focusVisible",
                            "root": "MuiButtonBase-root",
                          }
                        }
                        component="div"
                        disableRipple={true}
                        disabled={false}
                        focusRipple={false}
                        focusVisibleClassName="Mui-focusVisible Mui-focused"
                        id="panel1a-header"
                        onClick={[Function]}
                      >
                        <div
                          aria-controls="panel1a-content"
                          aria-disabled={false}
                          aria-expanded={false}
                          className="MuiButtonBase-root MuiAccordionSummary-root ToDoListItem__Accordion_grid"
                          id="panel1a-header"
                          onBlur={[Function]}
                          onClick={[Function]}
                          onDragLeave={[Function]}
                          onFocus={[Function]}
                          onKeyDown={[Function]}
                          onKeyUp={[Function]}
                          onMouseDown={[Function]}
                          onMouseLeave={[Function]}
                          onMouseUp={[Function]}
                          onTouchEnd={[Function]}
                          onTouchMove={[Function]}
                          onTouchStart={[Function]}
                          role="button"
                          tabIndex={0}
                        >
                          <div
                            className="MuiAccordionSummary-content"
                          >
                            <div
                              className="ToDoListItem null null"
                            >
                              <div
                                className="ToDoListItem__leftBlock"
                              >
                                <WithStyles(ForwardRef(IconButton))
                                  aria-label="delete"
                                  className="ToDoListItem__button ToDoListItem__buttonDone"
                                  color="inherit"
                                  onClick={[Function]}
                                >
                                  <ForwardRef(IconButton)
                                    aria-label="delete"
                                    className="ToDoListItem__button ToDoListItem__buttonDone"
                                    classes={
                                      Object {
                                        "colorInherit": "MuiIconButton-colorInherit",
                                        "colorPrimary": "MuiIconButton-colorPrimary",
                                        "colorSecondary": "MuiIconButton-colorSecondary",
                                        "disabled": "Mui-disabled",
                                        "edgeEnd": "MuiIconButton-edgeEnd",
                                        "edgeStart": "MuiIconButton-edgeStart",
                                        "label": "MuiIconButton-label",
                                        "root": "MuiIconButton-root",
                                        "sizeSmall": "MuiIconButton-sizeSmall",
                                      }
                                    }
                                    color="inherit"
                                    onClick={[Function]}
                                  >
                                    <WithStyles(ForwardRef(ButtonBase))
                                      aria-label="delete"
                                      centerRipple={true}
                                      className="MuiIconButton-root ToDoListItem__button ToDoListItem__buttonDone MuiIconButton-colorInherit"
                                      disabled={false}
                                      focusRipple={true}
                                      onClick={[Function]}
                                    >
                                      <ForwardRef(ButtonBase)
                                        aria-label="delete"
                                        centerRipple={true}
                                        className="MuiIconButton-root ToDoListItem__button ToDoListItem__buttonDone MuiIconButton-colorInherit"
                                        classes={
                                          Object {
                                            "disabled": "Mui-disabled",
                                            "focusVisible": "Mui-focusVisible",
                                            "root": "MuiButtonBase-root",
                                          }
                                        }
                                        disabled={false}
                                        focusRipple={true}
                                        onClick={[Function]}
                                      >
                                        <button
                                          aria-label="delete"
                                          className="MuiButtonBase-root MuiIconButton-root ToDoListItem__button ToDoListItem__buttonDone MuiIconButton-colorInherit"
                                          disabled={false}
                                          onBlur={[Function]}
                                          onClick={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex={0}
                                          type="button"
                                        >
                                          <span
                                            className="MuiIconButton-label"
                                          >
                                            <ForwardRef(CheckIcon)
                                              fontSize="small"
                                            >
                                              <WithStyles(ForwardRef(SvgIcon))
                                                fontSize="small"
                                              >
                                                <ForwardRef(SvgIcon)
                                                  classes={
                                                    Object {
                                                      "colorAction": "MuiSvgIcon-colorAction",
                                                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                      "colorError": "MuiSvgIcon-colorError",
                                                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                      "root": "MuiSvgIcon-root",
                                                    }
                                                  }
                                                  fontSize="small"
                                                >
                                                  <svg
                                                    aria-hidden={true}
                                                    className="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                                    focusable="false"
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <path
                                                      d="M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z"
                                                    />
                                                  </svg>
                                                </ForwardRef(SvgIcon)>
                                              </WithStyles(ForwardRef(SvgIcon))>
                                            </ForwardRef(CheckIcon)>
                                          </span>
                                          <WithStyles(memo)
                                            center={true}
                                          >
                                            <ForwardRef(TouchRipple)
                                              center={true}
                                              classes={
                                                Object {
                                                  "child": "MuiTouchRipple-child",
                                                  "childLeaving": "MuiTouchRipple-childLeaving",
                                                  "childPulsate": "MuiTouchRipple-childPulsate",
                                                  "ripple": "MuiTouchRipple-ripple",
                                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                  "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                  "root": "MuiTouchRipple-root",
                                                }
                                              }
                                            >
                                              <span
                                                className="MuiTouchRipple-root"
                                              >
                                                <TransitionGroup
                                                  childFactory={[Function]}
                                                  component={null}
                                                  exit={true}
                                                />
                                              </span>
                                            </ForwardRef(TouchRipple)>
                                          </WithStyles(memo)>
                                        </button>
                                      </ForwardRef(ButtonBase)>
                                    </WithStyles(ForwardRef(ButtonBase))>
                                  </ForwardRef(IconButton)>
                                </WithStyles(ForwardRef(IconButton))>
                                Задача1
                              </div>
                              <WithStyles(ForwardRef(IconButton))
                                aria-controls="simple-menu"
                                aria-haspopup="true"
                                className="list__buttonMenu ToDoListItem__button_menu"
                                onClick={[Function]}
                              >
                                <ForwardRef(IconButton)
                                  aria-controls="simple-menu"
                                  aria-haspopup="true"
                                  className="list__buttonMenu ToDoListItem__button_menu"
                                  classes={
                                    Object {
                                      "colorInherit": "MuiIconButton-colorInherit",
                                      "colorPrimary": "MuiIconButton-colorPrimary",
                                      "colorSecondary": "MuiIconButton-colorSecondary",
                                      "disabled": "Mui-disabled",
                                      "edgeEnd": "MuiIconButton-edgeEnd",
                                      "edgeStart": "MuiIconButton-edgeStart",
                                      "label": "MuiIconButton-label",
                                      "root": "MuiIconButton-root",
                                      "sizeSmall": "MuiIconButton-sizeSmall",
                                    }
                                  }
                                  onClick={[Function]}
                                >
                                  <WithStyles(ForwardRef(ButtonBase))
                                    aria-controls="simple-menu"
                                    aria-haspopup="true"
                                    centerRipple={true}
                                    className="MuiIconButton-root list__buttonMenu ToDoListItem__button_menu"
                                    disabled={false}
                                    focusRipple={true}
                                    onClick={[Function]}
                                  >
                                    <ForwardRef(ButtonBase)
                                      aria-controls="simple-menu"
                                      aria-haspopup="true"
                                      centerRipple={true}
                                      className="MuiIconButton-root list__buttonMenu ToDoListItem__button_menu"
                                      classes={
                                        Object {
                                          "disabled": "Mui-disabled",
                                          "focusVisible": "Mui-focusVisible",
                                          "root": "MuiButtonBase-root",
                                        }
                                      }
                                      disabled={false}
                                      focusRipple={true}
                                      onClick={[Function]}
                                    >
                                      <button
                                        aria-controls="simple-menu"
                                        aria-haspopup="true"
                                        className="MuiButtonBase-root MuiIconButton-root list__buttonMenu ToDoListItem__button_menu"
                                        disabled={false}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onDragLeave={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                        onMouseDown={[Function]}
                                        onMouseLeave={[Function]}
                                        onMouseUp={[Function]}
                                        onTouchEnd={[Function]}
                                        onTouchMove={[Function]}
                                        onTouchStart={[Function]}
                                        tabIndex={0}
                                        type="button"
                                      >
                                        <span
                                          className="MuiIconButton-label"
                                        >
                                          <ForwardRef(MoreVertIcon)>
                                            <WithStyles(ForwardRef(SvgIcon))>
                                              <ForwardRef(SvgIcon)
                                                classes={
                                                  Object {
                                                    "colorAction": "MuiSvgIcon-colorAction",
                                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                    "colorError": "MuiSvgIcon-colorError",
                                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                    "root": "MuiSvgIcon-root",
                                                  }
                                                }
                                              >
                                                <svg
                                                  aria-hidden={true}
                                                  className="MuiSvgIcon-root"
                                                  focusable="false"
                                                  viewBox="0 0 24 24"
                                                >
                                                  <path
                                                    d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                                  />
                                                </svg>
                                              </ForwardRef(SvgIcon)>
                                            </WithStyles(ForwardRef(SvgIcon))>
                                          </ForwardRef(MoreVertIcon)>
                                        </span>
                                        <WithStyles(memo)
                                          center={true}
                                        >
                                          <ForwardRef(TouchRipple)
                                            center={true}
                                            classes={
                                              Object {
                                                "child": "MuiTouchRipple-child",
                                                "childLeaving": "MuiTouchRipple-childLeaving",
                                                "childPulsate": "MuiTouchRipple-childPulsate",
                                                "ripple": "MuiTouchRipple-ripple",
                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                "root": "MuiTouchRipple-root",
                                              }
                                            }
                                          >
                                            <span
                                              className="MuiTouchRipple-root"
                                            >
                                              <TransitionGroup
                                                childFactory={[Function]}
                                                component={null}
                                                exit={true}
                                              />
                                            </span>
                                          </ForwardRef(TouchRipple)>
                                        </WithStyles(memo)>
                                      </button>
                                    </ForwardRef(ButtonBase)>
                                  </WithStyles(ForwardRef(ButtonBase))>
                                </ForwardRef(IconButton)>
                              </WithStyles(ForwardRef(IconButton))>
                              <div
                                className="ToDoListItem__buttons null"
                              >
                                <Memo(DatePicker)
                                  date={null}
                                  eventSaveDateOrTime={[Function]}
                                  time={null}
                                >
                                  <div
                                    className="DatePicker"
                                    onClick={[Function]}
                                  >
                                    <MuiPickersUtilsProvider
                                      locale={
                                        Object {
                                          "code": "ru",
                                          "formatDistance": [Function],
                                          "formatLong": Object {
                                            "date": [Function],
                                            "dateTime": [Function],
                                            "time": [Function],
                                          },
                                          "formatRelative": [Function],
                                          "localize": Object {
                                            "day": [Function],
                                            "dayPeriod": [Function],
                                            "era": [Function],
                                            "month": [Function],
                                            "ordinalNumber": [Function],
                                            "quarter": [Function],
                                          },
                                          "match": Object {
                                            "day": [Function],
                                            "dayPeriod": [Function],
                                            "era": [Function],
                                            "month": [Function],
                                            "ordinalNumber": [Function],
                                            "quarter": [Function],
                                          },
                                          "options": Object {
                                            "firstWeekContainsDate": 1,
                                            "weekStartsOn": 1,
                                          },
                                        }
                                      }
                                      onClick={[Function]}
                                      utils={[Function]}
                                    >
                                      <PickerWithState
                                        DialogProps={
                                          Object {
                                            "className": "DatePicker__pickers",
                                          }
                                        }
                                        KeyboardButtonProps={
                                          Object {
                                            "aria-label": "change date",
                                          }
                                        }
                                        allowKeyboardControl={true}
                                        autoComplete="off"
                                        cancelLabel="отмена"
                                        className="DatePicker__item"
                                        format="MM/dd/yyyy"
                                        invalidDateMessage="Invalid Date Format"
                                        label="Дата"
                                        margin="normal"
                                        maxDate={2100-01-01T00:00:00.000Z}
                                        maxDateMessage="Date should not be after maximal date"
                                        minDate={1900-01-01T00:00:00.000Z}
                                        minDateMessage="Date should not be before minimal date"
                                        onChange={[Function]}
                                        onClick={[Function]}
                                        openTo="date"
                                        value={null}
                                        views={
                                          Array [
                                            "year",
                                            "date",
                                          ]
                                        }
                                      >
                                        <Wrapper
                                          DateInputProps={
                                            Object {
                                              "format": "MM/dd/yyyy",
                                              "inputValue": "",
                                              "onChange": [Function],
                                              "openPicker": [Function],
                                              "validationError": "",
                                            }
                                          }
                                          DialogProps={
                                            Object {
                                              "className": "DatePicker__pickers",
                                            }
                                          }
                                          InputComponent={[Function]}
                                          KeyboardButtonProps={
                                            Object {
                                              "aria-label": "change date",
                                            }
                                          }
                                          autoComplete="off"
                                          cancelLabel="отмена"
                                          className="DatePicker__item"
                                          format="MM/dd/yyyy"
                                          label="Дата"
                                          margin="normal"
                                          onAccept={[Function]}
                                          onClear={[Function]}
                                          onClick={[Function]}
                                          onDismiss={[Function]}
                                          onSetToday={[Function]}
                                          open={false}
                                        >
                                          <ModalWrapper
                                            DateInputProps={
                                              Object {
                                                "format": "MM/dd/yyyy",
                                                "inputValue": "",
                                                "onChange": [Function],
                                                "openPicker": [Function],
                                                "validationError": "",
                                              }
                                            }
                                            DialogProps={
                                              Object {
                                                "className": "DatePicker__pickers",
                                              }
                                            }
                                            InputComponent={[Function]}
                                            KeyboardButtonProps={
                                              Object {
                                                "aria-label": "change date",
                                              }
                                            }
                                            autoComplete="off"
                                            cancelLabel="отмена"
                                            className="DatePicker__item"
                                            clearLabel="Clear"
                                            clearable={false}
                                            format="MM/dd/yyyy"
                                            label="Дата"
                                            margin="normal"
                                            okLabel="OK"
                                            onAccept={[Function]}
                                            onClear={[Function]}
                                            onClick={[Function]}
                                            onDismiss={[Function]}
                                            onSetToday={[Function]}
                                            open={false}
                                            showTodayButton={false}
                                            todayLabel="Today"
                                          >
                                            <KeyboardDateInput
                                              KeyboardButtonProps={
                                                Object {
                                                  "aria-label": "change date",
                                                }
                                              }
                                              autoComplete="off"
                                              className="DatePicker__item"
                                              format="MM/dd/yyyy"
                                              inputValue=""
                                              keyboardIcon={<KeyboardIcon />}
                                              label="Дата"
                                              margin="normal"
                                              onChange={[Function]}
                                              onClick={[Function]}
                                              openPicker={[Function]}
                                              validationError=""
                                            >
                                              <Rifm
                                                format={[Function]}
                                                key="__/__/____"
                                                onChange={[Function]}
                                                refuse={/\\[\\^\\\\d\\]\\+/gi}
                                                value=""
                                              >
                                                <WithStyles(ForwardRef(TextField))
                                                  InputProps={
                                                    Object {
                                                      "endAdornment": <WithStyles(ForwardRef(InputAdornment))
                                                        position="end"
                                                      >
                                                        <WithStyles(ForwardRef(IconButton))
                                                          aria-label="change date"
                                                          onClick={[Function]}
                                                        >
                                                          <KeyboardIcon />
                                                        </WithStyles(ForwardRef(IconButton))>
                                                      </WithStyles(ForwardRef(InputAdornment))>,
                                                    }
                                                  }
                                                  autoComplete="off"
                                                  className="DatePicker__item"
                                                  error={false}
                                                  helperText=""
                                                  label="Дата"
                                                  margin="normal"
                                                  onChange={[Function]}
                                                  onClick={[Function]}
                                                  value=""
                                                >
                                                  <ForwardRef(TextField)
                                                    InputProps={
                                                      Object {
                                                        "endAdornment": <WithStyles(ForwardRef(InputAdornment))
                                                          position="end"
                                                        >
                                                          <WithStyles(ForwardRef(IconButton))
                                                            aria-label="change date"
                                                            onClick={[Function]}
                                                          >
                                                            <KeyboardIcon />
                                                          </WithStyles(ForwardRef(IconButton))>
                                                        </WithStyles(ForwardRef(InputAdornment))>,
                                                      }
                                                    }
                                                    autoComplete="off"
                                                    className="DatePicker__item"
                                                    classes={
                                                      Object {
                                                        "root": "MuiTextField-root",
                                                      }
                                                    }
                                                    error={false}
                                                    helperText=""
                                                    label="Дата"
                                                    margin="normal"
                                                    onChange={[Function]}
                                                    onClick={[Function]}
                                                    value=""
                                                  >
                                                    <WithStyles(ForwardRef(FormControl))
                                                      className="MuiTextField-root DatePicker__item"
                                                      color="primary"
                                                      disabled={false}
                                                      error={false}
                                                      fullWidth={false}
                                                      margin="normal"
                                                      onClick={[Function]}
                                                      required={false}
                                                      variant="standard"
                                                    >
                                                      <ForwardRef(FormControl)
                                                        className="MuiTextField-root DatePicker__item"
                                                        classes={
                                                          Object {
                                                            "fullWidth": "MuiFormControl-fullWidth",
                                                            "marginDense": "MuiFormControl-marginDense",
                                                            "marginNormal": "MuiFormControl-marginNormal",
                                                            "root": "MuiFormControl-root",
                                                          }
                                                        }
                                                        color="primary"
                                                        disabled={false}
                                                        error={false}
                                                        fullWidth={false}
                                                        margin="normal"
                                                        onClick={[Function]}
                                                        required={false}
                                                        variant="standard"
                                                      >
                                                        <div
                                                          className="MuiFormControl-root MuiTextField-root DatePicker__item MuiFormControl-marginNormal"
                                                          onClick={[Function]}
                                                        >
                                                          <WithStyles(ForwardRef(InputLabel))>
                                                            <ForwardRef(InputLabel)
                                                              classes={
                                                                Object {
                                                                  "animated": "MuiInputLabel-animated",
                                                                  "asterisk": "MuiInputLabel-asterisk",
                                                                  "disabled": "Mui-disabled",
                                                                  "error": "Mui-error",
                                                                  "filled": "MuiInputLabel-filled",
                                                                  "focused": "Mui-focused",
                                                                  "formControl": "MuiInputLabel-formControl",
                                                                  "marginDense": "MuiInputLabel-marginDense",
                                                                  "outlined": "MuiInputLabel-outlined",
                                                                  "required": "Mui-required",
                                                                  "root": "MuiInputLabel-root",
                                                                  "shrink": "MuiInputLabel-shrink",
                                                                }
                                                              }
                                                            >
                                                              <WithStyles(ForwardRef(FormLabel))
                                                                className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                                                                classes={
                                                                  Object {
                                                                    "asterisk": "MuiInputLabel-asterisk",
                                                                    "disabled": "Mui-disabled",
                                                                    "error": "Mui-error",
                                                                    "focused": "Mui-focused",
                                                                    "required": "Mui-required",
                                                                  }
                                                                }
                                                                data-shrink={false}
                                                              >
                                                                <ForwardRef(FormLabel)
                                                                  className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                                                                  classes={
                                                                    Object {
                                                                      "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                                                      "colorSecondary": "MuiFormLabel-colorSecondary",
                                                                      "disabled": "Mui-disabled Mui-disabled",
                                                                      "error": "Mui-error Mui-error",
                                                                      "filled": "MuiFormLabel-filled",
                                                                      "focused": "Mui-focused Mui-focused",
                                                                      "required": "Mui-required Mui-required",
                                                                      "root": "MuiFormLabel-root",
                                                                    }
                                                                  }
                                                                  data-shrink={false}
                                                                >
                                                                  <label
                                                                    className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                                                                    data-shrink={false}
                                                                  >
                                                                    Дата
                                                                  </label>
                                                                </ForwardRef(FormLabel)>
                                                              </WithStyles(ForwardRef(FormLabel))>
                                                            </ForwardRef(InputLabel)>
                                                          </WithStyles(ForwardRef(InputLabel))>
                                                          <WithStyles(ForwardRef(Input))
                                                            autoComplete="off"
                                                            autoFocus={false}
                                                            endAdornment={
                                                              <WithStyles(ForwardRef(InputAdornment))
                                                                position="end"
                                                              >
                                                                <WithStyles(ForwardRef(IconButton))
                                                                  aria-label="change date"
                                                                  onClick={[Function]}
                                                                >
                                                                  <KeyboardIcon />
                                                                </WithStyles(ForwardRef(IconButton))>
                                                              </WithStyles(ForwardRef(InputAdornment))>
                                                            }
                                                            fullWidth={false}
                                                            multiline={false}
                                                            onChange={[Function]}
                                                            value=""
                                                          >
                                                            <ForwardRef(Input)
                                                              autoComplete="off"
                                                              autoFocus={false}
                                                              classes={
                                                                Object {
                                                                  "colorSecondary": "MuiInput-colorSecondary",
                                                                  "disabled": "Mui-disabled",
                                                                  "error": "Mui-error",
                                                                  "focused": "Mui-focused",
                                                                  "formControl": "MuiInput-formControl",
                                                                  "fullWidth": "MuiInput-fullWidth",
                                                                  "input": "MuiInput-input",
                                                                  "inputMarginDense": "MuiInput-inputMarginDense",
                                                                  "inputMultiline": "MuiInput-inputMultiline",
                                                                  "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                                  "marginDense": "MuiInput-marginDense",
                                                                  "multiline": "MuiInput-multiline",
                                                                  "root": "MuiInput-root",
                                                                  "underline": "MuiInput-underline",
                                                                }
                                                              }
                                                              endAdornment={
                                                                <WithStyles(ForwardRef(InputAdornment))
                                                                  position="end"
                                                                >
                                                                  <WithStyles(ForwardRef(IconButton))
                                                                    aria-label="change date"
                                                                    onClick={[Function]}
                                                                  >
                                                                    <KeyboardIcon />
                                                                  </WithStyles(ForwardRef(IconButton))>
                                                                </WithStyles(ForwardRef(InputAdornment))>
                                                              }
                                                              fullWidth={false}
                                                              multiline={false}
                                                              onChange={[Function]}
                                                              value=""
                                                            >
                                                              <WithStyles(ForwardRef(InputBase))
                                                                autoComplete="off"
                                                                autoFocus={false}
                                                                classes={
                                                                  Object {
                                                                    "colorSecondary": "MuiInput-colorSecondary",
                                                                    "disabled": "Mui-disabled",
                                                                    "error": "Mui-error",
                                                                    "focused": "Mui-focused",
                                                                    "formControl": "MuiInput-formControl",
                                                                    "fullWidth": "MuiInput-fullWidth",
                                                                    "input": "MuiInput-input",
                                                                    "inputMarginDense": "MuiInput-inputMarginDense",
                                                                    "inputMultiline": "MuiInput-inputMultiline",
                                                                    "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                                    "marginDense": "MuiInput-marginDense",
                                                                    "multiline": "MuiInput-multiline",
                                                                    "root": "MuiInput-root MuiInput-underline",
                                                                    "underline": null,
                                                                  }
                                                                }
                                                                endAdornment={
                                                                  <WithStyles(ForwardRef(InputAdornment))
                                                                    position="end"
                                                                  >
                                                                    <WithStyles(ForwardRef(IconButton))
                                                                      aria-label="change date"
                                                                      onClick={[Function]}
                                                                    >
                                                                      <KeyboardIcon />
                                                                    </WithStyles(ForwardRef(IconButton))>
                                                                  </WithStyles(ForwardRef(InputAdornment))>
                                                                }
                                                                fullWidth={false}
                                                                inputComponent="input"
                                                                multiline={false}
                                                                onChange={[Function]}
                                                                type="text"
                                                                value=""
                                                              >
                                                                <ForwardRef(InputBase)
                                                                  autoComplete="off"
                                                                  autoFocus={false}
                                                                  classes={
                                                                    Object {
                                                                      "adornedEnd": "MuiInputBase-adornedEnd",
                                                                      "adornedStart": "MuiInputBase-adornedStart",
                                                                      "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                                      "disabled": "Mui-disabled Mui-disabled",
                                                                      "error": "Mui-error Mui-error",
                                                                      "focused": "Mui-focused Mui-focused",
                                                                      "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                                      "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                                      "input": "MuiInputBase-input MuiInput-input",
                                                                      "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                                      "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                                      "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                                      "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                                      "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                                      "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                                      "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                                      "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                                      "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                                    }
                                                                  }
                                                                  endAdornment={
                                                                    <WithStyles(ForwardRef(InputAdornment))
                                                                      position="end"
                                                                    >
                                                                      <WithStyles(ForwardRef(IconButton))
                                                                        aria-label="change date"
                                                                        onClick={[Function]}
                                                                      >
                                                                        <KeyboardIcon />
                                                                      </WithStyles(ForwardRef(IconButton))>
                                                                    </WithStyles(ForwardRef(InputAdornment))>
                                                                  }
                                                                  fullWidth={false}
                                                                  inputComponent="input"
                                                                  multiline={false}
                                                                  onChange={[Function]}
                                                                  type="text"
                                                                  value=""
                                                                >
                                                                  <div
                                                                    className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedEnd"
                                                                    onClick={[Function]}
                                                                  >
                                                                    <input
                                                                      aria-invalid={false}
                                                                      autoComplete="off"
                                                                      autoFocus={false}
                                                                      className="MuiInputBase-input MuiInput-input MuiInputBase-inputAdornedEnd"
                                                                      disabled={false}
                                                                      onAnimationStart={[Function]}
                                                                      onBlur={[Function]}
                                                                      onChange={[Function]}
                                                                      onFocus={[Function]}
                                                                      required={false}
                                                                      type="text"
                                                                      value=""
                                                                    />
                                                                    <WithStyles(ForwardRef(InputAdornment))
                                                                      position="end"
                                                                    >
                                                                      <ForwardRef(InputAdornment)
                                                                        classes={
                                                                          Object {
                                                                            "disablePointerEvents": "MuiInputAdornment-disablePointerEvents",
                                                                            "filled": "MuiInputAdornment-filled",
                                                                            "hiddenLabel": "MuiInputAdornment-hiddenLabel",
                                                                            "marginDense": "MuiInputAdornment-marginDense",
                                                                            "positionEnd": "MuiInputAdornment-positionEnd",
                                                                            "positionStart": "MuiInputAdornment-positionStart",
                                                                            "root": "MuiInputAdornment-root",
                                                                          }
                                                                        }
                                                                        position="end"
                                                                      >
                                                                        <div
                                                                          className="MuiInputAdornment-root MuiInputAdornment-positionEnd"
                                                                        >
                                                                          <WithStyles(ForwardRef(IconButton))
                                                                            aria-label="change date"
                                                                            onClick={[Function]}
                                                                          >
                                                                            <ForwardRef(IconButton)
                                                                              aria-label="change date"
                                                                              classes={
                                                                                Object {
                                                                                  "colorInherit": "MuiIconButton-colorInherit",
                                                                                  "colorPrimary": "MuiIconButton-colorPrimary",
                                                                                  "colorSecondary": "MuiIconButton-colorSecondary",
                                                                                  "disabled": "Mui-disabled",
                                                                                  "edgeEnd": "MuiIconButton-edgeEnd",
                                                                                  "edgeStart": "MuiIconButton-edgeStart",
                                                                                  "label": "MuiIconButton-label",
                                                                                  "root": "MuiIconButton-root",
                                                                                  "sizeSmall": "MuiIconButton-sizeSmall",
                                                                                }
                                                                              }
                                                                              onClick={[Function]}
                                                                            >
                                                                              <WithStyles(ForwardRef(ButtonBase))
                                                                                aria-label="change date"
                                                                                centerRipple={true}
                                                                                className="MuiIconButton-root"
                                                                                disabled={false}
                                                                                focusRipple={true}
                                                                                onClick={[Function]}
                                                                              >
                                                                                <ForwardRef(ButtonBase)
                                                                                  aria-label="change date"
                                                                                  centerRipple={true}
                                                                                  className="MuiIconButton-root"
                                                                                  classes={
                                                                                    Object {
                                                                                      "disabled": "Mui-disabled",
                                                                                      "focusVisible": "Mui-focusVisible",
                                                                                      "root": "MuiButtonBase-root",
                                                                                    }
                                                                                  }
                                                                                  disabled={false}
                                                                                  focusRipple={true}
                                                                                  onClick={[Function]}
                                                                                >
                                                                                  <button
                                                                                    aria-label="change date"
                                                                                    className="MuiButtonBase-root MuiIconButton-root"
                                                                                    disabled={false}
                                                                                    onBlur={[Function]}
                                                                                    onClick={[Function]}
                                                                                    onDragLeave={[Function]}
                                                                                    onFocus={[Function]}
                                                                                    onKeyDown={[Function]}
                                                                                    onKeyUp={[Function]}
                                                                                    onMouseDown={[Function]}
                                                                                    onMouseLeave={[Function]}
                                                                                    onMouseUp={[Function]}
                                                                                    onTouchEnd={[Function]}
                                                                                    onTouchMove={[Function]}
                                                                                    onTouchStart={[Function]}
                                                                                    tabIndex={0}
                                                                                    type="button"
                                                                                  >
                                                                                    <span
                                                                                      className="MuiIconButton-label"
                                                                                    >
                                                                                      <KeyboardIcon>
                                                                                        <WithStyles(ForwardRef(SvgIcon))>
                                                                                          <ForwardRef(SvgIcon)
                                                                                            classes={
                                                                                              Object {
                                                                                                "colorAction": "MuiSvgIcon-colorAction",
                                                                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                                                "colorError": "MuiSvgIcon-colorError",
                                                                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                                                "root": "MuiSvgIcon-root",
                                                                                              }
                                                                                            }
                                                                                          >
                                                                                            <svg
                                                                                              aria-hidden={true}
                                                                                              className="MuiSvgIcon-root"
                                                                                              focusable="false"
                                                                                              viewBox="0 0 24 24"
                                                                                            >
                                                                                              <path
                                                                                                d="M17 12h-5v5h5v-5zM16 1v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2h-1V1h-2zm3 18H5V8h14v11z"
                                                                                              />
                                                                                              <path
                                                                                                d="M0 0h24v24H0z"
                                                                                                fill="none"
                                                                                              />
                                                                                            </svg>
                                                                                          </ForwardRef(SvgIcon)>
                                                                                        </WithStyles(ForwardRef(SvgIcon))>
                                                                                      </KeyboardIcon>
                                                                                    </span>
                                                                                    <WithStyles(memo)
                                                                                      center={true}
                                                                                    >
                                                                                      <ForwardRef(TouchRipple)
                                                                                        center={true}
                                                                                        classes={
                                                                                          Object {
                                                                                            "child": "MuiTouchRipple-child",
                                                                                            "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                            "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                            "ripple": "MuiTouchRipple-ripple",
                                                                                            "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                            "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                            "root": "MuiTouchRipple-root",
                                                                                          }
                                                                                        }
                                                                                      >
                                                                                        <span
                                                                                          className="MuiTouchRipple-root"
                                                                                        >
                                                                                          <TransitionGroup
                                                                                            childFactory={[Function]}
                                                                                            component={null}
                                                                                            exit={true}
                                                                                          />
                                                                                        </span>
                                                                                      </ForwardRef(TouchRipple)>
                                                                                    </WithStyles(memo)>
                                                                                  </button>
                                                                                </ForwardRef(ButtonBase)>
                                                                              </WithStyles(ForwardRef(ButtonBase))>
                                                                            </ForwardRef(IconButton)>
                                                                          </WithStyles(ForwardRef(IconButton))>
                                                                        </div>
                                                                      </ForwardRef(InputAdornment)>
                                                                    </WithStyles(ForwardRef(InputAdornment))>
                                                                  </div>
                                                                </ForwardRef(InputBase)>
                                                              </WithStyles(ForwardRef(InputBase))>
                                                            </ForwardRef(Input)>
                                                          </WithStyles(ForwardRef(Input))>
                                                        </div>
                                                      </ForwardRef(FormControl)>
                                                    </WithStyles(ForwardRef(FormControl))>
                                                  </ForwardRef(TextField)>
                                                </WithStyles(ForwardRef(TextField))>
                                              </Rifm>
                                            </KeyboardDateInput>
                                            <WithStyles(ModalDialog)
                                              cancelLabel="отмена"
                                              className="DatePicker__pickers"
                                              clearLabel="Clear"
                                              clearable={false}
                                              okLabel="OK"
                                              onAccept={[Function]}
                                              onClear={[Function]}
                                              onDismiss={[Function]}
                                              onSetToday={[Function]}
                                              open={false}
                                              showTodayButton={false}
                                              todayLabel="Today"
                                            >
                                              <ModalDialog
                                                cancelLabel="отмена"
                                                className="DatePicker__pickers"
                                                classes={
                                                  Object {
                                                    "dialog": "MuiPickersModal-dialog",
                                                    "dialogRoot": "MuiPickersModal-dialogRoot",
                                                    "dialogRootWider": "MuiPickersModal-dialogRootWider",
                                                    "withAdditionalAction": "MuiPickersModal-withAdditionalAction",
                                                  }
                                                }
                                                clearLabel="Clear"
                                                clearable={false}
                                                okLabel="OK"
                                                onAccept={[Function]}
                                                onClear={[Function]}
                                                onDismiss={[Function]}
                                                onSetToday={[Function]}
                                                open={false}
                                                showTodayButton={false}
                                                todayLabel="Today"
                                              >
                                                <WithStyles(ForwardRef(Dialog))
                                                  className="DatePicker__pickers"
                                                  classes={
                                                    Object {
                                                      "paper": "MuiPickersModal-dialogRoot",
                                                    }
                                                  }
                                                  onClose={[Function]}
                                                  open={false}
                                                  role="dialog"
                                                >
                                                  <ForwardRef(Dialog)
                                                    className="DatePicker__pickers"
                                                    classes={
                                                      Object {
                                                        "container": "MuiDialog-container",
                                                        "paper": "MuiDialog-paper MuiPickersModal-dialogRoot",
                                                        "paperFullScreen": "MuiDialog-paperFullScreen",
                                                        "paperFullWidth": "MuiDialog-paperFullWidth",
                                                        "paperScrollBody": "MuiDialog-paperScrollBody",
                                                        "paperScrollPaper": "MuiDialog-paperScrollPaper",
                                                        "paperWidthFalse": "MuiDialog-paperWidthFalse",
                                                        "paperWidthLg": "MuiDialog-paperWidthLg",
                                                        "paperWidthMd": "MuiDialog-paperWidthMd",
                                                        "paperWidthSm": "MuiDialog-paperWidthSm",
                                                        "paperWidthXl": "MuiDialog-paperWidthXl",
                                                        "paperWidthXs": "MuiDialog-paperWidthXs",
                                                        "root": "MuiDialog-root",
                                                        "scrollBody": "MuiDialog-scrollBody",
                                                        "scrollPaper": "MuiDialog-scrollPaper",
                                                      }
                                                    }
                                                    onClose={[Function]}
                                                    open={false}
                                                    role="dialog"
                                                  >
                                                    <ForwardRef(Modal)
                                                      BackdropComponent={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "Naked": Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "propTypes": Object {
                                                              "children": [Function],
                                                              "className": [Function],
                                                              "classes": [Function],
                                                              "invisible": [Function],
                                                              "open": [Function],
                                                              "transitionDuration": [Function],
                                                            },
                                                            "render": [Function],
                                                          },
                                                          "options": Object {
                                                            "defaultTheme": Object {
                                                              "breakpoints": Object {
                                                                "between": [Function],
                                                                "down": [Function],
                                                                "keys": Array [
                                                                  "xs",
                                                                  "sm",
                                                                  "md",
                                                                  "lg",
                                                                  "xl",
                                                                ],
                                                                "only": [Function],
                                                                "up": [Function],
                                                                "values": Object {
                                                                  "lg": 1280,
                                                                  "md": 960,
                                                                  "sm": 600,
                                                                  "xl": 1920,
                                                                  "xs": 0,
                                                                },
                                                                "width": [Function],
                                                              },
                                                              "direction": "ltr",
                                                              "mixins": Object {
                                                                "gutters": [Function],
                                                                "toolbar": Object {
                                                                  "@media (min-width:0px) and (orientation: landscape)": Object {
                                                                    "minHeight": 48,
                                                                  },
                                                                  "@media (min-width:600px)": Object {
                                                                    "minHeight": 64,
                                                                  },
                                                                  "minHeight": 56,
                                                                },
                                                              },
                                                              "overrides": Object {},
                                                              "palette": Object {
                                                                "action": Object {
                                                                  "activatedOpacity": 0.12,
                                                                  "active": "rgba(0, 0, 0, 0.54)",
                                                                  "disabled": "rgba(0, 0, 0, 0.26)",
                                                                  "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                                                  "disabledOpacity": 0.38,
                                                                  "focus": "rgba(0, 0, 0, 0.12)",
                                                                  "focusOpacity": 0.12,
                                                                  "hover": "rgba(0, 0, 0, 0.04)",
                                                                  "hoverOpacity": 0.04,
                                                                  "selected": "rgba(0, 0, 0, 0.08)",
                                                                  "selectedOpacity": 0.08,
                                                                },
                                                                "augmentColor": [Function],
                                                                "background": Object {
                                                                  "default": "#fafafa",
                                                                  "paper": "#fff",
                                                                },
                                                                "common": Object {
                                                                  "black": "#000",
                                                                  "white": "#fff",
                                                                },
                                                                "contrastThreshold": 3,
                                                                "divider": "rgba(0, 0, 0, 0.12)",
                                                                "error": Object {
                                                                  "contrastText": "#fff",
                                                                  "dark": "#d32f2f",
                                                                  "light": "#e57373",
                                                                  "main": "#f44336",
                                                                },
                                                                "getContrastText": [Function],
                                                                "grey": Object {
                                                                  "100": "#f5f5f5",
                                                                  "200": "#eeeeee",
                                                                  "300": "#e0e0e0",
                                                                  "400": "#bdbdbd",
                                                                  "50": "#fafafa",
                                                                  "500": "#9e9e9e",
                                                                  "600": "#757575",
                                                                  "700": "#616161",
                                                                  "800": "#424242",
                                                                  "900": "#212121",
                                                                  "A100": "#d5d5d5",
                                                                  "A200": "#aaaaaa",
                                                                  "A400": "#303030",
                                                                  "A700": "#616161",
                                                                },
                                                                "info": Object {
                                                                  "contrastText": "#fff",
                                                                  "dark": "#1976d2",
                                                                  "light": "#64b5f6",
                                                                  "main": "#2196f3",
                                                                },
                                                                "primary": Object {
                                                                  "contrastText": "#fff",
                                                                  "dark": "#303f9f",
                                                                  "light": "#7986cb",
                                                                  "main": "#3f51b5",
                                                                },
                                                                "secondary": Object {
                                                                  "contrastText": "#fff",
                                                                  "dark": "#c51162",
                                                                  "light": "#ff4081",
                                                                  "main": "#f50057",
                                                                },
                                                                "success": Object {
                                                                  "contrastText": "rgba(0, 0, 0, 0.87)",
                                                                  "dark": "#388e3c",
                                                                  "light": "#81c784",
                                                                  "main": "#4caf50",
                                                                },
                                                                "text": Object {
                                                                  "disabled": "rgba(0, 0, 0, 0.38)",
                                                                  "hint": "rgba(0, 0, 0, 0.38)",
                                                                  "primary": "rgba(0, 0, 0, 0.87)",
                                                                  "secondary": "rgba(0, 0, 0, 0.54)",
                                                                },
                                                                "tonalOffset": 0.2,
                                                                "type": "light",
                                                                "warning": Object {
                                                                  "contrastText": "rgba(0, 0, 0, 0.87)",
                                                                  "dark": "#f57c00",
                                                                  "light": "#ffb74d",
                                                                  "main": "#ff9800",
                                                                },
                                                              },
                                                              "props": Object {},
                                                              "shadows": Array [
                                                                "none",
                                                                "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                                                "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                                                "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                                                "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                                                "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                                                "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                                                "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                                                "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                                                "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                                                "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                                                "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                                                "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                                                "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                                                "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                                                "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                                                "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                                                "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                                                "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                                              ],
                                                              "shape": Object {
                                                                "borderRadius": 4,
                                                              },
                                                              "spacing": [Function],
                                                              "transitions": Object {
                                                                "create": [Function],
                                                                "duration": Object {
                                                                  "complex": 375,
                                                                  "enteringScreen": 225,
                                                                  "leavingScreen": 195,
                                                                  "short": 250,
                                                                  "shorter": 200,
                                                                  "shortest": 150,
                                                                  "standard": 300,
                                                                },
                                                                "easing": Object {
                                                                  "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                                                  "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                                                  "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                                                  "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                                                },
                                                                "getAutoHeightDuration": [Function],
                                                              },
                                                              "typography": Object {
                                                                "body1": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "1rem",
                                                                  "fontWeight": 400,
                                                                  "letterSpacing": "0.00938em",
                                                                  "lineHeight": 1.5,
                                                                },
                                                                "body2": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "0.875rem",
                                                                  "fontWeight": 400,
                                                                  "letterSpacing": "0.01071em",
                                                                  "lineHeight": 1.43,
                                                                },
                                                                "button": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "0.875rem",
                                                                  "fontWeight": 500,
                                                                  "letterSpacing": "0.02857em",
                                                                  "lineHeight": 1.75,
                                                                  "textTransform": "uppercase",
                                                                },
                                                                "caption": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "0.75rem",
                                                                  "fontWeight": 400,
                                                                  "letterSpacing": "0.03333em",
                                                                  "lineHeight": 1.66,
                                                                },
                                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                "fontSize": 14,
                                                                "fontWeightBold": 700,
                                                                "fontWeightLight": 300,
                                                                "fontWeightMedium": 500,
                                                                "fontWeightRegular": 400,
                                                                "h1": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "6rem",
                                                                  "fontWeight": 300,
                                                                  "letterSpacing": "-0.01562em",
                                                                  "lineHeight": 1.167,
                                                                },
                                                                "h2": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "3.75rem",
                                                                  "fontWeight": 300,
                                                                  "letterSpacing": "-0.00833em",
                                                                  "lineHeight": 1.2,
                                                                },
                                                                "h3": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "3rem",
                                                                  "fontWeight": 400,
                                                                  "letterSpacing": "0em",
                                                                  "lineHeight": 1.167,
                                                                },
                                                                "h4": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "2.125rem",
                                                                  "fontWeight": 400,
                                                                  "letterSpacing": "0.00735em",
                                                                  "lineHeight": 1.235,
                                                                },
                                                                "h5": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "1.5rem",
                                                                  "fontWeight": 400,
                                                                  "letterSpacing": "0em",
                                                                  "lineHeight": 1.334,
                                                                },
                                                                "h6": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "1.25rem",
                                                                  "fontWeight": 500,
                                                                  "letterSpacing": "0.0075em",
                                                                  "lineHeight": 1.6,
                                                                },
                                                                "htmlFontSize": 16,
                                                                "overline": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "0.75rem",
                                                                  "fontWeight": 400,
                                                                  "letterSpacing": "0.08333em",
                                                                  "lineHeight": 2.66,
                                                                  "textTransform": "uppercase",
                                                                },
                                                                "pxToRem": [Function],
                                                                "round": [Function],
                                                                "subtitle1": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "1rem",
                                                                  "fontWeight": 400,
                                                                  "letterSpacing": "0.00938em",
                                                                  "lineHeight": 1.75,
                                                                },
                                                                "subtitle2": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "0.875rem",
                                                                  "fontWeight": 500,
                                                                  "letterSpacing": "0.00714em",
                                                                  "lineHeight": 1.57,
                                                                },
                                                              },
                                                              "zIndex": Object {
                                                                "appBar": 1100,
                                                                "drawer": 1200,
                                                                "mobileStepper": 1000,
                                                                "modal": 1300,
                                                                "snackbar": 1400,
                                                                "speedDial": 1050,
                                                                "tooltip": 1500,
                                                              },
                                                            },
                                                            "name": "MuiBackdrop",
                                                          },
                                                          "propTypes": Object {
                                                            "classes": [Function],
                                                            "innerRef": [Function],
                                                          },
                                                          "render": [Function],
                                                          "useStyles": [Function],
                                                        }
                                                      }
                                                      BackdropProps={
                                                        Object {
                                                          "transitionDuration": Object {
                                                            "enter": 225,
                                                            "exit": 195,
                                                          },
                                                        }
                                                      }
                                                      className="MuiDialog-root DatePicker__pickers"
                                                      closeAfterTransition={true}
                                                      disableEscapeKeyDown={false}
                                                      onClose={[Function]}
                                                      open={false}
                                                      role="dialog"
                                                    />
                                                  </ForwardRef(Dialog)>
                                                </WithStyles(ForwardRef(Dialog))>
                                              </ModalDialog>
                                            </WithStyles(ModalDialog)>
                                          </ModalWrapper>
                                        </Wrapper>
                                      </PickerWithState>
                                      <PickerWithState
                                        DialogProps={
                                          Object {
                                            "className": "DatePicker__pickers",
                                          }
                                        }
                                        KeyboardButtonProps={
                                          Object {
                                            "aria-label": "change time",
                                          }
                                        }
                                        ampm={false}
                                        autoComplete="off"
                                        cancelLabel="отмена"
                                        className="DatePicker__item DatePicker__item_time"
                                        invalidDateMessage="Invalid Time Format"
                                        keyboardIcon={<Memo />}
                                        label="Время"
                                        margin="normal"
                                        onChange={[Function]}
                                        onClick={[Function]}
                                        openTo="hours"
                                        value={null}
                                        views={
                                          Array [
                                            "hours",
                                            "minutes",
                                          ]
                                        }
                                      >
                                        <Wrapper
                                          DateInputProps={
                                            Object {
                                              "format": "HH:mm",
                                              "inputValue": "",
                                              "onChange": [Function],
                                              "openPicker": [Function],
                                              "validationError": "",
                                            }
                                          }
                                          DialogProps={
                                            Object {
                                              "className": "DatePicker__pickers",
                                            }
                                          }
                                          InputComponent={[Function]}
                                          KeyboardButtonProps={
                                            Object {
                                              "aria-label": "change time",
                                            }
                                          }
                                          autoComplete="off"
                                          cancelLabel="отмена"
                                          className="DatePicker__item DatePicker__item_time"
                                          format="HH:mm"
                                          keyboardIcon={<Memo />}
                                          label="Время"
                                          margin="normal"
                                          onAccept={[Function]}
                                          onClear={[Function]}
                                          onClick={[Function]}
                                          onDismiss={[Function]}
                                          onSetToday={[Function]}
                                          open={false}
                                          refuse={/\\[\\^\\\\d\\]\\+/gi}
                                        >
                                          <ModalWrapper
                                            DateInputProps={
                                              Object {
                                                "format": "HH:mm",
                                                "inputValue": "",
                                                "onChange": [Function],
                                                "openPicker": [Function],
                                                "validationError": "",
                                              }
                                            }
                                            DialogProps={
                                              Object {
                                                "className": "DatePicker__pickers",
                                              }
                                            }
                                            InputComponent={[Function]}
                                            KeyboardButtonProps={
                                              Object {
                                                "aria-label": "change time",
                                              }
                                            }
                                            autoComplete="off"
                                            cancelLabel="отмена"
                                            className="DatePicker__item DatePicker__item_time"
                                            clearLabel="Clear"
                                            clearable={false}
                                            format="HH:mm"
                                            keyboardIcon={<Memo />}
                                            label="Время"
                                            margin="normal"
                                            okLabel="OK"
                                            onAccept={[Function]}
                                            onClear={[Function]}
                                            onClick={[Function]}
                                            onDismiss={[Function]}
                                            onSetToday={[Function]}
                                            open={false}
                                            refuse={/\\[\\^\\\\d\\]\\+/gi}
                                            showTodayButton={false}
                                            todayLabel="Today"
                                          >
                                            <KeyboardDateInput
                                              KeyboardButtonProps={
                                                Object {
                                                  "aria-label": "change time",
                                                }
                                              }
                                              autoComplete="off"
                                              className="DatePicker__item DatePicker__item_time"
                                              format="HH:mm"
                                              inputValue=""
                                              keyboardIcon={<Memo />}
                                              label="Время"
                                              margin="normal"
                                              onChange={[Function]}
                                              onClick={[Function]}
                                              openPicker={[Function]}
                                              refuse={/\\[\\^\\\\d\\]\\+/gi}
                                              validationError=""
                                            >
                                              <Rifm
                                                format={[Function]}
                                                key="__:__"
                                                onChange={[Function]}
                                                refuse={/\\[\\^\\\\d\\]\\+/gi}
                                                value=""
                                              >
                                                <WithStyles(ForwardRef(TextField))
                                                  InputProps={
                                                    Object {
                                                      "endAdornment": <WithStyles(ForwardRef(InputAdornment))
                                                        position="end"
                                                      >
                                                        <WithStyles(ForwardRef(IconButton))
                                                          aria-label="change time"
                                                          onClick={[Function]}
                                                        >
                                                          <Memo />
                                                        </WithStyles(ForwardRef(IconButton))>
                                                      </WithStyles(ForwardRef(InputAdornment))>,
                                                    }
                                                  }
                                                  autoComplete="off"
                                                  className="DatePicker__item DatePicker__item_time"
                                                  error={false}
                                                  helperText=""
                                                  label="Время"
                                                  margin="normal"
                                                  onChange={[Function]}
                                                  onClick={[Function]}
                                                  value=""
                                                >
                                                  <ForwardRef(TextField)
                                                    InputProps={
                                                      Object {
                                                        "endAdornment": <WithStyles(ForwardRef(InputAdornment))
                                                          position="end"
                                                        >
                                                          <WithStyles(ForwardRef(IconButton))
                                                            aria-label="change time"
                                                            onClick={[Function]}
                                                          >
                                                            <Memo />
                                                          </WithStyles(ForwardRef(IconButton))>
                                                        </WithStyles(ForwardRef(InputAdornment))>,
                                                      }
                                                    }
                                                    autoComplete="off"
                                                    className="DatePicker__item DatePicker__item_time"
                                                    classes={
                                                      Object {
                                                        "root": "MuiTextField-root",
                                                      }
                                                    }
                                                    error={false}
                                                    helperText=""
                                                    label="Время"
                                                    margin="normal"
                                                    onChange={[Function]}
                                                    onClick={[Function]}
                                                    value=""
                                                  >
                                                    <WithStyles(ForwardRef(FormControl))
                                                      className="MuiTextField-root DatePicker__item DatePicker__item_time"
                                                      color="primary"
                                                      disabled={false}
                                                      error={false}
                                                      fullWidth={false}
                                                      margin="normal"
                                                      onClick={[Function]}
                                                      required={false}
                                                      variant="standard"
                                                    >
                                                      <ForwardRef(FormControl)
                                                        className="MuiTextField-root DatePicker__item DatePicker__item_time"
                                                        classes={
                                                          Object {
                                                            "fullWidth": "MuiFormControl-fullWidth",
                                                            "marginDense": "MuiFormControl-marginDense",
                                                            "marginNormal": "MuiFormControl-marginNormal",
                                                            "root": "MuiFormControl-root",
                                                          }
                                                        }
                                                        color="primary"
                                                        disabled={false}
                                                        error={false}
                                                        fullWidth={false}
                                                        margin="normal"
                                                        onClick={[Function]}
                                                        required={false}
                                                        variant="standard"
                                                      >
                                                        <div
                                                          className="MuiFormControl-root MuiTextField-root DatePicker__item DatePicker__item_time MuiFormControl-marginNormal"
                                                          onClick={[Function]}
                                                        >
                                                          <WithStyles(ForwardRef(InputLabel))>
                                                            <ForwardRef(InputLabel)
                                                              classes={
                                                                Object {
                                                                  "animated": "MuiInputLabel-animated",
                                                                  "asterisk": "MuiInputLabel-asterisk",
                                                                  "disabled": "Mui-disabled",
                                                                  "error": "Mui-error",
                                                                  "filled": "MuiInputLabel-filled",
                                                                  "focused": "Mui-focused",
                                                                  "formControl": "MuiInputLabel-formControl",
                                                                  "marginDense": "MuiInputLabel-marginDense",
                                                                  "outlined": "MuiInputLabel-outlined",
                                                                  "required": "Mui-required",
                                                                  "root": "MuiInputLabel-root",
                                                                  "shrink": "MuiInputLabel-shrink",
                                                                }
                                                              }
                                                            >
                                                              <WithStyles(ForwardRef(FormLabel))
                                                                className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                                                                classes={
                                                                  Object {
                                                                    "asterisk": "MuiInputLabel-asterisk",
                                                                    "disabled": "Mui-disabled",
                                                                    "error": "Mui-error",
                                                                    "focused": "Mui-focused",
                                                                    "required": "Mui-required",
                                                                  }
                                                                }
                                                                data-shrink={false}
                                                              >
                                                                <ForwardRef(FormLabel)
                                                                  className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                                                                  classes={
                                                                    Object {
                                                                      "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                                                      "colorSecondary": "MuiFormLabel-colorSecondary",
                                                                      "disabled": "Mui-disabled Mui-disabled",
                                                                      "error": "Mui-error Mui-error",
                                                                      "filled": "MuiFormLabel-filled",
                                                                      "focused": "Mui-focused Mui-focused",
                                                                      "required": "Mui-required Mui-required",
                                                                      "root": "MuiFormLabel-root",
                                                                    }
                                                                  }
                                                                  data-shrink={false}
                                                                >
                                                                  <label
                                                                    className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                                                                    data-shrink={false}
                                                                  >
                                                                    Время
                                                                  </label>
                                                                </ForwardRef(FormLabel)>
                                                              </WithStyles(ForwardRef(FormLabel))>
                                                            </ForwardRef(InputLabel)>
                                                          </WithStyles(ForwardRef(InputLabel))>
                                                          <WithStyles(ForwardRef(Input))
                                                            autoComplete="off"
                                                            autoFocus={false}
                                                            endAdornment={
                                                              <WithStyles(ForwardRef(InputAdornment))
                                                                position="end"
                                                              >
                                                                <WithStyles(ForwardRef(IconButton))
                                                                  aria-label="change time"
                                                                  onClick={[Function]}
                                                                >
                                                                  <Memo />
                                                                </WithStyles(ForwardRef(IconButton))>
                                                              </WithStyles(ForwardRef(InputAdornment))>
                                                            }
                                                            fullWidth={false}
                                                            multiline={false}
                                                            onChange={[Function]}
                                                            value=""
                                                          >
                                                            <ForwardRef(Input)
                                                              autoComplete="off"
                                                              autoFocus={false}
                                                              classes={
                                                                Object {
                                                                  "colorSecondary": "MuiInput-colorSecondary",
                                                                  "disabled": "Mui-disabled",
                                                                  "error": "Mui-error",
                                                                  "focused": "Mui-focused",
                                                                  "formControl": "MuiInput-formControl",
                                                                  "fullWidth": "MuiInput-fullWidth",
                                                                  "input": "MuiInput-input",
                                                                  "inputMarginDense": "MuiInput-inputMarginDense",
                                                                  "inputMultiline": "MuiInput-inputMultiline",
                                                                  "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                                  "marginDense": "MuiInput-marginDense",
                                                                  "multiline": "MuiInput-multiline",
                                                                  "root": "MuiInput-root",
                                                                  "underline": "MuiInput-underline",
                                                                }
                                                              }
                                                              endAdornment={
                                                                <WithStyles(ForwardRef(InputAdornment))
                                                                  position="end"
                                                                >
                                                                  <WithStyles(ForwardRef(IconButton))
                                                                    aria-label="change time"
                                                                    onClick={[Function]}
                                                                  >
                                                                    <Memo />
                                                                  </WithStyles(ForwardRef(IconButton))>
                                                                </WithStyles(ForwardRef(InputAdornment))>
                                                              }
                                                              fullWidth={false}
                                                              multiline={false}
                                                              onChange={[Function]}
                                                              value=""
                                                            >
                                                              <WithStyles(ForwardRef(InputBase))
                                                                autoComplete="off"
                                                                autoFocus={false}
                                                                classes={
                                                                  Object {
                                                                    "colorSecondary": "MuiInput-colorSecondary",
                                                                    "disabled": "Mui-disabled",
                                                                    "error": "Mui-error",
                                                                    "focused": "Mui-focused",
                                                                    "formControl": "MuiInput-formControl",
                                                                    "fullWidth": "MuiInput-fullWidth",
                                                                    "input": "MuiInput-input",
                                                                    "inputMarginDense": "MuiInput-inputMarginDense",
                                                                    "inputMultiline": "MuiInput-inputMultiline",
                                                                    "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                                    "marginDense": "MuiInput-marginDense",
                                                                    "multiline": "MuiInput-multiline",
                                                                    "root": "MuiInput-root MuiInput-underline",
                                                                    "underline": null,
                                                                  }
                                                                }
                                                                endAdornment={
                                                                  <WithStyles(ForwardRef(InputAdornment))
                                                                    position="end"
                                                                  >
                                                                    <WithStyles(ForwardRef(IconButton))
                                                                      aria-label="change time"
                                                                      onClick={[Function]}
                                                                    >
                                                                      <Memo />
                                                                    </WithStyles(ForwardRef(IconButton))>
                                                                  </WithStyles(ForwardRef(InputAdornment))>
                                                                }
                                                                fullWidth={false}
                                                                inputComponent="input"
                                                                multiline={false}
                                                                onChange={[Function]}
                                                                type="text"
                                                                value=""
                                                              >
                                                                <ForwardRef(InputBase)
                                                                  autoComplete="off"
                                                                  autoFocus={false}
                                                                  classes={
                                                                    Object {
                                                                      "adornedEnd": "MuiInputBase-adornedEnd",
                                                                      "adornedStart": "MuiInputBase-adornedStart",
                                                                      "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                                      "disabled": "Mui-disabled Mui-disabled",
                                                                      "error": "Mui-error Mui-error",
                                                                      "focused": "Mui-focused Mui-focused",
                                                                      "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                                      "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                                      "input": "MuiInputBase-input MuiInput-input",
                                                                      "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                                      "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                                      "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                                      "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                                      "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                                      "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                                      "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                                      "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                                      "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                                    }
                                                                  }
                                                                  endAdornment={
                                                                    <WithStyles(ForwardRef(InputAdornment))
                                                                      position="end"
                                                                    >
                                                                      <WithStyles(ForwardRef(IconButton))
                                                                        aria-label="change time"
                                                                        onClick={[Function]}
                                                                      >
                                                                        <Memo />
                                                                      </WithStyles(ForwardRef(IconButton))>
                                                                    </WithStyles(ForwardRef(InputAdornment))>
                                                                  }
                                                                  fullWidth={false}
                                                                  inputComponent="input"
                                                                  multiline={false}
                                                                  onChange={[Function]}
                                                                  type="text"
                                                                  value=""
                                                                >
                                                                  <div
                                                                    className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedEnd"
                                                                    onClick={[Function]}
                                                                  >
                                                                    <input
                                                                      aria-invalid={false}
                                                                      autoComplete="off"
                                                                      autoFocus={false}
                                                                      className="MuiInputBase-input MuiInput-input MuiInputBase-inputAdornedEnd"
                                                                      disabled={false}
                                                                      onAnimationStart={[Function]}
                                                                      onBlur={[Function]}
                                                                      onChange={[Function]}
                                                                      onFocus={[Function]}
                                                                      required={false}
                                                                      type="text"
                                                                      value=""
                                                                    />
                                                                    <WithStyles(ForwardRef(InputAdornment))
                                                                      position="end"
                                                                    >
                                                                      <ForwardRef(InputAdornment)
                                                                        classes={
                                                                          Object {
                                                                            "disablePointerEvents": "MuiInputAdornment-disablePointerEvents",
                                                                            "filled": "MuiInputAdornment-filled",
                                                                            "hiddenLabel": "MuiInputAdornment-hiddenLabel",
                                                                            "marginDense": "MuiInputAdornment-marginDense",
                                                                            "positionEnd": "MuiInputAdornment-positionEnd",
                                                                            "positionStart": "MuiInputAdornment-positionStart",
                                                                            "root": "MuiInputAdornment-root",
                                                                          }
                                                                        }
                                                                        position="end"
                                                                      >
                                                                        <div
                                                                          className="MuiInputAdornment-root MuiInputAdornment-positionEnd"
                                                                        >
                                                                          <WithStyles(ForwardRef(IconButton))
                                                                            aria-label="change time"
                                                                            onClick={[Function]}
                                                                          >
                                                                            <ForwardRef(IconButton)
                                                                              aria-label="change time"
                                                                              classes={
                                                                                Object {
                                                                                  "colorInherit": "MuiIconButton-colorInherit",
                                                                                  "colorPrimary": "MuiIconButton-colorPrimary",
                                                                                  "colorSecondary": "MuiIconButton-colorSecondary",
                                                                                  "disabled": "Mui-disabled",
                                                                                  "edgeEnd": "MuiIconButton-edgeEnd",
                                                                                  "edgeStart": "MuiIconButton-edgeStart",
                                                                                  "label": "MuiIconButton-label",
                                                                                  "root": "MuiIconButton-root",
                                                                                  "sizeSmall": "MuiIconButton-sizeSmall",
                                                                                }
                                                                              }
                                                                              onClick={[Function]}
                                                                            >
                                                                              <WithStyles(ForwardRef(ButtonBase))
                                                                                aria-label="change time"
                                                                                centerRipple={true}
                                                                                className="MuiIconButton-root"
                                                                                disabled={false}
                                                                                focusRipple={true}
                                                                                onClick={[Function]}
                                                                              >
                                                                                <ForwardRef(ButtonBase)
                                                                                  aria-label="change time"
                                                                                  centerRipple={true}
                                                                                  className="MuiIconButton-root"
                                                                                  classes={
                                                                                    Object {
                                                                                      "disabled": "Mui-disabled",
                                                                                      "focusVisible": "Mui-focusVisible",
                                                                                      "root": "MuiButtonBase-root",
                                                                                    }
                                                                                  }
                                                                                  disabled={false}
                                                                                  focusRipple={true}
                                                                                  onClick={[Function]}
                                                                                >
                                                                                  <button
                                                                                    aria-label="change time"
                                                                                    className="MuiButtonBase-root MuiIconButton-root"
                                                                                    disabled={false}
                                                                                    onBlur={[Function]}
                                                                                    onClick={[Function]}
                                                                                    onDragLeave={[Function]}
                                                                                    onFocus={[Function]}
                                                                                    onKeyDown={[Function]}
                                                                                    onKeyUp={[Function]}
                                                                                    onMouseDown={[Function]}
                                                                                    onMouseLeave={[Function]}
                                                                                    onMouseUp={[Function]}
                                                                                    onTouchEnd={[Function]}
                                                                                    onTouchMove={[Function]}
                                                                                    onTouchStart={[Function]}
                                                                                    tabIndex={0}
                                                                                    type="button"
                                                                                  >
                                                                                    <span
                                                                                      className="MuiIconButton-label"
                                                                                    >
                                                                                      <ForwardRef(AlarmIcon)>
                                                                                        <WithStyles(ForwardRef(SvgIcon))>
                                                                                          <ForwardRef(SvgIcon)
                                                                                            classes={
                                                                                              Object {
                                                                                                "colorAction": "MuiSvgIcon-colorAction",
                                                                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                                                "colorError": "MuiSvgIcon-colorError",
                                                                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                                                "root": "MuiSvgIcon-root",
                                                                                              }
                                                                                            }
                                                                                          >
                                                                                            <svg
                                                                                              aria-hidden={true}
                                                                                              className="MuiSvgIcon-root"
                                                                                              focusable="false"
                                                                                              viewBox="0 0 24 24"
                                                                                            >
                                                                                              <path
                                                                                                d="M22 5.72l-4.6-3.86-1.29 1.53 4.6 3.86L22 5.72zM7.88 3.39L6.6 1.86 2 5.71l1.29 1.53 4.59-3.85zM12.5 8H11v6l4.75 2.85.75-1.23-4-2.37V8zM12 4c-4.97 0-9 4.03-9 9s4.02 9 9 9c4.97 0 9-4.03 9-9s-4.03-9-9-9zm0 16c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7z"
                                                                                              />
                                                                                            </svg>
                                                                                          </ForwardRef(SvgIcon)>
                                                                                        </WithStyles(ForwardRef(SvgIcon))>
                                                                                      </ForwardRef(AlarmIcon)>
                                                                                    </span>
                                                                                    <WithStyles(memo)
                                                                                      center={true}
                                                                                    >
                                                                                      <ForwardRef(TouchRipple)
                                                                                        center={true}
                                                                                        classes={
                                                                                          Object {
                                                                                            "child": "MuiTouchRipple-child",
                                                                                            "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                            "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                            "ripple": "MuiTouchRipple-ripple",
                                                                                            "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                            "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                            "root": "MuiTouchRipple-root",
                                                                                          }
                                                                                        }
                                                                                      >
                                                                                        <span
                                                                                          className="MuiTouchRipple-root"
                                                                                        >
                                                                                          <TransitionGroup
                                                                                            childFactory={[Function]}
                                                                                            component={null}
                                                                                            exit={true}
                                                                                          />
                                                                                        </span>
                                                                                      </ForwardRef(TouchRipple)>
                                                                                    </WithStyles(memo)>
                                                                                  </button>
                                                                                </ForwardRef(ButtonBase)>
                                                                              </WithStyles(ForwardRef(ButtonBase))>
                                                                            </ForwardRef(IconButton)>
                                                                          </WithStyles(ForwardRef(IconButton))>
                                                                        </div>
                                                                      </ForwardRef(InputAdornment)>
                                                                    </WithStyles(ForwardRef(InputAdornment))>
                                                                  </div>
                                                                </ForwardRef(InputBase)>
                                                              </WithStyles(ForwardRef(InputBase))>
                                                            </ForwardRef(Input)>
                                                          </WithStyles(ForwardRef(Input))>
                                                        </div>
                                                      </ForwardRef(FormControl)>
                                                    </WithStyles(ForwardRef(FormControl))>
                                                  </ForwardRef(TextField)>
                                                </WithStyles(ForwardRef(TextField))>
                                              </Rifm>
                                            </KeyboardDateInput>
                                            <WithStyles(ModalDialog)
                                              cancelLabel="отмена"
                                              className="DatePicker__pickers"
                                              clearLabel="Clear"
                                              clearable={false}
                                              okLabel="OK"
                                              onAccept={[Function]}
                                              onClear={[Function]}
                                              onDismiss={[Function]}
                                              onSetToday={[Function]}
                                              open={false}
                                              showTodayButton={false}
                                              todayLabel="Today"
                                            >
                                              <ModalDialog
                                                cancelLabel="отмена"
                                                className="DatePicker__pickers"
                                                classes={
                                                  Object {
                                                    "dialog": "MuiPickersModal-dialog",
                                                    "dialogRoot": "MuiPickersModal-dialogRoot",
                                                    "dialogRootWider": "MuiPickersModal-dialogRootWider",
                                                    "withAdditionalAction": "MuiPickersModal-withAdditionalAction",
                                                  }
                                                }
                                                clearLabel="Clear"
                                                clearable={false}
                                                okLabel="OK"
                                                onAccept={[Function]}
                                                onClear={[Function]}
                                                onDismiss={[Function]}
                                                onSetToday={[Function]}
                                                open={false}
                                                showTodayButton={false}
                                                todayLabel="Today"
                                              >
                                                <WithStyles(ForwardRef(Dialog))
                                                  className="DatePicker__pickers"
                                                  classes={
                                                    Object {
                                                      "paper": "MuiPickersModal-dialogRoot",
                                                    }
                                                  }
                                                  onClose={[Function]}
                                                  open={false}
                                                  role="dialog"
                                                >
                                                  <ForwardRef(Dialog)
                                                    className="DatePicker__pickers"
                                                    classes={
                                                      Object {
                                                        "container": "MuiDialog-container",
                                                        "paper": "MuiDialog-paper MuiPickersModal-dialogRoot",
                                                        "paperFullScreen": "MuiDialog-paperFullScreen",
                                                        "paperFullWidth": "MuiDialog-paperFullWidth",
                                                        "paperScrollBody": "MuiDialog-paperScrollBody",
                                                        "paperScrollPaper": "MuiDialog-paperScrollPaper",
                                                        "paperWidthFalse": "MuiDialog-paperWidthFalse",
                                                        "paperWidthLg": "MuiDialog-paperWidthLg",
                                                        "paperWidthMd": "MuiDialog-paperWidthMd",
                                                        "paperWidthSm": "MuiDialog-paperWidthSm",
                                                        "paperWidthXl": "MuiDialog-paperWidthXl",
                                                        "paperWidthXs": "MuiDialog-paperWidthXs",
                                                        "root": "MuiDialog-root",
                                                        "scrollBody": "MuiDialog-scrollBody",
                                                        "scrollPaper": "MuiDialog-scrollPaper",
                                                      }
                                                    }
                                                    onClose={[Function]}
                                                    open={false}
                                                    role="dialog"
                                                  >
                                                    <ForwardRef(Modal)
                                                      BackdropComponent={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "Naked": Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "propTypes": Object {
                                                              "children": [Function],
                                                              "className": [Function],
                                                              "classes": [Function],
                                                              "invisible": [Function],
                                                              "open": [Function],
                                                              "transitionDuration": [Function],
                                                            },
                                                            "render": [Function],
                                                          },
                                                          "options": Object {
                                                            "defaultTheme": Object {
                                                              "breakpoints": Object {
                                                                "between": [Function],
                                                                "down": [Function],
                                                                "keys": Array [
                                                                  "xs",
                                                                  "sm",
                                                                  "md",
                                                                  "lg",
                                                                  "xl",
                                                                ],
                                                                "only": [Function],
                                                                "up": [Function],
                                                                "values": Object {
                                                                  "lg": 1280,
                                                                  "md": 960,
                                                                  "sm": 600,
                                                                  "xl": 1920,
                                                                  "xs": 0,
                                                                },
                                                                "width": [Function],
                                                              },
                                                              "direction": "ltr",
                                                              "mixins": Object {
                                                                "gutters": [Function],
                                                                "toolbar": Object {
                                                                  "@media (min-width:0px) and (orientation: landscape)": Object {
                                                                    "minHeight": 48,
                                                                  },
                                                                  "@media (min-width:600px)": Object {
                                                                    "minHeight": 64,
                                                                  },
                                                                  "minHeight": 56,
                                                                },
                                                              },
                                                              "overrides": Object {},
                                                              "palette": Object {
                                                                "action": Object {
                                                                  "activatedOpacity": 0.12,
                                                                  "active": "rgba(0, 0, 0, 0.54)",
                                                                  "disabled": "rgba(0, 0, 0, 0.26)",
                                                                  "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                                                  "disabledOpacity": 0.38,
                                                                  "focus": "rgba(0, 0, 0, 0.12)",
                                                                  "focusOpacity": 0.12,
                                                                  "hover": "rgba(0, 0, 0, 0.04)",
                                                                  "hoverOpacity": 0.04,
                                                                  "selected": "rgba(0, 0, 0, 0.08)",
                                                                  "selectedOpacity": 0.08,
                                                                },
                                                                "augmentColor": [Function],
                                                                "background": Object {
                                                                  "default": "#fafafa",
                                                                  "paper": "#fff",
                                                                },
                                                                "common": Object {
                                                                  "black": "#000",
                                                                  "white": "#fff",
                                                                },
                                                                "contrastThreshold": 3,
                                                                "divider": "rgba(0, 0, 0, 0.12)",
                                                                "error": Object {
                                                                  "contrastText": "#fff",
                                                                  "dark": "#d32f2f",
                                                                  "light": "#e57373",
                                                                  "main": "#f44336",
                                                                },
                                                                "getContrastText": [Function],
                                                                "grey": Object {
                                                                  "100": "#f5f5f5",
                                                                  "200": "#eeeeee",
                                                                  "300": "#e0e0e0",
                                                                  "400": "#bdbdbd",
                                                                  "50": "#fafafa",
                                                                  "500": "#9e9e9e",
                                                                  "600": "#757575",
                                                                  "700": "#616161",
                                                                  "800": "#424242",
                                                                  "900": "#212121",
                                                                  "A100": "#d5d5d5",
                                                                  "A200": "#aaaaaa",
                                                                  "A400": "#303030",
                                                                  "A700": "#616161",
                                                                },
                                                                "info": Object {
                                                                  "contrastText": "#fff",
                                                                  "dark": "#1976d2",
                                                                  "light": "#64b5f6",
                                                                  "main": "#2196f3",
                                                                },
                                                                "primary": Object {
                                                                  "contrastText": "#fff",
                                                                  "dark": "#303f9f",
                                                                  "light": "#7986cb",
                                                                  "main": "#3f51b5",
                                                                },
                                                                "secondary": Object {
                                                                  "contrastText": "#fff",
                                                                  "dark": "#c51162",
                                                                  "light": "#ff4081",
                                                                  "main": "#f50057",
                                                                },
                                                                "success": Object {
                                                                  "contrastText": "rgba(0, 0, 0, 0.87)",
                                                                  "dark": "#388e3c",
                                                                  "light": "#81c784",
                                                                  "main": "#4caf50",
                                                                },
                                                                "text": Object {
                                                                  "disabled": "rgba(0, 0, 0, 0.38)",
                                                                  "hint": "rgba(0, 0, 0, 0.38)",
                                                                  "primary": "rgba(0, 0, 0, 0.87)",
                                                                  "secondary": "rgba(0, 0, 0, 0.54)",
                                                                },
                                                                "tonalOffset": 0.2,
                                                                "type": "light",
                                                                "warning": Object {
                                                                  "contrastText": "rgba(0, 0, 0, 0.87)",
                                                                  "dark": "#f57c00",
                                                                  "light": "#ffb74d",
                                                                  "main": "#ff9800",
                                                                },
                                                              },
                                                              "props": Object {},
                                                              "shadows": Array [
                                                                "none",
                                                                "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                                                "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                                                "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                                                "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                                                "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                                                "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                                                "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                                                "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                                                "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                                                "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                                                "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                                                "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                                                "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                                                "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                                                "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                                                "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                                                "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                                                "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                                              ],
                                                              "shape": Object {
                                                                "borderRadius": 4,
                                                              },
                                                              "spacing": [Function],
                                                              "transitions": Object {
                                                                "create": [Function],
                                                                "duration": Object {
                                                                  "complex": 375,
                                                                  "enteringScreen": 225,
                                                                  "leavingScreen": 195,
                                                                  "short": 250,
                                                                  "shorter": 200,
                                                                  "shortest": 150,
                                                                  "standard": 300,
                                                                },
                                                                "easing": Object {
                                                                  "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                                                  "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                                                  "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                                                  "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                                                },
                                                                "getAutoHeightDuration": [Function],
                                                              },
                                                              "typography": Object {
                                                                "body1": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "1rem",
                                                                  "fontWeight": 400,
                                                                  "letterSpacing": "0.00938em",
                                                                  "lineHeight": 1.5,
                                                                },
                                                                "body2": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "0.875rem",
                                                                  "fontWeight": 400,
                                                                  "letterSpacing": "0.01071em",
                                                                  "lineHeight": 1.43,
                                                                },
                                                                "button": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "0.875rem",
                                                                  "fontWeight": 500,
                                                                  "letterSpacing": "0.02857em",
                                                                  "lineHeight": 1.75,
                                                                  "textTransform": "uppercase",
                                                                },
                                                                "caption": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "0.75rem",
                                                                  "fontWeight": 400,
                                                                  "letterSpacing": "0.03333em",
                                                                  "lineHeight": 1.66,
                                                                },
                                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                "fontSize": 14,
                                                                "fontWeightBold": 700,
                                                                "fontWeightLight": 300,
                                                                "fontWeightMedium": 500,
                                                                "fontWeightRegular": 400,
                                                                "h1": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "6rem",
                                                                  "fontWeight": 300,
                                                                  "letterSpacing": "-0.01562em",
                                                                  "lineHeight": 1.167,
                                                                },
                                                                "h2": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "3.75rem",
                                                                  "fontWeight": 300,
                                                                  "letterSpacing": "-0.00833em",
                                                                  "lineHeight": 1.2,
                                                                },
                                                                "h3": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "3rem",
                                                                  "fontWeight": 400,
                                                                  "letterSpacing": "0em",
                                                                  "lineHeight": 1.167,
                                                                },
                                                                "h4": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "2.125rem",
                                                                  "fontWeight": 400,
                                                                  "letterSpacing": "0.00735em",
                                                                  "lineHeight": 1.235,
                                                                },
                                                                "h5": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "1.5rem",
                                                                  "fontWeight": 400,
                                                                  "letterSpacing": "0em",
                                                                  "lineHeight": 1.334,
                                                                },
                                                                "h6": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "1.25rem",
                                                                  "fontWeight": 500,
                                                                  "letterSpacing": "0.0075em",
                                                                  "lineHeight": 1.6,
                                                                },
                                                                "htmlFontSize": 16,
                                                                "overline": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "0.75rem",
                                                                  "fontWeight": 400,
                                                                  "letterSpacing": "0.08333em",
                                                                  "lineHeight": 2.66,
                                                                  "textTransform": "uppercase",
                                                                },
                                                                "pxToRem": [Function],
                                                                "round": [Function],
                                                                "subtitle1": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "1rem",
                                                                  "fontWeight": 400,
                                                                  "letterSpacing": "0.00938em",
                                                                  "lineHeight": 1.75,
                                                                },
                                                                "subtitle2": Object {
                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                  "fontSize": "0.875rem",
                                                                  "fontWeight": 500,
                                                                  "letterSpacing": "0.00714em",
                                                                  "lineHeight": 1.57,
                                                                },
                                                              },
                                                              "zIndex": Object {
                                                                "appBar": 1100,
                                                                "drawer": 1200,
                                                                "mobileStepper": 1000,
                                                                "modal": 1300,
                                                                "snackbar": 1400,
                                                                "speedDial": 1050,
                                                                "tooltip": 1500,
                                                              },
                                                            },
                                                            "name": "MuiBackdrop",
                                                          },
                                                          "propTypes": Object {
                                                            "classes": [Function],
                                                            "innerRef": [Function],
                                                          },
                                                          "render": [Function],
                                                          "useStyles": [Function],
                                                        }
                                                      }
                                                      BackdropProps={
                                                        Object {
                                                          "transitionDuration": Object {
                                                            "enter": 225,
                                                            "exit": 195,
                                                          },
                                                        }
                                                      }
                                                      className="MuiDialog-root DatePicker__pickers"
                                                      closeAfterTransition={true}
                                                      disableEscapeKeyDown={false}
                                                      onClose={[Function]}
                                                      open={false}
                                                      role="dialog"
                                                    />
                                                  </ForwardRef(Dialog)>
                                                </WithStyles(ForwardRef(Dialog))>
                                              </ModalDialog>
                                            </WithStyles(ModalDialog)>
                                          </ModalWrapper>
                                        </Wrapper>
                                      </PickerWithState>
                                    </MuiPickersUtilsProvider>
                                  </div>
                                </Memo(DatePicker)>
                                <WithStyles(ForwardRef(IconButton))
                                  aria-label="edit"
                                  className="ToDoListItem__button ToDoListItem__button_important  ToDoListItem__button_marginRight "
                                  color="inherit"
                                  onClick={[Function]}
                                >
                                  <ForwardRef(IconButton)
                                    aria-label="edit"
                                    className="ToDoListItem__button ToDoListItem__button_important  ToDoListItem__button_marginRight "
                                    classes={
                                      Object {
                                        "colorInherit": "MuiIconButton-colorInherit",
                                        "colorPrimary": "MuiIconButton-colorPrimary",
                                        "colorSecondary": "MuiIconButton-colorSecondary",
                                        "disabled": "Mui-disabled",
                                        "edgeEnd": "MuiIconButton-edgeEnd",
                                        "edgeStart": "MuiIconButton-edgeStart",
                                        "label": "MuiIconButton-label",
                                        "root": "MuiIconButton-root",
                                        "sizeSmall": "MuiIconButton-sizeSmall",
                                      }
                                    }
                                    color="inherit"
                                    onClick={[Function]}
                                  >
                                    <WithStyles(ForwardRef(ButtonBase))
                                      aria-label="edit"
                                      centerRipple={true}
                                      className="MuiIconButton-root ToDoListItem__button ToDoListItem__button_important  ToDoListItem__button_marginRight  MuiIconButton-colorInherit"
                                      disabled={false}
                                      focusRipple={true}
                                      onClick={[Function]}
                                    >
                                      <ForwardRef(ButtonBase)
                                        aria-label="edit"
                                        centerRipple={true}
                                        className="MuiIconButton-root ToDoListItem__button ToDoListItem__button_important  ToDoListItem__button_marginRight  MuiIconButton-colorInherit"
                                        classes={
                                          Object {
                                            "disabled": "Mui-disabled",
                                            "focusVisible": "Mui-focusVisible",
                                            "root": "MuiButtonBase-root",
                                          }
                                        }
                                        disabled={false}
                                        focusRipple={true}
                                        onClick={[Function]}
                                      >
                                        <button
                                          aria-label="edit"
                                          className="MuiButtonBase-root MuiIconButton-root ToDoListItem__button ToDoListItem__button_important  ToDoListItem__button_marginRight  MuiIconButton-colorInherit"
                                          disabled={false}
                                          onBlur={[Function]}
                                          onClick={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex={0}
                                          type="button"
                                        >
                                          <span
                                            className="MuiIconButton-label"
                                          >
                                            <ForwardRef(StarIcon)
                                              fontSize="medium"
                                            >
                                              <WithStyles(ForwardRef(SvgIcon))
                                                fontSize="medium"
                                              >
                                                <ForwardRef(SvgIcon)
                                                  classes={
                                                    Object {
                                                      "colorAction": "MuiSvgIcon-colorAction",
                                                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                      "colorError": "MuiSvgIcon-colorError",
                                                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                      "root": "MuiSvgIcon-root",
                                                    }
                                                  }
                                                  fontSize="medium"
                                                >
                                                  <svg
                                                    aria-hidden={true}
                                                    className="MuiSvgIcon-root"
                                                    focusable="false"
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <path
                                                      d="M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z"
                                                    />
                                                  </svg>
                                                </ForwardRef(SvgIcon)>
                                              </WithStyles(ForwardRef(SvgIcon))>
                                            </ForwardRef(StarIcon)>
                                          </span>
                                          <WithStyles(memo)
                                            center={true}
                                          >
                                            <ForwardRef(TouchRipple)
                                              center={true}
                                              classes={
                                                Object {
                                                  "child": "MuiTouchRipple-child",
                                                  "childLeaving": "MuiTouchRipple-childLeaving",
                                                  "childPulsate": "MuiTouchRipple-childPulsate",
                                                  "ripple": "MuiTouchRipple-ripple",
                                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                  "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                  "root": "MuiTouchRipple-root",
                                                }
                                              }
                                            >
                                              <span
                                                className="MuiTouchRipple-root"
                                              >
                                                <TransitionGroup
                                                  childFactory={[Function]}
                                                  component={null}
                                                  exit={true}
                                                />
                                              </span>
                                            </ForwardRef(TouchRipple)>
                                          </WithStyles(memo)>
                                        </button>
                                      </ForwardRef(ButtonBase)>
                                    </WithStyles(ForwardRef(ButtonBase))>
                                  </ForwardRef(IconButton)>
                                </WithStyles(ForwardRef(IconButton))>
                                <WithStyles(ForwardRef(IconButton))
                                  aria-label="edit"
                                  className="ToDoListItem__button ToDoListItem__button_edit ToDoListItem__button_marginRight"
                                  color="inherit"
                                  onClick={[Function]}
                                >
                                  <ForwardRef(IconButton)
                                    aria-label="edit"
                                    className="ToDoListItem__button ToDoListItem__button_edit ToDoListItem__button_marginRight"
                                    classes={
                                      Object {
                                        "colorInherit": "MuiIconButton-colorInherit",
                                        "colorPrimary": "MuiIconButton-colorPrimary",
                                        "colorSecondary": "MuiIconButton-colorSecondary",
                                        "disabled": "Mui-disabled",
                                        "edgeEnd": "MuiIconButton-edgeEnd",
                                        "edgeStart": "MuiIconButton-edgeStart",
                                        "label": "MuiIconButton-label",
                                        "root": "MuiIconButton-root",
                                        "sizeSmall": "MuiIconButton-sizeSmall",
                                      }
                                    }
                                    color="inherit"
                                    onClick={[Function]}
                                  >
                                    <WithStyles(ForwardRef(ButtonBase))
                                      aria-label="edit"
                                      centerRipple={true}
                                      className="MuiIconButton-root ToDoListItem__button ToDoListItem__button_edit ToDoListItem__button_marginRight MuiIconButton-colorInherit"
                                      disabled={false}
                                      focusRipple={true}
                                      onClick={[Function]}
                                    >
                                      <ForwardRef(ButtonBase)
                                        aria-label="edit"
                                        centerRipple={true}
                                        className="MuiIconButton-root ToDoListItem__button ToDoListItem__button_edit ToDoListItem__button_marginRight MuiIconButton-colorInherit"
                                        classes={
                                          Object {
                                            "disabled": "Mui-disabled",
                                            "focusVisible": "Mui-focusVisible",
                                            "root": "MuiButtonBase-root",
                                          }
                                        }
                                        disabled={false}
                                        focusRipple={true}
                                        onClick={[Function]}
                                      >
                                        <button
                                          aria-label="edit"
                                          className="MuiButtonBase-root MuiIconButton-root ToDoListItem__button ToDoListItem__button_edit ToDoListItem__button_marginRight MuiIconButton-colorInherit"
                                          disabled={false}
                                          onBlur={[Function]}
                                          onClick={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex={0}
                                          type="button"
                                        >
                                          <span
                                            className="MuiIconButton-label"
                                          >
                                            <ForwardRef(EditIcon)
                                              fontSize="medium"
                                            >
                                              <WithStyles(ForwardRef(SvgIcon))
                                                fontSize="medium"
                                              >
                                                <ForwardRef(SvgIcon)
                                                  classes={
                                                    Object {
                                                      "colorAction": "MuiSvgIcon-colorAction",
                                                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                      "colorError": "MuiSvgIcon-colorError",
                                                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                      "root": "MuiSvgIcon-root",
                                                    }
                                                  }
                                                  fontSize="medium"
                                                >
                                                  <svg
                                                    aria-hidden={true}
                                                    className="MuiSvgIcon-root"
                                                    focusable="false"
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <path
                                                      d="M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 00-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z"
                                                    />
                                                  </svg>
                                                </ForwardRef(SvgIcon)>
                                              </WithStyles(ForwardRef(SvgIcon))>
                                            </ForwardRef(EditIcon)>
                                          </span>
                                          <WithStyles(memo)
                                            center={true}
                                          >
                                            <ForwardRef(TouchRipple)
                                              center={true}
                                              classes={
                                                Object {
                                                  "child": "MuiTouchRipple-child",
                                                  "childLeaving": "MuiTouchRipple-childLeaving",
                                                  "childPulsate": "MuiTouchRipple-childPulsate",
                                                  "ripple": "MuiTouchRipple-ripple",
                                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                  "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                  "root": "MuiTouchRipple-root",
                                                }
                                              }
                                            >
                                              <span
                                                className="MuiTouchRipple-root"
                                              >
                                                <TransitionGroup
                                                  childFactory={[Function]}
                                                  component={null}
                                                  exit={true}
                                                />
                                              </span>
                                            </ForwardRef(TouchRipple)>
                                          </WithStyles(memo)>
                                        </button>
                                      </ForwardRef(ButtonBase)>
                                    </WithStyles(ForwardRef(ButtonBase))>
                                  </ForwardRef(IconButton)>
                                </WithStyles(ForwardRef(IconButton))>
                                <WithStyles(ForwardRef(IconButton))
                                  aria-label="delete"
                                  className="ToDoListItem__button ToDoListItem__button_delete"
                                  color="inherit"
                                  onClick={[Function]}
                                >
                                  <ForwardRef(IconButton)
                                    aria-label="delete"
                                    className="ToDoListItem__button ToDoListItem__button_delete"
                                    classes={
                                      Object {
                                        "colorInherit": "MuiIconButton-colorInherit",
                                        "colorPrimary": "MuiIconButton-colorPrimary",
                                        "colorSecondary": "MuiIconButton-colorSecondary",
                                        "disabled": "Mui-disabled",
                                        "edgeEnd": "MuiIconButton-edgeEnd",
                                        "edgeStart": "MuiIconButton-edgeStart",
                                        "label": "MuiIconButton-label",
                                        "root": "MuiIconButton-root",
                                        "sizeSmall": "MuiIconButton-sizeSmall",
                                      }
                                    }
                                    color="inherit"
                                    onClick={[Function]}
                                  >
                                    <WithStyles(ForwardRef(ButtonBase))
                                      aria-label="delete"
                                      centerRipple={true}
                                      className="MuiIconButton-root ToDoListItem__button ToDoListItem__button_delete MuiIconButton-colorInherit"
                                      disabled={false}
                                      focusRipple={true}
                                      onClick={[Function]}
                                    >
                                      <ForwardRef(ButtonBase)
                                        aria-label="delete"
                                        centerRipple={true}
                                        className="MuiIconButton-root ToDoListItem__button ToDoListItem__button_delete MuiIconButton-colorInherit"
                                        classes={
                                          Object {
                                            "disabled": "Mui-disabled",
                                            "focusVisible": "Mui-focusVisible",
                                            "root": "MuiButtonBase-root",
                                          }
                                        }
                                        disabled={false}
                                        focusRipple={true}
                                        onClick={[Function]}
                                      >
                                        <button
                                          aria-label="delete"
                                          className="MuiButtonBase-root MuiIconButton-root ToDoListItem__button ToDoListItem__button_delete MuiIconButton-colorInherit"
                                          disabled={false}
                                          onBlur={[Function]}
                                          onClick={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex={0}
                                          type="button"
                                        >
                                          <span
                                            className="MuiIconButton-label"
                                          >
                                            <ForwardRef(DeleteOutlinedIcon)
                                              fontSize="medium"
                                            >
                                              <WithStyles(ForwardRef(SvgIcon))
                                                fontSize="medium"
                                              >
                                                <ForwardRef(SvgIcon)
                                                  classes={
                                                    Object {
                                                      "colorAction": "MuiSvgIcon-colorAction",
                                                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                      "colorError": "MuiSvgIcon-colorError",
                                                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                      "root": "MuiSvgIcon-root",
                                                    }
                                                  }
                                                  fontSize="medium"
                                                >
                                                  <svg
                                                    aria-hidden={true}
                                                    className="MuiSvgIcon-root"
                                                    focusable="false"
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <path
                                                      d="M16 9v10H8V9h8m-1.5-6h-5l-1 1H5v2h14V4h-3.5l-1-1zM18 7H6v12c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7z"
                                                    />
                                                  </svg>
                                                </ForwardRef(SvgIcon)>
                                              </WithStyles(ForwardRef(SvgIcon))>
                                            </ForwardRef(DeleteOutlinedIcon)>
                                          </span>
                                          <WithStyles(memo)
                                            center={true}
                                          >
                                            <ForwardRef(TouchRipple)
                                              center={true}
                                              classes={
                                                Object {
                                                  "child": "MuiTouchRipple-child",
                                                  "childLeaving": "MuiTouchRipple-childLeaving",
                                                  "childPulsate": "MuiTouchRipple-childPulsate",
                                                  "ripple": "MuiTouchRipple-ripple",
                                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                  "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                  "root": "MuiTouchRipple-root",
                                                }
                                              }
                                            >
                                              <span
                                                className="MuiTouchRipple-root"
                                              >
                                                <TransitionGroup
                                                  childFactory={[Function]}
                                                  component={null}
                                                  exit={true}
                                                />
                                              </span>
                                            </ForwardRef(TouchRipple)>
                                          </WithStyles(memo)>
                                        </button>
                                      </ForwardRef(ButtonBase)>
                                    </WithStyles(ForwardRef(ButtonBase))>
                                  </ForwardRef(IconButton)>
                                </WithStyles(ForwardRef(IconButton))>
                              </div>
                            </div>
                          </div>
                          <WithStyles(ForwardRef(IconButton))
                            aria-hidden={true}
                            className="MuiAccordionSummary-expandIcon"
                            component="div"
                            edge="end"
                            role={null}
                            tabIndex={null}
                          >
                            <ForwardRef(IconButton)
                              aria-hidden={true}
                              className="MuiAccordionSummary-expandIcon"
                              classes={
                                Object {
                                  "colorInherit": "MuiIconButton-colorInherit",
                                  "colorPrimary": "MuiIconButton-colorPrimary",
                                  "colorSecondary": "MuiIconButton-colorSecondary",
                                  "disabled": "Mui-disabled",
                                  "edgeEnd": "MuiIconButton-edgeEnd",
                                  "edgeStart": "MuiIconButton-edgeStart",
                                  "label": "MuiIconButton-label",
                                  "root": "MuiIconButton-root",
                                  "sizeSmall": "MuiIconButton-sizeSmall",
                                }
                              }
                              component="div"
                              edge="end"
                              role={null}
                              tabIndex={null}
                            >
                              <WithStyles(ForwardRef(ButtonBase))
                                aria-hidden={true}
                                centerRipple={true}
                                className="MuiIconButton-root MuiAccordionSummary-expandIcon MuiIconButton-edgeEnd"
                                component="div"
                                disabled={false}
                                focusRipple={true}
                                role={null}
                                tabIndex={null}
                              >
                                <ForwardRef(ButtonBase)
                                  aria-hidden={true}
                                  centerRipple={true}
                                  className="MuiIconButton-root MuiAccordionSummary-expandIcon MuiIconButton-edgeEnd"
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "focusVisible": "Mui-focusVisible",
                                      "root": "MuiButtonBase-root",
                                    }
                                  }
                                  component="div"
                                  disabled={false}
                                  focusRipple={true}
                                  role={null}
                                  tabIndex={null}
                                >
                                  <div
                                    aria-disabled={false}
                                    aria-hidden={true}
                                    className="MuiButtonBase-root MuiIconButton-root MuiAccordionSummary-expandIcon MuiIconButton-edgeEnd"
                                    onBlur={[Function]}
                                    onDragLeave={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    role={null}
                                    tabIndex={null}
                                  >
                                    <span
                                      className="MuiIconButton-label"
                                    >
                                      <ForwardRef(ExpandMoreIcon)
                                        className="ToDoListItem__Accordion_expandIcon"
                                      >
                                        <WithStyles(ForwardRef(SvgIcon))
                                          className="ToDoListItem__Accordion_expandIcon"
                                        >
                                          <ForwardRef(SvgIcon)
                                            className="ToDoListItem__Accordion_expandIcon"
                                            classes={
                                              Object {
                                                "colorAction": "MuiSvgIcon-colorAction",
                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                "colorError": "MuiSvgIcon-colorError",
                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                "root": "MuiSvgIcon-root",
                                              }
                                            }
                                          >
                                            <svg
                                              aria-hidden={true}
                                              className="MuiSvgIcon-root ToDoListItem__Accordion_expandIcon"
                                              focusable="false"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
                                              />
                                            </svg>
                                          </ForwardRef(SvgIcon)>
                                        </WithStyles(ForwardRef(SvgIcon))>
                                      </ForwardRef(ExpandMoreIcon)>
                                    </span>
                                    <WithStyles(memo)
                                      center={true}
                                    >
                                      <ForwardRef(TouchRipple)
                                        center={true}
                                        classes={
                                          Object {
                                            "child": "MuiTouchRipple-child",
                                            "childLeaving": "MuiTouchRipple-childLeaving",
                                            "childPulsate": "MuiTouchRipple-childPulsate",
                                            "ripple": "MuiTouchRipple-ripple",
                                            "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                            "rippleVisible": "MuiTouchRipple-rippleVisible",
                                            "root": "MuiTouchRipple-root",
                                          }
                                        }
                                      >
                                        <span
                                          className="MuiTouchRipple-root"
                                        >
                                          <TransitionGroup
                                            childFactory={[Function]}
                                            component={null}
                                            exit={true}
                                          />
                                        </span>
                                      </ForwardRef(TouchRipple)>
                                    </WithStyles(memo)>
                                  </div>
                                </ForwardRef(ButtonBase)>
                              </WithStyles(ForwardRef(ButtonBase))>
                            </ForwardRef(IconButton)>
                          </WithStyles(ForwardRef(IconButton))>
                        </div>
                      </ForwardRef(ButtonBase)>
                    </WithStyles(ForwardRef(ButtonBase))>
                  </ForwardRef(AccordionSummary)>
                </WithStyles(ForwardRef(AccordionSummary))>
                <WithStyles(ForwardRef(Collapse))
                  in={false}
                  timeout="auto"
                  unmountOnExit={true}
                >
                  <ForwardRef(Collapse)
                    classes={
                      Object {
                        "entered": "MuiCollapse-entered",
                        "hidden": "MuiCollapse-hidden",
                        "root": "MuiCollapse-root",
                        "wrapper": "MuiCollapse-wrapper",
                        "wrapperInner": "MuiCollapse-wrapperInner",
                      }
                    }
                    in={false}
                    timeout="auto"
                    unmountOnExit={true}
                  >
                    <Transition
                      addEndListener={[Function]}
                      appear={false}
                      enter={true}
                      exit={true}
                      in={false}
                      mountOnEnter={false}
                      onEnter={[Function]}
                      onEntered={[Function]}
                      onEntering={[Function]}
                      onExit={[Function]}
                      onExited={[Function]}
                      onExiting={[Function]}
                      timeout={null}
                      unmountOnExit={true}
                    />
                  </ForwardRef(Collapse)>
                </WithStyles(ForwardRef(Collapse))>
              </div>
            </ForwardRef(Paper)>
          </WithStyles(ForwardRef(Paper))>
        </ForwardRef(Accordion)>
      </WithStyles(ForwardRef(Accordion))>
    </Memo(ToDoListItem)>
  </Connect(Component)>
</Provider>
`;

exports[`Checking the deletion of a list 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(Component)>
    <Memo(Lists)
      addToDoListAC={[Function]}
      lists={
        Array [
          Object {
            "id": 1,
            "label": "Магазин",
            "toDoList": Array [],
          },
        ]
      }
      updateActiveTodoListIdAC={[Function]}
    >
      <div
        className="lists__close-wrapper null"
        onClick={[Function]}
      />
      <div
        className="lists null"
      >
        <input
          checked={false}
          className="hidden-menu-ticker"
          id="hmt"
          readOnly={true}
          type="checkbox"
        />
        <label
          className="btn-menu toggleMenu null"
          htmlFor="hmt"
          onClick={[Function]}
        >
          <span
            className="first"
          />
          <span
            className="second"
          />
          <span
            className="third"
          />
        </label>
        <h1
          className="lists_main"
          onClick={[Function]}
        >
          <ForwardRef(HomeIcon)>
            <WithStyles(ForwardRef(SvgIcon))>
              <ForwardRef(SvgIcon)
                classes={
                  Object {
                    "colorAction": "MuiSvgIcon-colorAction",
                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                    "colorError": "MuiSvgIcon-colorError",
                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                    "root": "MuiSvgIcon-root",
                  }
                }
              >
                <svg
                  aria-hidden={true}
                  className="MuiSvgIcon-root"
                  focusable="false"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z"
                  />
                </svg>
              </ForwardRef(SvgIcon)>
            </WithStyles(ForwardRef(SvgIcon))>
          </ForwardRef(HomeIcon)>
          <span>
            Главная
          </span>
        </h1>
        <h2
          className="lists__title"
        >
          <ForwardRef(FormatListBulletedIcon)>
            <WithStyles(ForwardRef(SvgIcon))>
              <ForwardRef(SvgIcon)
                classes={
                  Object {
                    "colorAction": "MuiSvgIcon-colorAction",
                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                    "colorError": "MuiSvgIcon-colorError",
                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                    "root": "MuiSvgIcon-root",
                  }
                }
              >
                <svg
                  aria-hidden={true}
                  className="MuiSvgIcon-root"
                  focusable="false"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M4 10.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm0-6c-.83 0-1.5.67-1.5 1.5S3.17 7.5 4 7.5 5.5 6.83 5.5 6 4.83 4.5 4 4.5zm0 12c-.83 0-1.5.68-1.5 1.5s.68 1.5 1.5 1.5 1.5-.68 1.5-1.5-.67-1.5-1.5-1.5zM7 19h14v-2H7v2zm0-6h14v-2H7v2zm0-8v2h14V5H7z"
                  />
                </svg>
              </ForwardRef(SvgIcon)>
            </WithStyles(ForwardRef(SvgIcon))>
          </ForwardRef(FormatListBulletedIcon)>
          <span>
            Списки:
          </span>
        </h2>
        <div
          className="lists__renderList null"
        >
          <Connect(Component)
            id={1}
            key="1"
            label="Магазин"
            needsDone={0}
            toggleDrawer={[Function]}
          >
            <Memo(List)
              activeToDoListId={null}
              deleteToDoListAC={[Function]}
              id={1}
              label="Магазин"
              needsDone={0}
              toggleDrawer={[Function]}
              updateActiveTodoListIdAC={[Function]}
              updateToDoListLabelAC={[Function]}
            >
              <div>
                <WithStyles(ForwardRef(ListItem))
                  button={true}
                  className="list__item"
                  onClick={[Function]}
                >
                  <ForwardRef(ListItem)
                    button={true}
                    className="list__item"
                    classes={
                      Object {
                        "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                        "button": "MuiListItem-button",
                        "container": "MuiListItem-container",
                        "dense": "MuiListItem-dense",
                        "disabled": "Mui-disabled",
                        "divider": "MuiListItem-divider",
                        "focusVisible": "Mui-focusVisible",
                        "gutters": "MuiListItem-gutters",
                        "root": "MuiListItem-root",
                        "secondaryAction": "MuiListItem-secondaryAction",
                        "selected": "Mui-selected",
                      }
                    }
                    onClick={[Function]}
                  >
                    <WithStyles(ForwardRef(ButtonBase))
                      className="MuiListItem-root list__item MuiListItem-gutters MuiListItem-button"
                      component="div"
                      disabled={false}
                      focusVisibleClassName="Mui-focusVisible"
                      onClick={[Function]}
                    >
                      <ForwardRef(ButtonBase)
                        className="MuiListItem-root list__item MuiListItem-gutters MuiListItem-button"
                        classes={
                          Object {
                            "disabled": "Mui-disabled",
                            "focusVisible": "Mui-focusVisible",
                            "root": "MuiButtonBase-root",
                          }
                        }
                        component="div"
                        disabled={false}
                        focusVisibleClassName="Mui-focusVisible"
                        onClick={[Function]}
                      >
                        <div
                          aria-disabled={false}
                          className="MuiButtonBase-root MuiListItem-root list__item MuiListItem-gutters MuiListItem-button"
                          onBlur={[Function]}
                          onClick={[Function]}
                          onDragLeave={[Function]}
                          onFocus={[Function]}
                          onKeyDown={[Function]}
                          onKeyUp={[Function]}
                          onMouseDown={[Function]}
                          onMouseLeave={[Function]}
                          onMouseUp={[Function]}
                          onTouchEnd={[Function]}
                          onTouchMove={[Function]}
                          onTouchStart={[Function]}
                          role="button"
                          tabIndex={0}
                        >
                          <div
                            key=".0"
                          >
                            Магазин
                          </div>
                          <div
                            className="list__wrapper__list__buttonMenu"
                            key=".1"
                          >
                            <WithStyles(ForwardRef(IconButton))
                              aria-controls="simple-menu"
                              aria-haspopup="true"
                              className="list__buttonMenu"
                              onClick={[Function]}
                            >
                              <ForwardRef(IconButton)
                                aria-controls="simple-menu"
                                aria-haspopup="true"
                                className="list__buttonMenu"
                                classes={
                                  Object {
                                    "colorInherit": "MuiIconButton-colorInherit",
                                    "colorPrimary": "MuiIconButton-colorPrimary",
                                    "colorSecondary": "MuiIconButton-colorSecondary",
                                    "disabled": "Mui-disabled",
                                    "edgeEnd": "MuiIconButton-edgeEnd",
                                    "edgeStart": "MuiIconButton-edgeStart",
                                    "label": "MuiIconButton-label",
                                    "root": "MuiIconButton-root",
                                    "sizeSmall": "MuiIconButton-sizeSmall",
                                  }
                                }
                                onClick={[Function]}
                              >
                                <WithStyles(ForwardRef(ButtonBase))
                                  aria-controls="simple-menu"
                                  aria-haspopup="true"
                                  centerRipple={true}
                                  className="MuiIconButton-root list__buttonMenu"
                                  disabled={false}
                                  focusRipple={true}
                                  onClick={[Function]}
                                >
                                  <ForwardRef(ButtonBase)
                                    aria-controls="simple-menu"
                                    aria-haspopup="true"
                                    centerRipple={true}
                                    className="MuiIconButton-root list__buttonMenu"
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "focusVisible": "Mui-focusVisible",
                                        "root": "MuiButtonBase-root",
                                      }
                                    }
                                    disabled={false}
                                    focusRipple={true}
                                    onClick={[Function]}
                                  >
                                    <button
                                      aria-controls="simple-menu"
                                      aria-haspopup="true"
                                      className="MuiButtonBase-root MuiIconButton-root list__buttonMenu"
                                      disabled={false}
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={0}
                                      type="button"
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <ForwardRef(MoreVertIcon)>
                                          <WithStyles(ForwardRef(SvgIcon))>
                                            <ForwardRef(SvgIcon)
                                              classes={
                                                Object {
                                                  "colorAction": "MuiSvgIcon-colorAction",
                                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                  "colorError": "MuiSvgIcon-colorError",
                                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                  "root": "MuiSvgIcon-root",
                                                }
                                              }
                                            >
                                              <svg
                                                aria-hidden={true}
                                                className="MuiSvgIcon-root"
                                                focusable="false"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                                />
                                              </svg>
                                            </ForwardRef(SvgIcon)>
                                          </WithStyles(ForwardRef(SvgIcon))>
                                        </ForwardRef(MoreVertIcon)>
                                      </span>
                                      <WithStyles(memo)
                                        center={true}
                                      >
                                        <ForwardRef(TouchRipple)
                                          center={true}
                                          classes={
                                            Object {
                                              "child": "MuiTouchRipple-child",
                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                              "ripple": "MuiTouchRipple-ripple",
                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                              "root": "MuiTouchRipple-root",
                                            }
                                          }
                                        >
                                          <span
                                            className="MuiTouchRipple-root"
                                          >
                                            <TransitionGroup
                                              childFactory={[Function]}
                                              component={null}
                                              exit={true}
                                            />
                                          </span>
                                        </ForwardRef(TouchRipple)>
                                      </WithStyles(memo)>
                                    </button>
                                  </ForwardRef(ButtonBase)>
                                </WithStyles(ForwardRef(ButtonBase))>
                              </ForwardRef(IconButton)>
                            </WithStyles(ForwardRef(IconButton))>
                            <WithStyles(ForwardRef(Menu))
                              TransitionComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "propTypes": Object {
                                    "children": [Function],
                                    "disableStrictModeCompat": [Function],
                                    "in": [Function],
                                    "onEnter": [Function],
                                    "onEntered": [Function],
                                    "onEntering": [Function],
                                    "onExit": [Function],
                                    "onExited": [Function],
                                    "onExiting": [Function],
                                    "style": [Function],
                                    "timeout": [Function],
                                  },
                                  "render": [Function],
                                }
                              }
                              anchorEl={null}
                              id="simple-menu"
                              keepMounted={true}
                              onClose={[Function]}
                              open={false}
                            >
                              <ForwardRef(Menu)
                                TransitionComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "propTypes": Object {
                                      "children": [Function],
                                      "disableStrictModeCompat": [Function],
                                      "in": [Function],
                                      "onEnter": [Function],
                                      "onEntered": [Function],
                                      "onEntering": [Function],
                                      "onExit": [Function],
                                      "onExited": [Function],
                                      "onExiting": [Function],
                                      "style": [Function],
                                      "timeout": [Function],
                                    },
                                    "render": [Function],
                                  }
                                }
                                anchorEl={null}
                                classes={
                                  Object {
                                    "list": "MuiMenu-list",
                                    "paper": "MuiMenu-paper",
                                  }
                                }
                                id="simple-menu"
                                keepMounted={true}
                                onClose={[Function]}
                                open={false}
                              >
                                <WithStyles(ForwardRef(Popover))
                                  PaperProps={
                                    Object {
                                      "classes": Object {
                                        "root": "MuiMenu-paper",
                                      },
                                    }
                                  }
                                  TransitionComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "propTypes": Object {
                                        "children": [Function],
                                        "disableStrictModeCompat": [Function],
                                        "in": [Function],
                                        "onEnter": [Function],
                                        "onEntered": [Function],
                                        "onEntering": [Function],
                                        "onExit": [Function],
                                        "onExited": [Function],
                                        "onExiting": [Function],
                                        "style": [Function],
                                        "timeout": [Function],
                                      },
                                      "render": [Function],
                                    }
                                  }
                                  TransitionProps={
                                    Object {
                                      "onEntering": [Function],
                                    }
                                  }
                                  anchorEl={null}
                                  anchorOrigin={
                                    Object {
                                      "horizontal": "left",
                                      "vertical": "top",
                                    }
                                  }
                                  getContentAnchorEl={[Function]}
                                  id="simple-menu"
                                  keepMounted={true}
                                  onClose={[Function]}
                                  open={false}
                                  transformOrigin={
                                    Object {
                                      "horizontal": "left",
                                      "vertical": "top",
                                    }
                                  }
                                  transitionDuration="auto"
                                >
                                  <ForwardRef(Popover)
                                    PaperProps={
                                      Object {
                                        "classes": Object {
                                          "root": "MuiMenu-paper",
                                        },
                                      }
                                    }
                                    TransitionComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "propTypes": Object {
                                          "children": [Function],
                                          "disableStrictModeCompat": [Function],
                                          "in": [Function],
                                          "onEnter": [Function],
                                          "onEntered": [Function],
                                          "onEntering": [Function],
                                          "onExit": [Function],
                                          "onExited": [Function],
                                          "onExiting": [Function],
                                          "style": [Function],
                                          "timeout": [Function],
                                        },
                                        "render": [Function],
                                      }
                                    }
                                    TransitionProps={
                                      Object {
                                        "onEntering": [Function],
                                      }
                                    }
                                    anchorEl={null}
                                    anchorOrigin={
                                      Object {
                                        "horizontal": "left",
                                        "vertical": "top",
                                      }
                                    }
                                    classes={
                                      Object {
                                        "paper": "MuiPopover-paper",
                                        "root": "MuiPopover-root",
                                      }
                                    }
                                    getContentAnchorEl={[Function]}
                                    id="simple-menu"
                                    keepMounted={true}
                                    onClose={[Function]}
                                    open={false}
                                    transformOrigin={
                                      Object {
                                        "horizontal": "left",
                                        "vertical": "top",
                                      }
                                    }
                                    transitionDuration="auto"
                                  >
                                    <ForwardRef(Modal)
                                      BackdropProps={
                                        Object {
                                          "invisible": true,
                                        }
                                      }
                                      className="MuiPopover-root"
                                      id="simple-menu"
                                      keepMounted={true}
                                      onClose={[Function]}
                                      open={false}
                                    >
                                      <ForwardRef(Portal)
                                        disablePortal={false}
                                      >
                                        <Portal
                                          containerInfo={
                                            <body
                                              style=""
                                            >
                                              <div
                                                aria-hidden="true"
                                                class="MuiPopover-root"
                                                id="simple-menu"
                                                role="presentation"
                                                style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px; visibility: hidden;"
                                              >
                                                <div
                                                  data-test="sentinelStart"
                                                  tabindex="0"
                                                />
                                                <div
                                                  class="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                                  style="opacity: 0; visibility: hidden;"
                                                  tabindex="-1"
                                                >
                                                  <ul
                                                    class="MuiList-root MuiMenu-list MuiList-padding"
                                                    role="menu"
                                                    tabindex="-1"
                                                  >
                                                    <li
                                                      aria-disabled="false"
                                                      class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_edit MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                      role="menuitem"
                                                      tabindex="0"
                                                    >
                                                      Редактировать
                                                      <span
                                                        class="MuiTouchRipple-root"
                                                      />
                                                    </li>
                                                    <li
                                                      aria-disabled="false"
                                                      class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_delete MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                      role="menuitem"
                                                      tabindex="-1"
                                                    >
                                                      Удалить
                                                      <span
                                                        class="MuiTouchRipple-root"
                                                      />
                                                    </li>
                                                  </ul>
                                                </div>
                                                <div
                                                  data-test="sentinelEnd"
                                                  tabindex="0"
                                                />
                                              </div>
                                              <div
                                                aria-hidden="true"
                                                class="MuiPopover-root"
                                                id="simple-menu"
                                                role="presentation"
                                                style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px; visibility: hidden;"
                                              >
                                                <div
                                                  data-test="sentinelStart"
                                                  tabindex="0"
                                                />
                                                <div
                                                  class="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                                  style="opacity: 0; visibility: hidden;"
                                                  tabindex="-1"
                                                >
                                                  <ul
                                                    class="MuiList-root MuiMenu-list MuiList-padding"
                                                    role="menu"
                                                    tabindex="-1"
                                                  >
                                                    <li
                                                      aria-disabled="false"
                                                      class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_edit MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                      role="menuitem"
                                                      tabindex="0"
                                                    >
                                                      Редактировать
                                                      <span
                                                        class="MuiTouchRipple-root"
                                                      />
                                                    </li>
                                                    <li
                                                      aria-disabled="false"
                                                      class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_delete MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                      role="menuitem"
                                                      tabindex="-1"
                                                    >
                                                      Удалить
                                                      <span
                                                        class="MuiTouchRipple-root"
                                                      />
                                                    </li>
                                                  </ul>
                                                </div>
                                                <div
                                                  data-test="sentinelEnd"
                                                  tabindex="0"
                                                />
                                              </div>
                                            </body>
                                          }
                                        >
                                          <div
                                            className="MuiPopover-root"
                                            id="simple-menu"
                                            onKeyDown={[Function]}
                                            role="presentation"
                                            style={
                                              Object {
                                                "bottom": 0,
                                                "left": 0,
                                                "position": "fixed",
                                                "right": 0,
                                                "top": 0,
                                                "visibility": "hidden",
                                                "zIndex": 1300,
                                              }
                                            }
                                          >
                                            <ForwardRef(SimpleBackdrop)
                                              invisible={true}
                                              onClick={[Function]}
                                              open={false}
                                            />
                                            <Unstable_TrapFocus
                                              disableAutoFocus={false}
                                              disableEnforceFocus={false}
                                              disableRestoreFocus={false}
                                              getDoc={[Function]}
                                              isEnabled={[Function]}
                                              open={false}
                                            >
                                              <div
                                                data-test="sentinelStart"
                                                tabIndex={0}
                                              />
                                              <ForwardRef(Fade)
                                                appear={true}
                                                in={false}
                                                onEnter={[Function]}
                                                onEntering={[Function]}
                                                onExited={[Function]}
                                                tabIndex="-1"
                                              >
                                                <Transition
                                                  appear={true}
                                                  enter={true}
                                                  exit={true}
                                                  in={false}
                                                  mountOnEnter={false}
                                                  onEnter={[Function]}
                                                  onEntered={[Function]}
                                                  onEntering={[Function]}
                                                  onExit={[Function]}
                                                  onExited={[Function]}
                                                  onExiting={[Function]}
                                                  tabIndex="-1"
                                                  timeout={
                                                    Object {
                                                      "enter": 225,
                                                      "exit": 195,
                                                    }
                                                  }
                                                  unmountOnExit={false}
                                                >
                                                  <WithStyles(ForwardRef(Paper))
                                                    className="MuiPopover-paper"
                                                    classes={
                                                      Object {
                                                        "root": "MuiMenu-paper",
                                                      }
                                                    }
                                                    elevation={8}
                                                    style={
                                                      Object {
                                                        "opacity": 0,
                                                        "visibility": "hidden",
                                                      }
                                                    }
                                                    tabIndex="-1"
                                                  >
                                                    <ForwardRef(Paper)
                                                      className="MuiPopover-paper"
                                                      classes={
                                                        Object {
                                                          "elevation0": "MuiPaper-elevation0",
                                                          "elevation1": "MuiPaper-elevation1",
                                                          "elevation10": "MuiPaper-elevation10",
                                                          "elevation11": "MuiPaper-elevation11",
                                                          "elevation12": "MuiPaper-elevation12",
                                                          "elevation13": "MuiPaper-elevation13",
                                                          "elevation14": "MuiPaper-elevation14",
                                                          "elevation15": "MuiPaper-elevation15",
                                                          "elevation16": "MuiPaper-elevation16",
                                                          "elevation17": "MuiPaper-elevation17",
                                                          "elevation18": "MuiPaper-elevation18",
                                                          "elevation19": "MuiPaper-elevation19",
                                                          "elevation2": "MuiPaper-elevation2",
                                                          "elevation20": "MuiPaper-elevation20",
                                                          "elevation21": "MuiPaper-elevation21",
                                                          "elevation22": "MuiPaper-elevation22",
                                                          "elevation23": "MuiPaper-elevation23",
                                                          "elevation24": "MuiPaper-elevation24",
                                                          "elevation3": "MuiPaper-elevation3",
                                                          "elevation4": "MuiPaper-elevation4",
                                                          "elevation5": "MuiPaper-elevation5",
                                                          "elevation6": "MuiPaper-elevation6",
                                                          "elevation7": "MuiPaper-elevation7",
                                                          "elevation8": "MuiPaper-elevation8",
                                                          "elevation9": "MuiPaper-elevation9",
                                                          "outlined": "MuiPaper-outlined",
                                                          "root": "MuiPaper-root MuiMenu-paper",
                                                          "rounded": "MuiPaper-rounded",
                                                        }
                                                      }
                                                      elevation={8}
                                                      style={
                                                        Object {
                                                          "opacity": 0,
                                                          "visibility": "hidden",
                                                        }
                                                      }
                                                      tabIndex="-1"
                                                    >
                                                      <div
                                                        className="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                                        style={
                                                          Object {
                                                            "opacity": 0,
                                                            "visibility": "hidden",
                                                          }
                                                        }
                                                        tabIndex="-1"
                                                      >
                                                        <ForwardRef(MenuList)
                                                          actions={
                                                            Object {
                                                              "current": Object {
                                                                "adjustStyleForScrollbar": [Function],
                                                              },
                                                            }
                                                          }
                                                          autoFocus={false}
                                                          autoFocusItem={false}
                                                          className="MuiMenu-list"
                                                          onKeyDown={[Function]}
                                                          variant="selectedMenu"
                                                        >
                                                          <WithStyles(ForwardRef(List))
                                                            className="MuiMenu-list"
                                                            onKeyDown={[Function]}
                                                            role="menu"
                                                            tabIndex={-1}
                                                          >
                                                            <ForwardRef(List)
                                                              className="MuiMenu-list"
                                                              classes={
                                                                Object {
                                                                  "dense": "MuiList-dense",
                                                                  "padding": "MuiList-padding",
                                                                  "root": "MuiList-root",
                                                                  "subheader": "MuiList-subheader",
                                                                }
                                                              }
                                                              onKeyDown={[Function]}
                                                              role="menu"
                                                              tabIndex={-1}
                                                            >
                                                              <ul
                                                                className="MuiList-root MuiMenu-list MuiList-padding"
                                                                onKeyDown={[Function]}
                                                                role="menu"
                                                                tabIndex={-1}
                                                              >
                                                                <WithStyles(ForwardRef(MenuItem))
                                                                  className="ListItem_edit"
                                                                  key=".$.0"
                                                                  onClick={[Function]}
                                                                  tabIndex={0}
                                                                >
                                                                  <ForwardRef(MenuItem)
                                                                    className="ListItem_edit"
                                                                    classes={
                                                                      Object {
                                                                        "dense": "MuiMenuItem-dense",
                                                                        "gutters": "MuiMenuItem-gutters",
                                                                        "root": "MuiMenuItem-root",
                                                                        "selected": "Mui-selected",
                                                                      }
                                                                    }
                                                                    onClick={[Function]}
                                                                    tabIndex={0}
                                                                  >
                                                                    <WithStyles(ForwardRef(ListItem))
                                                                      button={true}
                                                                      className="MuiMenuItem-root ListItem_edit MuiMenuItem-gutters"
                                                                      classes={
                                                                        Object {
                                                                          "dense": "MuiMenuItem-dense",
                                                                        }
                                                                      }
                                                                      component="li"
                                                                      disableGutters={false}
                                                                      onClick={[Function]}
                                                                      role="menuitem"
                                                                      tabIndex={0}
                                                                    >
                                                                      <ForwardRef(ListItem)
                                                                        button={true}
                                                                        className="MuiMenuItem-root ListItem_edit MuiMenuItem-gutters"
                                                                        classes={
                                                                          Object {
                                                                            "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                                            "button": "MuiListItem-button",
                                                                            "container": "MuiListItem-container",
                                                                            "dense": "MuiListItem-dense MuiMenuItem-dense",
                                                                            "disabled": "Mui-disabled",
                                                                            "divider": "MuiListItem-divider",
                                                                            "focusVisible": "Mui-focusVisible",
                                                                            "gutters": "MuiListItem-gutters",
                                                                            "root": "MuiListItem-root",
                                                                            "secondaryAction": "MuiListItem-secondaryAction",
                                                                            "selected": "Mui-selected",
                                                                          }
                                                                        }
                                                                        component="li"
                                                                        disableGutters={false}
                                                                        onClick={[Function]}
                                                                        role="menuitem"
                                                                        tabIndex={0}
                                                                      >
                                                                        <WithStyles(ForwardRef(ButtonBase))
                                                                          className="MuiListItem-root MuiMenuItem-root ListItem_edit MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                          component="li"
                                                                          disabled={false}
                                                                          focusVisibleClassName="Mui-focusVisible"
                                                                          onClick={[Function]}
                                                                          role="menuitem"
                                                                          tabIndex={0}
                                                                        >
                                                                          <ForwardRef(ButtonBase)
                                                                            className="MuiListItem-root MuiMenuItem-root ListItem_edit MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                            classes={
                                                                              Object {
                                                                                "disabled": "Mui-disabled",
                                                                                "focusVisible": "Mui-focusVisible",
                                                                                "root": "MuiButtonBase-root",
                                                                              }
                                                                            }
                                                                            component="li"
                                                                            disabled={false}
                                                                            focusVisibleClassName="Mui-focusVisible"
                                                                            onClick={[Function]}
                                                                            role="menuitem"
                                                                            tabIndex={0}
                                                                          >
                                                                            <li
                                                                              aria-disabled={false}
                                                                              className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_edit MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                              onBlur={[Function]}
                                                                              onClick={[Function]}
                                                                              onDragLeave={[Function]}
                                                                              onFocus={[Function]}
                                                                              onKeyDown={[Function]}
                                                                              onKeyUp={[Function]}
                                                                              onMouseDown={[Function]}
                                                                              onMouseLeave={[Function]}
                                                                              onMouseUp={[Function]}
                                                                              onTouchEnd={[Function]}
                                                                              onTouchMove={[Function]}
                                                                              onTouchStart={[Function]}
                                                                              role="menuitem"
                                                                              tabIndex={0}
                                                                            >
                                                                              Редактировать
                                                                              <WithStyles(memo)
                                                                                center={false}
                                                                              >
                                                                                <ForwardRef(TouchRipple)
                                                                                  center={false}
                                                                                  classes={
                                                                                    Object {
                                                                                      "child": "MuiTouchRipple-child",
                                                                                      "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                      "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                      "ripple": "MuiTouchRipple-ripple",
                                                                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                      "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                      "root": "MuiTouchRipple-root",
                                                                                    }
                                                                                  }
                                                                                >
                                                                                  <span
                                                                                    className="MuiTouchRipple-root"
                                                                                  >
                                                                                    <TransitionGroup
                                                                                      childFactory={[Function]}
                                                                                      component={null}
                                                                                      exit={true}
                                                                                    />
                                                                                  </span>
                                                                                </ForwardRef(TouchRipple)>
                                                                              </WithStyles(memo)>
                                                                            </li>
                                                                          </ForwardRef(ButtonBase)>
                                                                        </WithStyles(ForwardRef(ButtonBase))>
                                                                      </ForwardRef(ListItem)>
                                                                    </WithStyles(ForwardRef(ListItem))>
                                                                  </ForwardRef(MenuItem)>
                                                                </WithStyles(ForwardRef(MenuItem))>
                                                                <WithStyles(ForwardRef(MenuItem))
                                                                  className="ListItem_delete"
                                                                  key=".$.1"
                                                                  onClick={[Function]}
                                                                >
                                                                  <ForwardRef(MenuItem)
                                                                    className="ListItem_delete"
                                                                    classes={
                                                                      Object {
                                                                        "dense": "MuiMenuItem-dense",
                                                                        "gutters": "MuiMenuItem-gutters",
                                                                        "root": "MuiMenuItem-root",
                                                                        "selected": "Mui-selected",
                                                                      }
                                                                    }
                                                                    onClick={[Function]}
                                                                  >
                                                                    <WithStyles(ForwardRef(ListItem))
                                                                      button={true}
                                                                      className="MuiMenuItem-root ListItem_delete MuiMenuItem-gutters"
                                                                      classes={
                                                                        Object {
                                                                          "dense": "MuiMenuItem-dense",
                                                                        }
                                                                      }
                                                                      component="li"
                                                                      disableGutters={false}
                                                                      onClick={[Function]}
                                                                      role="menuitem"
                                                                      tabIndex={-1}
                                                                    >
                                                                      <ForwardRef(ListItem)
                                                                        button={true}
                                                                        className="MuiMenuItem-root ListItem_delete MuiMenuItem-gutters"
                                                                        classes={
                                                                          Object {
                                                                            "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                                            "button": "MuiListItem-button",
                                                                            "container": "MuiListItem-container",
                                                                            "dense": "MuiListItem-dense MuiMenuItem-dense",
                                                                            "disabled": "Mui-disabled",
                                                                            "divider": "MuiListItem-divider",
                                                                            "focusVisible": "Mui-focusVisible",
                                                                            "gutters": "MuiListItem-gutters",
                                                                            "root": "MuiListItem-root",
                                                                            "secondaryAction": "MuiListItem-secondaryAction",
                                                                            "selected": "Mui-selected",
                                                                          }
                                                                        }
                                                                        component="li"
                                                                        disableGutters={false}
                                                                        onClick={[Function]}
                                                                        role="menuitem"
                                                                        tabIndex={-1}
                                                                      >
                                                                        <WithStyles(ForwardRef(ButtonBase))
                                                                          className="MuiListItem-root MuiMenuItem-root ListItem_delete MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                          component="li"
                                                                          disabled={false}
                                                                          focusVisibleClassName="Mui-focusVisible"
                                                                          onClick={[Function]}
                                                                          role="menuitem"
                                                                          tabIndex={-1}
                                                                        >
                                                                          <ForwardRef(ButtonBase)
                                                                            className="MuiListItem-root MuiMenuItem-root ListItem_delete MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                            classes={
                                                                              Object {
                                                                                "disabled": "Mui-disabled",
                                                                                "focusVisible": "Mui-focusVisible",
                                                                                "root": "MuiButtonBase-root",
                                                                              }
                                                                            }
                                                                            component="li"
                                                                            disabled={false}
                                                                            focusVisibleClassName="Mui-focusVisible"
                                                                            onClick={[Function]}
                                                                            role="menuitem"
                                                                            tabIndex={-1}
                                                                          >
                                                                            <li
                                                                              aria-disabled={false}
                                                                              className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_delete MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                              onBlur={[Function]}
                                                                              onClick={[Function]}
                                                                              onDragLeave={[Function]}
                                                                              onFocus={[Function]}
                                                                              onKeyDown={[Function]}
                                                                              onKeyUp={[Function]}
                                                                              onMouseDown={[Function]}
                                                                              onMouseLeave={[Function]}
                                                                              onMouseUp={[Function]}
                                                                              onTouchEnd={[Function]}
                                                                              onTouchMove={[Function]}
                                                                              onTouchStart={[Function]}
                                                                              role="menuitem"
                                                                              tabIndex={-1}
                                                                            >
                                                                              Удалить
                                                                              <WithStyles(memo)
                                                                                center={false}
                                                                              >
                                                                                <ForwardRef(TouchRipple)
                                                                                  center={false}
                                                                                  classes={
                                                                                    Object {
                                                                                      "child": "MuiTouchRipple-child",
                                                                                      "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                      "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                      "ripple": "MuiTouchRipple-ripple",
                                                                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                      "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                      "root": "MuiTouchRipple-root",
                                                                                    }
                                                                                  }
                                                                                >
                                                                                  <span
                                                                                    className="MuiTouchRipple-root"
                                                                                  >
                                                                                    <TransitionGroup
                                                                                      childFactory={[Function]}
                                                                                      component={null}
                                                                                      exit={true}
                                                                                    />
                                                                                  </span>
                                                                                </ForwardRef(TouchRipple)>
                                                                              </WithStyles(memo)>
                                                                            </li>
                                                                          </ForwardRef(ButtonBase)>
                                                                        </WithStyles(ForwardRef(ButtonBase))>
                                                                      </ForwardRef(ListItem)>
                                                                    </WithStyles(ForwardRef(ListItem))>
                                                                  </ForwardRef(MenuItem)>
                                                                </WithStyles(ForwardRef(MenuItem))>
                                                              </ul>
                                                            </ForwardRef(List)>
                                                          </WithStyles(ForwardRef(List))>
                                                        </ForwardRef(MenuList)>
                                                      </div>
                                                    </ForwardRef(Paper)>
                                                  </WithStyles(ForwardRef(Paper))>
                                                </Transition>
                                              </ForwardRef(Fade)>
                                              <div
                                                data-test="sentinelEnd"
                                                tabIndex={0}
                                              />
                                            </Unstable_TrapFocus>
                                          </div>
                                        </Portal>
                                      </ForwardRef(Portal)>
                                    </ForwardRef(Modal)>
                                  </ForwardRef(Popover)>
                                </WithStyles(ForwardRef(Popover))>
                              </ForwardRef(Menu)>
                            </WithStyles(ForwardRef(Menu))>
                          </div>
                          <WithStyles(memo)
                            center={false}
                          >
                            <ForwardRef(TouchRipple)
                              center={false}
                              classes={
                                Object {
                                  "child": "MuiTouchRipple-child",
                                  "childLeaving": "MuiTouchRipple-childLeaving",
                                  "childPulsate": "MuiTouchRipple-childPulsate",
                                  "ripple": "MuiTouchRipple-ripple",
                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                  "rippleVisible": "MuiTouchRipple-rippleVisible",
                                  "root": "MuiTouchRipple-root",
                                }
                              }
                            >
                              <span
                                className="MuiTouchRipple-root"
                              >
                                <TransitionGroup
                                  childFactory={[Function]}
                                  component={null}
                                  exit={true}
                                />
                              </span>
                            </ForwardRef(TouchRipple)>
                          </WithStyles(memo)>
                        </div>
                      </ForwardRef(ButtonBase)>
                    </WithStyles(ForwardRef(ButtonBase))>
                  </ForwardRef(ListItem)>
                </WithStyles(ForwardRef(ListItem))>
              </div>
            </Memo(List)>
          </Connect(Component)>
        </div>
        <div
          className="lists__addListButton"
          onClick={[Function]}
        >
          <WithStyles(ForwardRef(IconButton))
            aria-label="add List"
            color="inherit"
          >
            <ForwardRef(IconButton)
              aria-label="add List"
              classes={
                Object {
                  "colorInherit": "MuiIconButton-colorInherit",
                  "colorPrimary": "MuiIconButton-colorPrimary",
                  "colorSecondary": "MuiIconButton-colorSecondary",
                  "disabled": "Mui-disabled",
                  "edgeEnd": "MuiIconButton-edgeEnd",
                  "edgeStart": "MuiIconButton-edgeStart",
                  "label": "MuiIconButton-label",
                  "root": "MuiIconButton-root",
                  "sizeSmall": "MuiIconButton-sizeSmall",
                }
              }
              color="inherit"
            >
              <WithStyles(ForwardRef(ButtonBase))
                aria-label="add List"
                centerRipple={true}
                className="MuiIconButton-root MuiIconButton-colorInherit"
                disabled={false}
                focusRipple={true}
              >
                <ForwardRef(ButtonBase)
                  aria-label="add List"
                  centerRipple={true}
                  className="MuiIconButton-root MuiIconButton-colorInherit"
                  classes={
                    Object {
                      "disabled": "Mui-disabled",
                      "focusVisible": "Mui-focusVisible",
                      "root": "MuiButtonBase-root",
                    }
                  }
                  disabled={false}
                  focusRipple={true}
                >
                  <button
                    aria-label="add List"
                    className="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit"
                    disabled={false}
                    onBlur={[Function]}
                    onDragLeave={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    onKeyUp={[Function]}
                    onMouseDown={[Function]}
                    onMouseLeave={[Function]}
                    onMouseUp={[Function]}
                    onTouchEnd={[Function]}
                    onTouchMove={[Function]}
                    onTouchStart={[Function]}
                    tabIndex={0}
                    type="button"
                  >
                    <span
                      className="MuiIconButton-label"
                    >
                      <ForwardRef(PlaylistAddIcon)
                        fontSize="medium"
                      >
                        <WithStyles(ForwardRef(SvgIcon))
                          fontSize="medium"
                        >
                          <ForwardRef(SvgIcon)
                            classes={
                              Object {
                                "colorAction": "MuiSvgIcon-colorAction",
                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                "colorError": "MuiSvgIcon-colorError",
                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                "root": "MuiSvgIcon-root",
                              }
                            }
                            fontSize="medium"
                          >
                            <svg
                              aria-hidden={true}
                              className="MuiSvgIcon-root"
                              focusable="false"
                              viewBox="0 0 24 24"
                            >
                              <path
                                d="M14 10H2v2h12v-2zm0-4H2v2h12V6zm4 8v-4h-2v4h-4v2h4v4h2v-4h4v-2h-4zM2 16h8v-2H2v2z"
                              />
                            </svg>
                          </ForwardRef(SvgIcon)>
                        </WithStyles(ForwardRef(SvgIcon))>
                      </ForwardRef(PlaylistAddIcon)>
                    </span>
                    <WithStyles(memo)
                      center={true}
                    >
                      <ForwardRef(TouchRipple)
                        center={true}
                        classes={
                          Object {
                            "child": "MuiTouchRipple-child",
                            "childLeaving": "MuiTouchRipple-childLeaving",
                            "childPulsate": "MuiTouchRipple-childPulsate",
                            "ripple": "MuiTouchRipple-ripple",
                            "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                            "rippleVisible": "MuiTouchRipple-rippleVisible",
                            "root": "MuiTouchRipple-root",
                          }
                        }
                      >
                        <span
                          className="MuiTouchRipple-root"
                        >
                          <TransitionGroup
                            childFactory={[Function]}
                            component={null}
                            exit={true}
                          />
                        </span>
                      </ForwardRef(TouchRipple)>
                    </WithStyles(memo)>
                  </button>
                </ForwardRef(ButtonBase)>
              </WithStyles(ForwardRef(ButtonBase))>
            </ForwardRef(IconButton)>
          </WithStyles(ForwardRef(IconButton))>
          <span>
            Добавить список
          </span>
        </div>
      </div>
    </Memo(Lists)>
  </Connect(Component)>
</Provider>
`;

exports[`Checking the deletion of a list 2`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(Component)>
    <Memo(Lists)
      addToDoListAC={[Function]}
      lists={
        Array [
          Object {
            "id": 1,
            "label": "Магазин",
            "toDoList": Array [],
          },
        ]
      }
      updateActiveTodoListIdAC={[Function]}
    >
      <div
        className="lists__close-wrapper null"
        onClick={[Function]}
      />
      <div
        className="lists null"
      >
        <input
          checked={false}
          className="hidden-menu-ticker"
          id="hmt"
          readOnly={true}
          type="checkbox"
        />
        <label
          className="btn-menu toggleMenu null"
          htmlFor="hmt"
          onClick={[Function]}
        >
          <span
            className="first"
          />
          <span
            className="second"
          />
          <span
            className="third"
          />
        </label>
        <h1
          className="lists_main"
          onClick={[Function]}
        >
          <ForwardRef(HomeIcon)>
            <WithStyles(ForwardRef(SvgIcon))>
              <ForwardRef(SvgIcon)
                classes={
                  Object {
                    "colorAction": "MuiSvgIcon-colorAction",
                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                    "colorError": "MuiSvgIcon-colorError",
                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                    "root": "MuiSvgIcon-root",
                  }
                }
              >
                <svg
                  aria-hidden={true}
                  className="MuiSvgIcon-root"
                  focusable="false"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z"
                  />
                </svg>
              </ForwardRef(SvgIcon)>
            </WithStyles(ForwardRef(SvgIcon))>
          </ForwardRef(HomeIcon)>
          <span>
            Главная
          </span>
        </h1>
        <h2
          className="lists__title"
        >
          <ForwardRef(FormatListBulletedIcon)>
            <WithStyles(ForwardRef(SvgIcon))>
              <ForwardRef(SvgIcon)
                classes={
                  Object {
                    "colorAction": "MuiSvgIcon-colorAction",
                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                    "colorError": "MuiSvgIcon-colorError",
                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                    "root": "MuiSvgIcon-root",
                  }
                }
              >
                <svg
                  aria-hidden={true}
                  className="MuiSvgIcon-root"
                  focusable="false"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M4 10.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm0-6c-.83 0-1.5.67-1.5 1.5S3.17 7.5 4 7.5 5.5 6.83 5.5 6 4.83 4.5 4 4.5zm0 12c-.83 0-1.5.68-1.5 1.5s.68 1.5 1.5 1.5 1.5-.68 1.5-1.5-.67-1.5-1.5-1.5zM7 19h14v-2H7v2zm0-6h14v-2H7v2zm0-8v2h14V5H7z"
                  />
                </svg>
              </ForwardRef(SvgIcon)>
            </WithStyles(ForwardRef(SvgIcon))>
          </ForwardRef(FormatListBulletedIcon)>
          <span>
            Списки:
          </span>
        </h2>
        <div
          className="lists__renderList null"
        >
          <Connect(Component)
            id={1}
            key="1"
            label="Магазин"
            needsDone={0}
            toggleDrawer={[Function]}
          >
            <Memo(List)
              activeToDoListId={null}
              deleteToDoListAC={[Function]}
              id={1}
              label="Магазин"
              needsDone={0}
              toggleDrawer={[Function]}
              updateActiveTodoListIdAC={[Function]}
              updateToDoListLabelAC={[Function]}
            >
              <div>
                <WithStyles(ForwardRef(ListItem))
                  button={true}
                  className="list__item"
                  onClick={[Function]}
                >
                  <ForwardRef(ListItem)
                    button={true}
                    className="list__item"
                    classes={
                      Object {
                        "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                        "button": "MuiListItem-button",
                        "container": "MuiListItem-container",
                        "dense": "MuiListItem-dense",
                        "disabled": "Mui-disabled",
                        "divider": "MuiListItem-divider",
                        "focusVisible": "Mui-focusVisible",
                        "gutters": "MuiListItem-gutters",
                        "root": "MuiListItem-root",
                        "secondaryAction": "MuiListItem-secondaryAction",
                        "selected": "Mui-selected",
                      }
                    }
                    onClick={[Function]}
                  >
                    <WithStyles(ForwardRef(ButtonBase))
                      className="MuiListItem-root list__item MuiListItem-gutters MuiListItem-button"
                      component="div"
                      disabled={false}
                      focusVisibleClassName="Mui-focusVisible"
                      onClick={[Function]}
                    >
                      <ForwardRef(ButtonBase)
                        className="MuiListItem-root list__item MuiListItem-gutters MuiListItem-button"
                        classes={
                          Object {
                            "disabled": "Mui-disabled",
                            "focusVisible": "Mui-focusVisible",
                            "root": "MuiButtonBase-root",
                          }
                        }
                        component="div"
                        disabled={false}
                        focusVisibleClassName="Mui-focusVisible"
                        onClick={[Function]}
                      >
                        <div
                          aria-disabled={false}
                          className="MuiButtonBase-root MuiListItem-root list__item MuiListItem-gutters MuiListItem-button Mui-focusVisible Mui-focusVisible"
                          onBlur={[Function]}
                          onClick={[Function]}
                          onDragLeave={[Function]}
                          onFocus={[Function]}
                          onKeyDown={[Function]}
                          onKeyUp={[Function]}
                          onMouseDown={[Function]}
                          onMouseLeave={[Function]}
                          onMouseUp={[Function]}
                          onTouchEnd={[Function]}
                          onTouchMove={[Function]}
                          onTouchStart={[Function]}
                          role="button"
                          tabIndex={0}
                        >
                          <div
                            key=".0"
                          >
                            Магазин
                          </div>
                          <div
                            className="list__wrapper__list__buttonMenu"
                            key=".1"
                          >
                            <WithStyles(ForwardRef(IconButton))
                              aria-controls="simple-menu"
                              aria-haspopup="true"
                              className="list__buttonMenu"
                              onClick={[Function]}
                            >
                              <ForwardRef(IconButton)
                                aria-controls="simple-menu"
                                aria-haspopup="true"
                                className="list__buttonMenu"
                                classes={
                                  Object {
                                    "colorInherit": "MuiIconButton-colorInherit",
                                    "colorPrimary": "MuiIconButton-colorPrimary",
                                    "colorSecondary": "MuiIconButton-colorSecondary",
                                    "disabled": "Mui-disabled",
                                    "edgeEnd": "MuiIconButton-edgeEnd",
                                    "edgeStart": "MuiIconButton-edgeStart",
                                    "label": "MuiIconButton-label",
                                    "root": "MuiIconButton-root",
                                    "sizeSmall": "MuiIconButton-sizeSmall",
                                  }
                                }
                                onClick={[Function]}
                              >
                                <WithStyles(ForwardRef(ButtonBase))
                                  aria-controls="simple-menu"
                                  aria-haspopup="true"
                                  centerRipple={true}
                                  className="MuiIconButton-root list__buttonMenu"
                                  disabled={false}
                                  focusRipple={true}
                                  onClick={[Function]}
                                >
                                  <ForwardRef(ButtonBase)
                                    aria-controls="simple-menu"
                                    aria-haspopup="true"
                                    centerRipple={true}
                                    className="MuiIconButton-root list__buttonMenu"
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "focusVisible": "Mui-focusVisible",
                                        "root": "MuiButtonBase-root",
                                      }
                                    }
                                    disabled={false}
                                    focusRipple={true}
                                    onClick={[Function]}
                                  >
                                    <button
                                      aria-controls="simple-menu"
                                      aria-haspopup="true"
                                      className="MuiButtonBase-root MuiIconButton-root list__buttonMenu"
                                      disabled={false}
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={0}
                                      type="button"
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <ForwardRef(MoreVertIcon)>
                                          <WithStyles(ForwardRef(SvgIcon))>
                                            <ForwardRef(SvgIcon)
                                              classes={
                                                Object {
                                                  "colorAction": "MuiSvgIcon-colorAction",
                                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                  "colorError": "MuiSvgIcon-colorError",
                                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                  "root": "MuiSvgIcon-root",
                                                }
                                              }
                                            >
                                              <svg
                                                aria-hidden={true}
                                                className="MuiSvgIcon-root"
                                                focusable="false"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                                />
                                              </svg>
                                            </ForwardRef(SvgIcon)>
                                          </WithStyles(ForwardRef(SvgIcon))>
                                        </ForwardRef(MoreVertIcon)>
                                      </span>
                                      <WithStyles(memo)
                                        center={true}
                                      >
                                        <ForwardRef(TouchRipple)
                                          center={true}
                                          classes={
                                            Object {
                                              "child": "MuiTouchRipple-child",
                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                              "ripple": "MuiTouchRipple-ripple",
                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                              "root": "MuiTouchRipple-root",
                                            }
                                          }
                                        >
                                          <span
                                            className="MuiTouchRipple-root"
                                          >
                                            <TransitionGroup
                                              childFactory={[Function]}
                                              component={null}
                                              exit={true}
                                            />
                                          </span>
                                        </ForwardRef(TouchRipple)>
                                      </WithStyles(memo)>
                                    </button>
                                  </ForwardRef(ButtonBase)>
                                </WithStyles(ForwardRef(ButtonBase))>
                              </ForwardRef(IconButton)>
                            </WithStyles(ForwardRef(IconButton))>
                            <WithStyles(ForwardRef(Menu))
                              TransitionComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "propTypes": Object {
                                    "children": [Function],
                                    "disableStrictModeCompat": [Function],
                                    "in": [Function],
                                    "onEnter": [Function],
                                    "onEntered": [Function],
                                    "onEntering": [Function],
                                    "onExit": [Function],
                                    "onExited": [Function],
                                    "onExiting": [Function],
                                    "style": [Function],
                                    "timeout": [Function],
                                  },
                                  "render": [Function],
                                }
                              }
                              anchorEl={
                                <button
                                  aria-controls="simple-menu"
                                  aria-haspopup="true"
                                  class="MuiButtonBase-root MuiIconButton-root list__buttonMenu"
                                  tabindex="0"
                                  type="button"
                                >
                                  <span
                                    class="MuiIconButton-label"
                                  >
                                    <svg
                                      aria-hidden="true"
                                      class="MuiSvgIcon-root"
                                      focusable="false"
                                      viewBox="0 0 24 24"
                                    >
                                      <path
                                        d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                      />
                                    </svg>
                                  </span>
                                  <span
                                    class="MuiTouchRipple-root"
                                  />
                                </button>
                              }
                              id="simple-menu"
                              keepMounted={true}
                              onClose={[Function]}
                              open={true}
                            >
                              <ForwardRef(Menu)
                                TransitionComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "propTypes": Object {
                                      "children": [Function],
                                      "disableStrictModeCompat": [Function],
                                      "in": [Function],
                                      "onEnter": [Function],
                                      "onEntered": [Function],
                                      "onEntering": [Function],
                                      "onExit": [Function],
                                      "onExited": [Function],
                                      "onExiting": [Function],
                                      "style": [Function],
                                      "timeout": [Function],
                                    },
                                    "render": [Function],
                                  }
                                }
                                anchorEl={
                                  <button
                                    aria-controls="simple-menu"
                                    aria-haspopup="true"
                                    class="MuiButtonBase-root MuiIconButton-root list__buttonMenu"
                                    tabindex="0"
                                    type="button"
                                  >
                                    <span
                                      class="MuiIconButton-label"
                                    >
                                      <svg
                                        aria-hidden="true"
                                        class="MuiSvgIcon-root"
                                        focusable="false"
                                        viewBox="0 0 24 24"
                                      >
                                        <path
                                          d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                        />
                                      </svg>
                                    </span>
                                    <span
                                      class="MuiTouchRipple-root"
                                    />
                                  </button>
                                }
                                classes={
                                  Object {
                                    "list": "MuiMenu-list",
                                    "paper": "MuiMenu-paper",
                                  }
                                }
                                id="simple-menu"
                                keepMounted={true}
                                onClose={[Function]}
                                open={true}
                              >
                                <WithStyles(ForwardRef(Popover))
                                  PaperProps={
                                    Object {
                                      "classes": Object {
                                        "root": "MuiMenu-paper",
                                      },
                                    }
                                  }
                                  TransitionComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "propTypes": Object {
                                        "children": [Function],
                                        "disableStrictModeCompat": [Function],
                                        "in": [Function],
                                        "onEnter": [Function],
                                        "onEntered": [Function],
                                        "onEntering": [Function],
                                        "onExit": [Function],
                                        "onExited": [Function],
                                        "onExiting": [Function],
                                        "style": [Function],
                                        "timeout": [Function],
                                      },
                                      "render": [Function],
                                    }
                                  }
                                  TransitionProps={
                                    Object {
                                      "onEntering": [Function],
                                    }
                                  }
                                  anchorEl={
                                    <button
                                      aria-controls="simple-menu"
                                      aria-haspopup="true"
                                      class="MuiButtonBase-root MuiIconButton-root list__buttonMenu"
                                      tabindex="0"
                                      type="button"
                                    >
                                      <span
                                        class="MuiIconButton-label"
                                      >
                                        <svg
                                          aria-hidden="true"
                                          class="MuiSvgIcon-root"
                                          focusable="false"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                          />
                                        </svg>
                                      </span>
                                      <span
                                        class="MuiTouchRipple-root"
                                      />
                                    </button>
                                  }
                                  anchorOrigin={
                                    Object {
                                      "horizontal": "left",
                                      "vertical": "top",
                                    }
                                  }
                                  getContentAnchorEl={[Function]}
                                  id="simple-menu"
                                  keepMounted={true}
                                  onClose={[Function]}
                                  open={true}
                                  transformOrigin={
                                    Object {
                                      "horizontal": "left",
                                      "vertical": "top",
                                    }
                                  }
                                  transitionDuration="auto"
                                >
                                  <ForwardRef(Popover)
                                    PaperProps={
                                      Object {
                                        "classes": Object {
                                          "root": "MuiMenu-paper",
                                        },
                                      }
                                    }
                                    TransitionComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "propTypes": Object {
                                          "children": [Function],
                                          "disableStrictModeCompat": [Function],
                                          "in": [Function],
                                          "onEnter": [Function],
                                          "onEntered": [Function],
                                          "onEntering": [Function],
                                          "onExit": [Function],
                                          "onExited": [Function],
                                          "onExiting": [Function],
                                          "style": [Function],
                                          "timeout": [Function],
                                        },
                                        "render": [Function],
                                      }
                                    }
                                    TransitionProps={
                                      Object {
                                        "onEntering": [Function],
                                      }
                                    }
                                    anchorEl={
                                      <button
                                        aria-controls="simple-menu"
                                        aria-haspopup="true"
                                        class="MuiButtonBase-root MuiIconButton-root list__buttonMenu"
                                        tabindex="0"
                                        type="button"
                                      >
                                        <span
                                          class="MuiIconButton-label"
                                        >
                                          <svg
                                            aria-hidden="true"
                                            class="MuiSvgIcon-root"
                                            focusable="false"
                                            viewBox="0 0 24 24"
                                          >
                                            <path
                                              d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                            />
                                          </svg>
                                        </span>
                                        <span
                                          class="MuiTouchRipple-root"
                                        />
                                      </button>
                                    }
                                    anchorOrigin={
                                      Object {
                                        "horizontal": "left",
                                        "vertical": "top",
                                      }
                                    }
                                    classes={
                                      Object {
                                        "paper": "MuiPopover-paper",
                                        "root": "MuiPopover-root",
                                      }
                                    }
                                    getContentAnchorEl={[Function]}
                                    id="simple-menu"
                                    keepMounted={true}
                                    onClose={[Function]}
                                    open={true}
                                    transformOrigin={
                                      Object {
                                        "horizontal": "left",
                                        "vertical": "top",
                                      }
                                    }
                                    transitionDuration="auto"
                                  >
                                    <ForwardRef(Modal)
                                      BackdropProps={
                                        Object {
                                          "invisible": true,
                                        }
                                      }
                                      className="MuiPopover-root"
                                      container={
                                        <body
                                          style="padding-right: 0px; overflow: hidden;"
                                        >
                                          <div
                                            aria-hidden="true"
                                            class="MuiPopover-root"
                                            id="simple-menu"
                                            role="presentation"
                                            style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px; visibility: hidden;"
                                          >
                                            <div
                                              data-test="sentinelStart"
                                              tabindex="0"
                                            />
                                            <div
                                              class="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                              style="opacity: 0; visibility: hidden;"
                                              tabindex="-1"
                                            >
                                              <ul
                                                class="MuiList-root MuiMenu-list MuiList-padding"
                                                role="menu"
                                                tabindex="-1"
                                              >
                                                <li
                                                  aria-disabled="false"
                                                  class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_edit MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                  role="menuitem"
                                                  tabindex="0"
                                                >
                                                  Редактировать
                                                  <span
                                                    class="MuiTouchRipple-root"
                                                  />
                                                </li>
                                                <li
                                                  aria-disabled="false"
                                                  class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_delete MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                  role="menuitem"
                                                  tabindex="-1"
                                                >
                                                  Удалить
                                                  <span
                                                    class="MuiTouchRipple-root"
                                                  />
                                                </li>
                                              </ul>
                                            </div>
                                            <div
                                              data-test="sentinelEnd"
                                              tabindex="0"
                                            />
                                          </div>
                                          <div
                                            class="MuiPopover-root"
                                            id="simple-menu"
                                            role="presentation"
                                            style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                                          >
                                            <div
                                              aria-hidden="true"
                                              style="z-index: -1; position: fixed; right: 0px; bottom: 0px; top: 0px; left: 0px; background-color: transparent;"
                                            />
                                            <div
                                              data-test="sentinelStart"
                                              tabindex="0"
                                            />
                                            <div
                                              class="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                              style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; top: 16px; left: 16px; transform-origin: -16px -16px;"
                                              tabindex="-1"
                                            >
                                              <ul
                                                class="MuiList-root MuiMenu-list MuiList-padding"
                                                role="menu"
                                                tabindex="-1"
                                              >
                                                <li
                                                  aria-disabled="false"
                                                  class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_edit MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button Mui-focusVisible Mui-focusVisible"
                                                  role="menuitem"
                                                  tabindex="0"
                                                >
                                                  Редактировать
                                                  <span
                                                    class="MuiTouchRipple-root"
                                                  />
                                                </li>
                                                <li
                                                  aria-disabled="false"
                                                  class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_delete MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                  role="menuitem"
                                                  tabindex="-1"
                                                >
                                                  Удалить
                                                  <span
                                                    class="MuiTouchRipple-root"
                                                  />
                                                </li>
                                              </ul>
                                            </div>
                                            <div
                                              data-test="sentinelEnd"
                                              tabindex="0"
                                            />
                                          </div>
                                        </body>
                                      }
                                      id="simple-menu"
                                      keepMounted={true}
                                      onClose={[Function]}
                                      open={true}
                                    >
                                      <ForwardRef(Portal)
                                        container={
                                          <body
                                            style="padding-right: 0px; overflow: hidden;"
                                          >
                                            <div
                                              aria-hidden="true"
                                              class="MuiPopover-root"
                                              id="simple-menu"
                                              role="presentation"
                                              style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px; visibility: hidden;"
                                            >
                                              <div
                                                data-test="sentinelStart"
                                                tabindex="0"
                                              />
                                              <div
                                                class="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                                style="opacity: 0; visibility: hidden;"
                                                tabindex="-1"
                                              >
                                                <ul
                                                  class="MuiList-root MuiMenu-list MuiList-padding"
                                                  role="menu"
                                                  tabindex="-1"
                                                >
                                                  <li
                                                    aria-disabled="false"
                                                    class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_edit MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                    role="menuitem"
                                                    tabindex="0"
                                                  >
                                                    Редактировать
                                                    <span
                                                      class="MuiTouchRipple-root"
                                                    />
                                                  </li>
                                                  <li
                                                    aria-disabled="false"
                                                    class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_delete MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                    role="menuitem"
                                                    tabindex="-1"
                                                  >
                                                    Удалить
                                                    <span
                                                      class="MuiTouchRipple-root"
                                                    />
                                                  </li>
                                                </ul>
                                              </div>
                                              <div
                                                data-test="sentinelEnd"
                                                tabindex="0"
                                              />
                                            </div>
                                            <div
                                              class="MuiPopover-root"
                                              id="simple-menu"
                                              role="presentation"
                                              style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                                            >
                                              <div
                                                aria-hidden="true"
                                                style="z-index: -1; position: fixed; right: 0px; bottom: 0px; top: 0px; left: 0px; background-color: transparent;"
                                              />
                                              <div
                                                data-test="sentinelStart"
                                                tabindex="0"
                                              />
                                              <div
                                                class="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                                style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; top: 16px; left: 16px; transform-origin: -16px -16px;"
                                                tabindex="-1"
                                              >
                                                <ul
                                                  class="MuiList-root MuiMenu-list MuiList-padding"
                                                  role="menu"
                                                  tabindex="-1"
                                                >
                                                  <li
                                                    aria-disabled="false"
                                                    class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_edit MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button Mui-focusVisible Mui-focusVisible"
                                                    role="menuitem"
                                                    tabindex="0"
                                                  >
                                                    Редактировать
                                                    <span
                                                      class="MuiTouchRipple-root"
                                                    />
                                                  </li>
                                                  <li
                                                    aria-disabled="false"
                                                    class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_delete MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                    role="menuitem"
                                                    tabindex="-1"
                                                  >
                                                    Удалить
                                                    <span
                                                      class="MuiTouchRipple-root"
                                                    />
                                                  </li>
                                                </ul>
                                              </div>
                                              <div
                                                data-test="sentinelEnd"
                                                tabindex="0"
                                              />
                                            </div>
                                          </body>
                                        }
                                        disablePortal={false}
                                      >
                                        <Portal
                                          containerInfo={
                                            <body
                                              style="padding-right: 0px; overflow: hidden;"
                                            >
                                              <div
                                                aria-hidden="true"
                                                class="MuiPopover-root"
                                                id="simple-menu"
                                                role="presentation"
                                                style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px; visibility: hidden;"
                                              >
                                                <div
                                                  data-test="sentinelStart"
                                                  tabindex="0"
                                                />
                                                <div
                                                  class="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                                  style="opacity: 0; visibility: hidden;"
                                                  tabindex="-1"
                                                >
                                                  <ul
                                                    class="MuiList-root MuiMenu-list MuiList-padding"
                                                    role="menu"
                                                    tabindex="-1"
                                                  >
                                                    <li
                                                      aria-disabled="false"
                                                      class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_edit MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                      role="menuitem"
                                                      tabindex="0"
                                                    >
                                                      Редактировать
                                                      <span
                                                        class="MuiTouchRipple-root"
                                                      />
                                                    </li>
                                                    <li
                                                      aria-disabled="false"
                                                      class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_delete MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                      role="menuitem"
                                                      tabindex="-1"
                                                    >
                                                      Удалить
                                                      <span
                                                        class="MuiTouchRipple-root"
                                                      />
                                                    </li>
                                                  </ul>
                                                </div>
                                                <div
                                                  data-test="sentinelEnd"
                                                  tabindex="0"
                                                />
                                              </div>
                                              <div
                                                class="MuiPopover-root"
                                                id="simple-menu"
                                                role="presentation"
                                                style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                                              >
                                                <div
                                                  aria-hidden="true"
                                                  style="z-index: -1; position: fixed; right: 0px; bottom: 0px; top: 0px; left: 0px; background-color: transparent;"
                                                />
                                                <div
                                                  data-test="sentinelStart"
                                                  tabindex="0"
                                                />
                                                <div
                                                  class="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                                  style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; top: 16px; left: 16px; transform-origin: -16px -16px;"
                                                  tabindex="-1"
                                                >
                                                  <ul
                                                    class="MuiList-root MuiMenu-list MuiList-padding"
                                                    role="menu"
                                                    tabindex="-1"
                                                  >
                                                    <li
                                                      aria-disabled="false"
                                                      class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_edit MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button Mui-focusVisible Mui-focusVisible"
                                                      role="menuitem"
                                                      tabindex="0"
                                                    >
                                                      Редактировать
                                                      <span
                                                        class="MuiTouchRipple-root"
                                                      />
                                                    </li>
                                                    <li
                                                      aria-disabled="false"
                                                      class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_delete MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                      role="menuitem"
                                                      tabindex="-1"
                                                    >
                                                      Удалить
                                                      <span
                                                        class="MuiTouchRipple-root"
                                                      />
                                                    </li>
                                                  </ul>
                                                </div>
                                                <div
                                                  data-test="sentinelEnd"
                                                  tabindex="0"
                                                />
                                              </div>
                                            </body>
                                          }
                                        >
                                          <div
                                            className="MuiPopover-root"
                                            id="simple-menu"
                                            onKeyDown={[Function]}
                                            role="presentation"
                                            style={
                                              Object {
                                                "bottom": 0,
                                                "left": 0,
                                                "position": "fixed",
                                                "right": 0,
                                                "top": 0,
                                                "zIndex": 1300,
                                              }
                                            }
                                          >
                                            <ForwardRef(SimpleBackdrop)
                                              invisible={true}
                                              onClick={[Function]}
                                              open={true}
                                            >
                                              <div
                                                aria-hidden={true}
                                                onClick={[Function]}
                                                style={
                                                  Object {
                                                    "WebkitTapHighlightColor": "transparent",
                                                    "backgroundColor": "transparent",
                                                    "bottom": 0,
                                                    "left": 0,
                                                    "position": "fixed",
                                                    "right": 0,
                                                    "top": 0,
                                                    "zIndex": -1,
                                                  }
                                                }
                                              />
                                            </ForwardRef(SimpleBackdrop)>
                                            <Unstable_TrapFocus
                                              disableAutoFocus={false}
                                              disableEnforceFocus={false}
                                              disableRestoreFocus={false}
                                              getDoc={[Function]}
                                              isEnabled={[Function]}
                                              open={true}
                                            >
                                              <div
                                                data-test="sentinelStart"
                                                tabIndex={0}
                                              />
                                              <ForwardRef(Fade)
                                                appear={true}
                                                in={true}
                                                onEnter={[Function]}
                                                onEntering={[Function]}
                                                onExited={[Function]}
                                                tabIndex="-1"
                                              >
                                                <Transition
                                                  appear={true}
                                                  enter={true}
                                                  exit={true}
                                                  in={true}
                                                  mountOnEnter={false}
                                                  onEnter={[Function]}
                                                  onEntered={[Function]}
                                                  onEntering={[Function]}
                                                  onExit={[Function]}
                                                  onExited={[Function]}
                                                  onExiting={[Function]}
                                                  tabIndex="-1"
                                                  timeout={
                                                    Object {
                                                      "enter": 225,
                                                      "exit": 195,
                                                    }
                                                  }
                                                  unmountOnExit={false}
                                                >
                                                  <WithStyles(ForwardRef(Paper))
                                                    className="MuiPopover-paper"
                                                    classes={
                                                      Object {
                                                        "root": "MuiMenu-paper",
                                                      }
                                                    }
                                                    elevation={8}
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                        "visibility": undefined,
                                                      }
                                                    }
                                                    tabIndex="-1"
                                                  >
                                                    <ForwardRef(Paper)
                                                      className="MuiPopover-paper"
                                                      classes={
                                                        Object {
                                                          "elevation0": "MuiPaper-elevation0",
                                                          "elevation1": "MuiPaper-elevation1",
                                                          "elevation10": "MuiPaper-elevation10",
                                                          "elevation11": "MuiPaper-elevation11",
                                                          "elevation12": "MuiPaper-elevation12",
                                                          "elevation13": "MuiPaper-elevation13",
                                                          "elevation14": "MuiPaper-elevation14",
                                                          "elevation15": "MuiPaper-elevation15",
                                                          "elevation16": "MuiPaper-elevation16",
                                                          "elevation17": "MuiPaper-elevation17",
                                                          "elevation18": "MuiPaper-elevation18",
                                                          "elevation19": "MuiPaper-elevation19",
                                                          "elevation2": "MuiPaper-elevation2",
                                                          "elevation20": "MuiPaper-elevation20",
                                                          "elevation21": "MuiPaper-elevation21",
                                                          "elevation22": "MuiPaper-elevation22",
                                                          "elevation23": "MuiPaper-elevation23",
                                                          "elevation24": "MuiPaper-elevation24",
                                                          "elevation3": "MuiPaper-elevation3",
                                                          "elevation4": "MuiPaper-elevation4",
                                                          "elevation5": "MuiPaper-elevation5",
                                                          "elevation6": "MuiPaper-elevation6",
                                                          "elevation7": "MuiPaper-elevation7",
                                                          "elevation8": "MuiPaper-elevation8",
                                                          "elevation9": "MuiPaper-elevation9",
                                                          "outlined": "MuiPaper-outlined",
                                                          "root": "MuiPaper-root MuiMenu-paper",
                                                          "rounded": "MuiPaper-rounded",
                                                        }
                                                      }
                                                      elevation={8}
                                                      style={
                                                        Object {
                                                          "opacity": 1,
                                                          "visibility": undefined,
                                                        }
                                                      }
                                                      tabIndex="-1"
                                                    >
                                                      <div
                                                        className="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                                        style={
                                                          Object {
                                                            "opacity": 1,
                                                            "visibility": undefined,
                                                          }
                                                        }
                                                        tabIndex="-1"
                                                      >
                                                        <ForwardRef(MenuList)
                                                          actions={
                                                            Object {
                                                              "current": Object {
                                                                "adjustStyleForScrollbar": [Function],
                                                              },
                                                            }
                                                          }
                                                          autoFocus={false}
                                                          autoFocusItem={true}
                                                          className="MuiMenu-list"
                                                          onKeyDown={[Function]}
                                                          variant="selectedMenu"
                                                        >
                                                          <WithStyles(ForwardRef(List))
                                                            className="MuiMenu-list"
                                                            onKeyDown={[Function]}
                                                            role="menu"
                                                            tabIndex={-1}
                                                          >
                                                            <ForwardRef(List)
                                                              className="MuiMenu-list"
                                                              classes={
                                                                Object {
                                                                  "dense": "MuiList-dense",
                                                                  "padding": "MuiList-padding",
                                                                  "root": "MuiList-root",
                                                                  "subheader": "MuiList-subheader",
                                                                }
                                                              }
                                                              onKeyDown={[Function]}
                                                              role="menu"
                                                              tabIndex={-1}
                                                            >
                                                              <ul
                                                                className="MuiList-root MuiMenu-list MuiList-padding"
                                                                onKeyDown={[Function]}
                                                                role="menu"
                                                                tabIndex={-1}
                                                              >
                                                                <WithStyles(ForwardRef(MenuItem))
                                                                  autoFocus={true}
                                                                  className="ListItem_edit"
                                                                  key=".$.0"
                                                                  onClick={[Function]}
                                                                  tabIndex={0}
                                                                >
                                                                  <ForwardRef(MenuItem)
                                                                    autoFocus={true}
                                                                    className="ListItem_edit"
                                                                    classes={
                                                                      Object {
                                                                        "dense": "MuiMenuItem-dense",
                                                                        "gutters": "MuiMenuItem-gutters",
                                                                        "root": "MuiMenuItem-root",
                                                                        "selected": "Mui-selected",
                                                                      }
                                                                    }
                                                                    onClick={[Function]}
                                                                    tabIndex={0}
                                                                  >
                                                                    <WithStyles(ForwardRef(ListItem))
                                                                      autoFocus={true}
                                                                      button={true}
                                                                      className="MuiMenuItem-root ListItem_edit MuiMenuItem-gutters"
                                                                      classes={
                                                                        Object {
                                                                          "dense": "MuiMenuItem-dense",
                                                                        }
                                                                      }
                                                                      component="li"
                                                                      disableGutters={false}
                                                                      onClick={[Function]}
                                                                      role="menuitem"
                                                                      tabIndex={0}
                                                                    >
                                                                      <ForwardRef(ListItem)
                                                                        autoFocus={true}
                                                                        button={true}
                                                                        className="MuiMenuItem-root ListItem_edit MuiMenuItem-gutters"
                                                                        classes={
                                                                          Object {
                                                                            "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                                            "button": "MuiListItem-button",
                                                                            "container": "MuiListItem-container",
                                                                            "dense": "MuiListItem-dense MuiMenuItem-dense",
                                                                            "disabled": "Mui-disabled",
                                                                            "divider": "MuiListItem-divider",
                                                                            "focusVisible": "Mui-focusVisible",
                                                                            "gutters": "MuiListItem-gutters",
                                                                            "root": "MuiListItem-root",
                                                                            "secondaryAction": "MuiListItem-secondaryAction",
                                                                            "selected": "Mui-selected",
                                                                          }
                                                                        }
                                                                        component="li"
                                                                        disableGutters={false}
                                                                        onClick={[Function]}
                                                                        role="menuitem"
                                                                        tabIndex={0}
                                                                      >
                                                                        <WithStyles(ForwardRef(ButtonBase))
                                                                          className="MuiListItem-root MuiMenuItem-root ListItem_edit MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                          component="li"
                                                                          disabled={false}
                                                                          focusVisibleClassName="Mui-focusVisible"
                                                                          onClick={[Function]}
                                                                          role="menuitem"
                                                                          tabIndex={0}
                                                                        >
                                                                          <ForwardRef(ButtonBase)
                                                                            className="MuiListItem-root MuiMenuItem-root ListItem_edit MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                            classes={
                                                                              Object {
                                                                                "disabled": "Mui-disabled",
                                                                                "focusVisible": "Mui-focusVisible",
                                                                                "root": "MuiButtonBase-root",
                                                                              }
                                                                            }
                                                                            component="li"
                                                                            disabled={false}
                                                                            focusVisibleClassName="Mui-focusVisible"
                                                                            onClick={[Function]}
                                                                            role="menuitem"
                                                                            tabIndex={0}
                                                                          >
                                                                            <li
                                                                              aria-disabled={false}
                                                                              className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_edit MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button Mui-focusVisible Mui-focusVisible"
                                                                              onBlur={[Function]}
                                                                              onClick={[Function]}
                                                                              onDragLeave={[Function]}
                                                                              onFocus={[Function]}
                                                                              onKeyDown={[Function]}
                                                                              onKeyUp={[Function]}
                                                                              onMouseDown={[Function]}
                                                                              onMouseLeave={[Function]}
                                                                              onMouseUp={[Function]}
                                                                              onTouchEnd={[Function]}
                                                                              onTouchMove={[Function]}
                                                                              onTouchStart={[Function]}
                                                                              role="menuitem"
                                                                              tabIndex={0}
                                                                            >
                                                                              Редактировать
                                                                              <WithStyles(memo)
                                                                                center={false}
                                                                              >
                                                                                <ForwardRef(TouchRipple)
                                                                                  center={false}
                                                                                  classes={
                                                                                    Object {
                                                                                      "child": "MuiTouchRipple-child",
                                                                                      "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                      "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                      "ripple": "MuiTouchRipple-ripple",
                                                                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                      "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                      "root": "MuiTouchRipple-root",
                                                                                    }
                                                                                  }
                                                                                >
                                                                                  <span
                                                                                    className="MuiTouchRipple-root"
                                                                                  >
                                                                                    <TransitionGroup
                                                                                      childFactory={[Function]}
                                                                                      component={null}
                                                                                      exit={true}
                                                                                    />
                                                                                  </span>
                                                                                </ForwardRef(TouchRipple)>
                                                                              </WithStyles(memo)>
                                                                            </li>
                                                                          </ForwardRef(ButtonBase)>
                                                                        </WithStyles(ForwardRef(ButtonBase))>
                                                                      </ForwardRef(ListItem)>
                                                                    </WithStyles(ForwardRef(ListItem))>
                                                                  </ForwardRef(MenuItem)>
                                                                </WithStyles(ForwardRef(MenuItem))>
                                                                <WithStyles(ForwardRef(MenuItem))
                                                                  className="ListItem_delete"
                                                                  key=".$.1"
                                                                  onClick={[Function]}
                                                                >
                                                                  <ForwardRef(MenuItem)
                                                                    className="ListItem_delete"
                                                                    classes={
                                                                      Object {
                                                                        "dense": "MuiMenuItem-dense",
                                                                        "gutters": "MuiMenuItem-gutters",
                                                                        "root": "MuiMenuItem-root",
                                                                        "selected": "Mui-selected",
                                                                      }
                                                                    }
                                                                    onClick={[Function]}
                                                                  >
                                                                    <WithStyles(ForwardRef(ListItem))
                                                                      button={true}
                                                                      className="MuiMenuItem-root ListItem_delete MuiMenuItem-gutters"
                                                                      classes={
                                                                        Object {
                                                                          "dense": "MuiMenuItem-dense",
                                                                        }
                                                                      }
                                                                      component="li"
                                                                      disableGutters={false}
                                                                      onClick={[Function]}
                                                                      role="menuitem"
                                                                      tabIndex={-1}
                                                                    >
                                                                      <ForwardRef(ListItem)
                                                                        button={true}
                                                                        className="MuiMenuItem-root ListItem_delete MuiMenuItem-gutters"
                                                                        classes={
                                                                          Object {
                                                                            "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                                            "button": "MuiListItem-button",
                                                                            "container": "MuiListItem-container",
                                                                            "dense": "MuiListItem-dense MuiMenuItem-dense",
                                                                            "disabled": "Mui-disabled",
                                                                            "divider": "MuiListItem-divider",
                                                                            "focusVisible": "Mui-focusVisible",
                                                                            "gutters": "MuiListItem-gutters",
                                                                            "root": "MuiListItem-root",
                                                                            "secondaryAction": "MuiListItem-secondaryAction",
                                                                            "selected": "Mui-selected",
                                                                          }
                                                                        }
                                                                        component="li"
                                                                        disableGutters={false}
                                                                        onClick={[Function]}
                                                                        role="menuitem"
                                                                        tabIndex={-1}
                                                                      >
                                                                        <WithStyles(ForwardRef(ButtonBase))
                                                                          className="MuiListItem-root MuiMenuItem-root ListItem_delete MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                          component="li"
                                                                          disabled={false}
                                                                          focusVisibleClassName="Mui-focusVisible"
                                                                          onClick={[Function]}
                                                                          role="menuitem"
                                                                          tabIndex={-1}
                                                                        >
                                                                          <ForwardRef(ButtonBase)
                                                                            className="MuiListItem-root MuiMenuItem-root ListItem_delete MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                            classes={
                                                                              Object {
                                                                                "disabled": "Mui-disabled",
                                                                                "focusVisible": "Mui-focusVisible",
                                                                                "root": "MuiButtonBase-root",
                                                                              }
                                                                            }
                                                                            component="li"
                                                                            disabled={false}
                                                                            focusVisibleClassName="Mui-focusVisible"
                                                                            onClick={[Function]}
                                                                            role="menuitem"
                                                                            tabIndex={-1}
                                                                          >
                                                                            <li
                                                                              aria-disabled={false}
                                                                              className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_delete MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                              onBlur={[Function]}
                                                                              onClick={[Function]}
                                                                              onDragLeave={[Function]}
                                                                              onFocus={[Function]}
                                                                              onKeyDown={[Function]}
                                                                              onKeyUp={[Function]}
                                                                              onMouseDown={[Function]}
                                                                              onMouseLeave={[Function]}
                                                                              onMouseUp={[Function]}
                                                                              onTouchEnd={[Function]}
                                                                              onTouchMove={[Function]}
                                                                              onTouchStart={[Function]}
                                                                              role="menuitem"
                                                                              tabIndex={-1}
                                                                            >
                                                                              Удалить
                                                                              <WithStyles(memo)
                                                                                center={false}
                                                                              >
                                                                                <ForwardRef(TouchRipple)
                                                                                  center={false}
                                                                                  classes={
                                                                                    Object {
                                                                                      "child": "MuiTouchRipple-child",
                                                                                      "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                      "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                      "ripple": "MuiTouchRipple-ripple",
                                                                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                      "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                      "root": "MuiTouchRipple-root",
                                                                                    }
                                                                                  }
                                                                                >
                                                                                  <span
                                                                                    className="MuiTouchRipple-root"
                                                                                  >
                                                                                    <TransitionGroup
                                                                                      childFactory={[Function]}
                                                                                      component={null}
                                                                                      exit={true}
                                                                                    />
                                                                                  </span>
                                                                                </ForwardRef(TouchRipple)>
                                                                              </WithStyles(memo)>
                                                                            </li>
                                                                          </ForwardRef(ButtonBase)>
                                                                        </WithStyles(ForwardRef(ButtonBase))>
                                                                      </ForwardRef(ListItem)>
                                                                    </WithStyles(ForwardRef(ListItem))>
                                                                  </ForwardRef(MenuItem)>
                                                                </WithStyles(ForwardRef(MenuItem))>
                                                              </ul>
                                                            </ForwardRef(List)>
                                                          </WithStyles(ForwardRef(List))>
                                                        </ForwardRef(MenuList)>
                                                      </div>
                                                    </ForwardRef(Paper)>
                                                  </WithStyles(ForwardRef(Paper))>
                                                </Transition>
                                              </ForwardRef(Fade)>
                                              <div
                                                data-test="sentinelEnd"
                                                tabIndex={0}
                                              />
                                            </Unstable_TrapFocus>
                                          </div>
                                        </Portal>
                                      </ForwardRef(Portal)>
                                    </ForwardRef(Modal)>
                                  </ForwardRef(Popover)>
                                </WithStyles(ForwardRef(Popover))>
                              </ForwardRef(Menu)>
                            </WithStyles(ForwardRef(Menu))>
                          </div>
                          <WithStyles(memo)
                            center={false}
                          >
                            <ForwardRef(TouchRipple)
                              center={false}
                              classes={
                                Object {
                                  "child": "MuiTouchRipple-child",
                                  "childLeaving": "MuiTouchRipple-childLeaving",
                                  "childPulsate": "MuiTouchRipple-childPulsate",
                                  "ripple": "MuiTouchRipple-ripple",
                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                  "rippleVisible": "MuiTouchRipple-rippleVisible",
                                  "root": "MuiTouchRipple-root",
                                }
                              }
                            >
                              <span
                                className="MuiTouchRipple-root"
                              >
                                <TransitionGroup
                                  childFactory={[Function]}
                                  component={null}
                                  exit={true}
                                />
                              </span>
                            </ForwardRef(TouchRipple)>
                          </WithStyles(memo)>
                        </div>
                      </ForwardRef(ButtonBase)>
                    </WithStyles(ForwardRef(ButtonBase))>
                  </ForwardRef(ListItem)>
                </WithStyles(ForwardRef(ListItem))>
              </div>
            </Memo(List)>
          </Connect(Component)>
        </div>
        <div
          className="lists__addListButton"
          onClick={[Function]}
        >
          <WithStyles(ForwardRef(IconButton))
            aria-label="add List"
            color="inherit"
          >
            <ForwardRef(IconButton)
              aria-label="add List"
              classes={
                Object {
                  "colorInherit": "MuiIconButton-colorInherit",
                  "colorPrimary": "MuiIconButton-colorPrimary",
                  "colorSecondary": "MuiIconButton-colorSecondary",
                  "disabled": "Mui-disabled",
                  "edgeEnd": "MuiIconButton-edgeEnd",
                  "edgeStart": "MuiIconButton-edgeStart",
                  "label": "MuiIconButton-label",
                  "root": "MuiIconButton-root",
                  "sizeSmall": "MuiIconButton-sizeSmall",
                }
              }
              color="inherit"
            >
              <WithStyles(ForwardRef(ButtonBase))
                aria-label="add List"
                centerRipple={true}
                className="MuiIconButton-root MuiIconButton-colorInherit"
                disabled={false}
                focusRipple={true}
              >
                <ForwardRef(ButtonBase)
                  aria-label="add List"
                  centerRipple={true}
                  className="MuiIconButton-root MuiIconButton-colorInherit"
                  classes={
                    Object {
                      "disabled": "Mui-disabled",
                      "focusVisible": "Mui-focusVisible",
                      "root": "MuiButtonBase-root",
                    }
                  }
                  disabled={false}
                  focusRipple={true}
                >
                  <button
                    aria-label="add List"
                    className="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit"
                    disabled={false}
                    onBlur={[Function]}
                    onDragLeave={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    onKeyUp={[Function]}
                    onMouseDown={[Function]}
                    onMouseLeave={[Function]}
                    onMouseUp={[Function]}
                    onTouchEnd={[Function]}
                    onTouchMove={[Function]}
                    onTouchStart={[Function]}
                    tabIndex={0}
                    type="button"
                  >
                    <span
                      className="MuiIconButton-label"
                    >
                      <ForwardRef(PlaylistAddIcon)
                        fontSize="medium"
                      >
                        <WithStyles(ForwardRef(SvgIcon))
                          fontSize="medium"
                        >
                          <ForwardRef(SvgIcon)
                            classes={
                              Object {
                                "colorAction": "MuiSvgIcon-colorAction",
                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                "colorError": "MuiSvgIcon-colorError",
                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                "root": "MuiSvgIcon-root",
                              }
                            }
                            fontSize="medium"
                          >
                            <svg
                              aria-hidden={true}
                              className="MuiSvgIcon-root"
                              focusable="false"
                              viewBox="0 0 24 24"
                            >
                              <path
                                d="M14 10H2v2h12v-2zm0-4H2v2h12V6zm4 8v-4h-2v4h-4v2h4v4h2v-4h4v-2h-4zM2 16h8v-2H2v2z"
                              />
                            </svg>
                          </ForwardRef(SvgIcon)>
                        </WithStyles(ForwardRef(SvgIcon))>
                      </ForwardRef(PlaylistAddIcon)>
                    </span>
                    <WithStyles(memo)
                      center={true}
                    >
                      <ForwardRef(TouchRipple)
                        center={true}
                        classes={
                          Object {
                            "child": "MuiTouchRipple-child",
                            "childLeaving": "MuiTouchRipple-childLeaving",
                            "childPulsate": "MuiTouchRipple-childPulsate",
                            "ripple": "MuiTouchRipple-ripple",
                            "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                            "rippleVisible": "MuiTouchRipple-rippleVisible",
                            "root": "MuiTouchRipple-root",
                          }
                        }
                      >
                        <span
                          className="MuiTouchRipple-root"
                        >
                          <TransitionGroup
                            childFactory={[Function]}
                            component={null}
                            exit={true}
                          />
                        </span>
                      </ForwardRef(TouchRipple)>
                    </WithStyles(memo)>
                  </button>
                </ForwardRef(ButtonBase)>
              </WithStyles(ForwardRef(ButtonBase))>
            </ForwardRef(IconButton)>
          </WithStyles(ForwardRef(IconButton))>
          <span>
            Добавить список
          </span>
        </div>
      </div>
    </Memo(Lists)>
  </Connect(Component)>
</Provider>
`;

exports[`Checking the deletion of a list 3`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(Component)>
    <Memo(Lists)
      addToDoListAC={[Function]}
      lists={
        Array [
          Object {
            "id": 1,
            "label": "Магазин",
            "toDoList": Array [],
          },
        ]
      }
      updateActiveTodoListIdAC={[Function]}
    >
      <div
        className="lists__close-wrapper null"
        onClick={[Function]}
      />
      <div
        className="lists null"
      >
        <input
          checked={false}
          className="hidden-menu-ticker"
          id="hmt"
          readOnly={true}
          type="checkbox"
        />
        <label
          className="btn-menu toggleMenu null"
          htmlFor="hmt"
          onClick={[Function]}
        >
          <span
            className="first"
          />
          <span
            className="second"
          />
          <span
            className="third"
          />
        </label>
        <h1
          className="lists_main"
          onClick={[Function]}
        >
          <ForwardRef(HomeIcon)>
            <WithStyles(ForwardRef(SvgIcon))>
              <ForwardRef(SvgIcon)
                classes={
                  Object {
                    "colorAction": "MuiSvgIcon-colorAction",
                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                    "colorError": "MuiSvgIcon-colorError",
                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                    "root": "MuiSvgIcon-root",
                  }
                }
              >
                <svg
                  aria-hidden={true}
                  className="MuiSvgIcon-root"
                  focusable="false"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z"
                  />
                </svg>
              </ForwardRef(SvgIcon)>
            </WithStyles(ForwardRef(SvgIcon))>
          </ForwardRef(HomeIcon)>
          <span>
            Главная
          </span>
        </h1>
        <h2
          className="lists__title"
        >
          <ForwardRef(FormatListBulletedIcon)>
            <WithStyles(ForwardRef(SvgIcon))>
              <ForwardRef(SvgIcon)
                classes={
                  Object {
                    "colorAction": "MuiSvgIcon-colorAction",
                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                    "colorError": "MuiSvgIcon-colorError",
                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                    "root": "MuiSvgIcon-root",
                  }
                }
              >
                <svg
                  aria-hidden={true}
                  className="MuiSvgIcon-root"
                  focusable="false"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M4 10.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm0-6c-.83 0-1.5.67-1.5 1.5S3.17 7.5 4 7.5 5.5 6.83 5.5 6 4.83 4.5 4 4.5zm0 12c-.83 0-1.5.68-1.5 1.5s.68 1.5 1.5 1.5 1.5-.68 1.5-1.5-.67-1.5-1.5-1.5zM7 19h14v-2H7v2zm0-6h14v-2H7v2zm0-8v2h14V5H7z"
                  />
                </svg>
              </ForwardRef(SvgIcon)>
            </WithStyles(ForwardRef(SvgIcon))>
          </ForwardRef(FormatListBulletedIcon)>
          <span>
            Списки:
          </span>
        </h2>
        <div
          className="lists__renderList null"
        >
          <Connect(Component)
            id={1}
            key="1"
            label="Магазин"
            needsDone={0}
            toggleDrawer={[Function]}
          >
            <Memo(List)
              activeToDoListId={null}
              deleteToDoListAC={[Function]}
              id={1}
              label="Магазин"
              needsDone={0}
              toggleDrawer={[Function]}
              updateActiveTodoListIdAC={[Function]}
              updateToDoListLabelAC={[Function]}
            >
              <div>
                <WithStyles(ForwardRef(ListItem))
                  button={true}
                  className="list__item"
                  onClick={[Function]}
                >
                  <ForwardRef(ListItem)
                    button={true}
                    className="list__item"
                    classes={
                      Object {
                        "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                        "button": "MuiListItem-button",
                        "container": "MuiListItem-container",
                        "dense": "MuiListItem-dense",
                        "disabled": "Mui-disabled",
                        "divider": "MuiListItem-divider",
                        "focusVisible": "Mui-focusVisible",
                        "gutters": "MuiListItem-gutters",
                        "root": "MuiListItem-root",
                        "secondaryAction": "MuiListItem-secondaryAction",
                        "selected": "Mui-selected",
                      }
                    }
                    onClick={[Function]}
                  >
                    <WithStyles(ForwardRef(ButtonBase))
                      className="MuiListItem-root list__item MuiListItem-gutters MuiListItem-button"
                      component="div"
                      disabled={false}
                      focusVisibleClassName="Mui-focusVisible"
                      onClick={[Function]}
                    >
                      <ForwardRef(ButtonBase)
                        className="MuiListItem-root list__item MuiListItem-gutters MuiListItem-button"
                        classes={
                          Object {
                            "disabled": "Mui-disabled",
                            "focusVisible": "Mui-focusVisible",
                            "root": "MuiButtonBase-root",
                          }
                        }
                        component="div"
                        disabled={false}
                        focusVisibleClassName="Mui-focusVisible"
                        onClick={[Function]}
                      >
                        <div
                          aria-disabled={false}
                          className="MuiButtonBase-root MuiListItem-root list__item MuiListItem-gutters MuiListItem-button Mui-focusVisible Mui-focusVisible"
                          onBlur={[Function]}
                          onClick={[Function]}
                          onDragLeave={[Function]}
                          onFocus={[Function]}
                          onKeyDown={[Function]}
                          onKeyUp={[Function]}
                          onMouseDown={[Function]}
                          onMouseLeave={[Function]}
                          onMouseUp={[Function]}
                          onTouchEnd={[Function]}
                          onTouchMove={[Function]}
                          onTouchStart={[Function]}
                          role="button"
                          tabIndex={0}
                        >
                          <div
                            key=".0"
                          >
                            Магазин
                          </div>
                          <div
                            className="list__wrapper__list__buttonMenu"
                            key=".1"
                          >
                            <WithStyles(ForwardRef(IconButton))
                              aria-controls="simple-menu"
                              aria-haspopup="true"
                              className="list__buttonMenu"
                              onClick={[Function]}
                            >
                              <ForwardRef(IconButton)
                                aria-controls="simple-menu"
                                aria-haspopup="true"
                                className="list__buttonMenu"
                                classes={
                                  Object {
                                    "colorInherit": "MuiIconButton-colorInherit",
                                    "colorPrimary": "MuiIconButton-colorPrimary",
                                    "colorSecondary": "MuiIconButton-colorSecondary",
                                    "disabled": "Mui-disabled",
                                    "edgeEnd": "MuiIconButton-edgeEnd",
                                    "edgeStart": "MuiIconButton-edgeStart",
                                    "label": "MuiIconButton-label",
                                    "root": "MuiIconButton-root",
                                    "sizeSmall": "MuiIconButton-sizeSmall",
                                  }
                                }
                                onClick={[Function]}
                              >
                                <WithStyles(ForwardRef(ButtonBase))
                                  aria-controls="simple-menu"
                                  aria-haspopup="true"
                                  centerRipple={true}
                                  className="MuiIconButton-root list__buttonMenu"
                                  disabled={false}
                                  focusRipple={true}
                                  onClick={[Function]}
                                >
                                  <ForwardRef(ButtonBase)
                                    aria-controls="simple-menu"
                                    aria-haspopup="true"
                                    centerRipple={true}
                                    className="MuiIconButton-root list__buttonMenu"
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "focusVisible": "Mui-focusVisible",
                                        "root": "MuiButtonBase-root",
                                      }
                                    }
                                    disabled={false}
                                    focusRipple={true}
                                    onClick={[Function]}
                                  >
                                    <button
                                      aria-controls="simple-menu"
                                      aria-haspopup="true"
                                      className="MuiButtonBase-root MuiIconButton-root list__buttonMenu"
                                      disabled={false}
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={0}
                                      type="button"
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <ForwardRef(MoreVertIcon)>
                                          <WithStyles(ForwardRef(SvgIcon))>
                                            <ForwardRef(SvgIcon)
                                              classes={
                                                Object {
                                                  "colorAction": "MuiSvgIcon-colorAction",
                                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                  "colorError": "MuiSvgIcon-colorError",
                                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                  "root": "MuiSvgIcon-root",
                                                }
                                              }
                                            >
                                              <svg
                                                aria-hidden={true}
                                                className="MuiSvgIcon-root"
                                                focusable="false"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                                />
                                              </svg>
                                            </ForwardRef(SvgIcon)>
                                          </WithStyles(ForwardRef(SvgIcon))>
                                        </ForwardRef(MoreVertIcon)>
                                      </span>
                                      <WithStyles(memo)
                                        center={true}
                                      >
                                        <ForwardRef(TouchRipple)
                                          center={true}
                                          classes={
                                            Object {
                                              "child": "MuiTouchRipple-child",
                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                              "ripple": "MuiTouchRipple-ripple",
                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                              "root": "MuiTouchRipple-root",
                                            }
                                          }
                                        >
                                          <span
                                            className="MuiTouchRipple-root"
                                          >
                                            <TransitionGroup
                                              childFactory={[Function]}
                                              component={null}
                                              exit={true}
                                            />
                                          </span>
                                        </ForwardRef(TouchRipple)>
                                      </WithStyles(memo)>
                                    </button>
                                  </ForwardRef(ButtonBase)>
                                </WithStyles(ForwardRef(ButtonBase))>
                              </ForwardRef(IconButton)>
                            </WithStyles(ForwardRef(IconButton))>
                            <WithStyles(ForwardRef(Menu))
                              TransitionComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "propTypes": Object {
                                    "children": [Function],
                                    "disableStrictModeCompat": [Function],
                                    "in": [Function],
                                    "onEnter": [Function],
                                    "onEntered": [Function],
                                    "onEntering": [Function],
                                    "onExit": [Function],
                                    "onExited": [Function],
                                    "onExiting": [Function],
                                    "style": [Function],
                                    "timeout": [Function],
                                  },
                                  "render": [Function],
                                }
                              }
                              anchorEl={null}
                              id="simple-menu"
                              keepMounted={true}
                              onClose={[Function]}
                              open={false}
                            >
                              <ForwardRef(Menu)
                                TransitionComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "propTypes": Object {
                                      "children": [Function],
                                      "disableStrictModeCompat": [Function],
                                      "in": [Function],
                                      "onEnter": [Function],
                                      "onEntered": [Function],
                                      "onEntering": [Function],
                                      "onExit": [Function],
                                      "onExited": [Function],
                                      "onExiting": [Function],
                                      "style": [Function],
                                      "timeout": [Function],
                                    },
                                    "render": [Function],
                                  }
                                }
                                anchorEl={null}
                                classes={
                                  Object {
                                    "list": "MuiMenu-list",
                                    "paper": "MuiMenu-paper",
                                  }
                                }
                                id="simple-menu"
                                keepMounted={true}
                                onClose={[Function]}
                                open={false}
                              >
                                <WithStyles(ForwardRef(Popover))
                                  PaperProps={
                                    Object {
                                      "classes": Object {
                                        "root": "MuiMenu-paper",
                                      },
                                    }
                                  }
                                  TransitionComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "propTypes": Object {
                                        "children": [Function],
                                        "disableStrictModeCompat": [Function],
                                        "in": [Function],
                                        "onEnter": [Function],
                                        "onEntered": [Function],
                                        "onEntering": [Function],
                                        "onExit": [Function],
                                        "onExited": [Function],
                                        "onExiting": [Function],
                                        "style": [Function],
                                        "timeout": [Function],
                                      },
                                      "render": [Function],
                                    }
                                  }
                                  TransitionProps={
                                    Object {
                                      "onEntering": [Function],
                                    }
                                  }
                                  anchorEl={null}
                                  anchorOrigin={
                                    Object {
                                      "horizontal": "left",
                                      "vertical": "top",
                                    }
                                  }
                                  getContentAnchorEl={[Function]}
                                  id="simple-menu"
                                  keepMounted={true}
                                  onClose={[Function]}
                                  open={false}
                                  transformOrigin={
                                    Object {
                                      "horizontal": "left",
                                      "vertical": "top",
                                    }
                                  }
                                  transitionDuration="auto"
                                >
                                  <ForwardRef(Popover)
                                    PaperProps={
                                      Object {
                                        "classes": Object {
                                          "root": "MuiMenu-paper",
                                        },
                                      }
                                    }
                                    TransitionComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "propTypes": Object {
                                          "children": [Function],
                                          "disableStrictModeCompat": [Function],
                                          "in": [Function],
                                          "onEnter": [Function],
                                          "onEntered": [Function],
                                          "onEntering": [Function],
                                          "onExit": [Function],
                                          "onExited": [Function],
                                          "onExiting": [Function],
                                          "style": [Function],
                                          "timeout": [Function],
                                        },
                                        "render": [Function],
                                      }
                                    }
                                    TransitionProps={
                                      Object {
                                        "onEntering": [Function],
                                      }
                                    }
                                    anchorEl={null}
                                    anchorOrigin={
                                      Object {
                                        "horizontal": "left",
                                        "vertical": "top",
                                      }
                                    }
                                    classes={
                                      Object {
                                        "paper": "MuiPopover-paper",
                                        "root": "MuiPopover-root",
                                      }
                                    }
                                    getContentAnchorEl={[Function]}
                                    id="simple-menu"
                                    keepMounted={true}
                                    onClose={[Function]}
                                    open={false}
                                    transformOrigin={
                                      Object {
                                        "horizontal": "left",
                                        "vertical": "top",
                                      }
                                    }
                                    transitionDuration="auto"
                                  >
                                    <ForwardRef(Modal)
                                      BackdropProps={
                                        Object {
                                          "invisible": true,
                                        }
                                      }
                                      className="MuiPopover-root"
                                      id="simple-menu"
                                      keepMounted={true}
                                      onClose={[Function]}
                                      open={false}
                                    >
                                      <ForwardRef(Portal)
                                        disablePortal={false}
                                      >
                                        <Portal
                                          containerInfo={
                                            <body
                                              style=""
                                            >
                                              <div
                                                aria-hidden="true"
                                                class="MuiPopover-root"
                                                id="simple-menu"
                                                role="presentation"
                                                style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px; visibility: hidden;"
                                              >
                                                <div
                                                  data-test="sentinelStart"
                                                  tabindex="0"
                                                />
                                                <div
                                                  class="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                                  style="opacity: 0; visibility: hidden;"
                                                  tabindex="-1"
                                                >
                                                  <ul
                                                    class="MuiList-root MuiMenu-list MuiList-padding"
                                                    role="menu"
                                                    tabindex="-1"
                                                  >
                                                    <li
                                                      aria-disabled="false"
                                                      class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_edit MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                      role="menuitem"
                                                      tabindex="0"
                                                    >
                                                      Редактировать
                                                      <span
                                                        class="MuiTouchRipple-root"
                                                      />
                                                    </li>
                                                    <li
                                                      aria-disabled="false"
                                                      class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_delete MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                      role="menuitem"
                                                      tabindex="-1"
                                                    >
                                                      Удалить
                                                      <span
                                                        class="MuiTouchRipple-root"
                                                      />
                                                    </li>
                                                  </ul>
                                                </div>
                                                <div
                                                  data-test="sentinelEnd"
                                                  tabindex="0"
                                                />
                                              </div>
                                              <div
                                                aria-hidden="true"
                                                class="MuiPopover-root"
                                                id="simple-menu"
                                                role="presentation"
                                                style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                                              >
                                                <div
                                                  data-test="sentinelStart"
                                                  tabindex="0"
                                                />
                                                <div
                                                  class="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                                  style="opacity: 0; webkit-transition: opacity 195ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 195ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; top: 16px; left: 16px; transform-origin: -16px -16px;"
                                                  tabindex="-1"
                                                >
                                                  <ul
                                                    class="MuiList-root MuiMenu-list MuiList-padding"
                                                    role="menu"
                                                    tabindex="-1"
                                                  >
                                                    <li
                                                      aria-disabled="false"
                                                      class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_edit MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button Mui-focusVisible Mui-focusVisible"
                                                      role="menuitem"
                                                      tabindex="0"
                                                    >
                                                      Редактировать
                                                      <span
                                                        class="MuiTouchRipple-root"
                                                      />
                                                    </li>
                                                    <li
                                                      aria-disabled="false"
                                                      class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_delete MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                      role="menuitem"
                                                      tabindex="-1"
                                                    >
                                                      Удалить
                                                      <span
                                                        class="MuiTouchRipple-root"
                                                      />
                                                    </li>
                                                  </ul>
                                                </div>
                                                <div
                                                  data-test="sentinelEnd"
                                                  tabindex="0"
                                                />
                                              </div>
                                            </body>
                                          }
                                        >
                                          <div
                                            className="MuiPopover-root"
                                            id="simple-menu"
                                            onKeyDown={[Function]}
                                            role="presentation"
                                            style={
                                              Object {
                                                "bottom": 0,
                                                "left": 0,
                                                "position": "fixed",
                                                "right": 0,
                                                "top": 0,
                                                "zIndex": 1300,
                                              }
                                            }
                                          >
                                            <ForwardRef(SimpleBackdrop)
                                              invisible={true}
                                              onClick={[Function]}
                                              open={false}
                                            />
                                            <Unstable_TrapFocus
                                              disableAutoFocus={false}
                                              disableEnforceFocus={false}
                                              disableRestoreFocus={false}
                                              getDoc={[Function]}
                                              isEnabled={[Function]}
                                              open={false}
                                            >
                                              <div
                                                data-test="sentinelStart"
                                                tabIndex={0}
                                              />
                                              <ForwardRef(Fade)
                                                appear={true}
                                                in={false}
                                                onEnter={[Function]}
                                                onEntering={[Function]}
                                                onExited={[Function]}
                                                tabIndex="-1"
                                              >
                                                <Transition
                                                  appear={true}
                                                  enter={true}
                                                  exit={true}
                                                  in={false}
                                                  mountOnEnter={false}
                                                  onEnter={[Function]}
                                                  onEntered={[Function]}
                                                  onEntering={[Function]}
                                                  onExit={[Function]}
                                                  onExited={[Function]}
                                                  onExiting={[Function]}
                                                  tabIndex="-1"
                                                  timeout={
                                                    Object {
                                                      "enter": 225,
                                                      "exit": 195,
                                                    }
                                                  }
                                                  unmountOnExit={false}
                                                >
                                                  <WithStyles(ForwardRef(Paper))
                                                    className="MuiPopover-paper"
                                                    classes={
                                                      Object {
                                                        "root": "MuiMenu-paper",
                                                      }
                                                    }
                                                    elevation={8}
                                                    style={
                                                      Object {
                                                        "opacity": 0,
                                                        "visibility": undefined,
                                                      }
                                                    }
                                                    tabIndex="-1"
                                                  >
                                                    <ForwardRef(Paper)
                                                      className="MuiPopover-paper"
                                                      classes={
                                                        Object {
                                                          "elevation0": "MuiPaper-elevation0",
                                                          "elevation1": "MuiPaper-elevation1",
                                                          "elevation10": "MuiPaper-elevation10",
                                                          "elevation11": "MuiPaper-elevation11",
                                                          "elevation12": "MuiPaper-elevation12",
                                                          "elevation13": "MuiPaper-elevation13",
                                                          "elevation14": "MuiPaper-elevation14",
                                                          "elevation15": "MuiPaper-elevation15",
                                                          "elevation16": "MuiPaper-elevation16",
                                                          "elevation17": "MuiPaper-elevation17",
                                                          "elevation18": "MuiPaper-elevation18",
                                                          "elevation19": "MuiPaper-elevation19",
                                                          "elevation2": "MuiPaper-elevation2",
                                                          "elevation20": "MuiPaper-elevation20",
                                                          "elevation21": "MuiPaper-elevation21",
                                                          "elevation22": "MuiPaper-elevation22",
                                                          "elevation23": "MuiPaper-elevation23",
                                                          "elevation24": "MuiPaper-elevation24",
                                                          "elevation3": "MuiPaper-elevation3",
                                                          "elevation4": "MuiPaper-elevation4",
                                                          "elevation5": "MuiPaper-elevation5",
                                                          "elevation6": "MuiPaper-elevation6",
                                                          "elevation7": "MuiPaper-elevation7",
                                                          "elevation8": "MuiPaper-elevation8",
                                                          "elevation9": "MuiPaper-elevation9",
                                                          "outlined": "MuiPaper-outlined",
                                                          "root": "MuiPaper-root MuiMenu-paper",
                                                          "rounded": "MuiPaper-rounded",
                                                        }
                                                      }
                                                      elevation={8}
                                                      style={
                                                        Object {
                                                          "opacity": 0,
                                                          "visibility": undefined,
                                                        }
                                                      }
                                                      tabIndex="-1"
                                                    >
                                                      <div
                                                        className="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                                        style={
                                                          Object {
                                                            "opacity": 0,
                                                            "visibility": undefined,
                                                          }
                                                        }
                                                        tabIndex="-1"
                                                      >
                                                        <ForwardRef(MenuList)
                                                          actions={
                                                            Object {
                                                              "current": Object {
                                                                "adjustStyleForScrollbar": [Function],
                                                              },
                                                            }
                                                          }
                                                          autoFocus={false}
                                                          autoFocusItem={false}
                                                          className="MuiMenu-list"
                                                          onKeyDown={[Function]}
                                                          variant="selectedMenu"
                                                        >
                                                          <WithStyles(ForwardRef(List))
                                                            className="MuiMenu-list"
                                                            onKeyDown={[Function]}
                                                            role="menu"
                                                            tabIndex={-1}
                                                          >
                                                            <ForwardRef(List)
                                                              className="MuiMenu-list"
                                                              classes={
                                                                Object {
                                                                  "dense": "MuiList-dense",
                                                                  "padding": "MuiList-padding",
                                                                  "root": "MuiList-root",
                                                                  "subheader": "MuiList-subheader",
                                                                }
                                                              }
                                                              onKeyDown={[Function]}
                                                              role="menu"
                                                              tabIndex={-1}
                                                            >
                                                              <ul
                                                                className="MuiList-root MuiMenu-list MuiList-padding"
                                                                onKeyDown={[Function]}
                                                                role="menu"
                                                                tabIndex={-1}
                                                              >
                                                                <WithStyles(ForwardRef(MenuItem))
                                                                  className="ListItem_edit"
                                                                  key=".$.0"
                                                                  onClick={[Function]}
                                                                  tabIndex={0}
                                                                >
                                                                  <ForwardRef(MenuItem)
                                                                    className="ListItem_edit"
                                                                    classes={
                                                                      Object {
                                                                        "dense": "MuiMenuItem-dense",
                                                                        "gutters": "MuiMenuItem-gutters",
                                                                        "root": "MuiMenuItem-root",
                                                                        "selected": "Mui-selected",
                                                                      }
                                                                    }
                                                                    onClick={[Function]}
                                                                    tabIndex={0}
                                                                  >
                                                                    <WithStyles(ForwardRef(ListItem))
                                                                      button={true}
                                                                      className="MuiMenuItem-root ListItem_edit MuiMenuItem-gutters"
                                                                      classes={
                                                                        Object {
                                                                          "dense": "MuiMenuItem-dense",
                                                                        }
                                                                      }
                                                                      component="li"
                                                                      disableGutters={false}
                                                                      onClick={[Function]}
                                                                      role="menuitem"
                                                                      tabIndex={0}
                                                                    >
                                                                      <ForwardRef(ListItem)
                                                                        button={true}
                                                                        className="MuiMenuItem-root ListItem_edit MuiMenuItem-gutters"
                                                                        classes={
                                                                          Object {
                                                                            "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                                            "button": "MuiListItem-button",
                                                                            "container": "MuiListItem-container",
                                                                            "dense": "MuiListItem-dense MuiMenuItem-dense",
                                                                            "disabled": "Mui-disabled",
                                                                            "divider": "MuiListItem-divider",
                                                                            "focusVisible": "Mui-focusVisible",
                                                                            "gutters": "MuiListItem-gutters",
                                                                            "root": "MuiListItem-root",
                                                                            "secondaryAction": "MuiListItem-secondaryAction",
                                                                            "selected": "Mui-selected",
                                                                          }
                                                                        }
                                                                        component="li"
                                                                        disableGutters={false}
                                                                        onClick={[Function]}
                                                                        role="menuitem"
                                                                        tabIndex={0}
                                                                      >
                                                                        <WithStyles(ForwardRef(ButtonBase))
                                                                          className="MuiListItem-root MuiMenuItem-root ListItem_edit MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                          component="li"
                                                                          disabled={false}
                                                                          focusVisibleClassName="Mui-focusVisible"
                                                                          onClick={[Function]}
                                                                          role="menuitem"
                                                                          tabIndex={0}
                                                                        >
                                                                          <ForwardRef(ButtonBase)
                                                                            className="MuiListItem-root MuiMenuItem-root ListItem_edit MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                            classes={
                                                                              Object {
                                                                                "disabled": "Mui-disabled",
                                                                                "focusVisible": "Mui-focusVisible",
                                                                                "root": "MuiButtonBase-root",
                                                                              }
                                                                            }
                                                                            component="li"
                                                                            disabled={false}
                                                                            focusVisibleClassName="Mui-focusVisible"
                                                                            onClick={[Function]}
                                                                            role="menuitem"
                                                                            tabIndex={0}
                                                                          >
                                                                            <li
                                                                              aria-disabled={false}
                                                                              className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_edit MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button Mui-focusVisible Mui-focusVisible"
                                                                              onBlur={[Function]}
                                                                              onClick={[Function]}
                                                                              onDragLeave={[Function]}
                                                                              onFocus={[Function]}
                                                                              onKeyDown={[Function]}
                                                                              onKeyUp={[Function]}
                                                                              onMouseDown={[Function]}
                                                                              onMouseLeave={[Function]}
                                                                              onMouseUp={[Function]}
                                                                              onTouchEnd={[Function]}
                                                                              onTouchMove={[Function]}
                                                                              onTouchStart={[Function]}
                                                                              role="menuitem"
                                                                              tabIndex={0}
                                                                            >
                                                                              Редактировать
                                                                              <WithStyles(memo)
                                                                                center={false}
                                                                              >
                                                                                <ForwardRef(TouchRipple)
                                                                                  center={false}
                                                                                  classes={
                                                                                    Object {
                                                                                      "child": "MuiTouchRipple-child",
                                                                                      "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                      "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                      "ripple": "MuiTouchRipple-ripple",
                                                                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                      "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                      "root": "MuiTouchRipple-root",
                                                                                    }
                                                                                  }
                                                                                >
                                                                                  <span
                                                                                    className="MuiTouchRipple-root"
                                                                                  >
                                                                                    <TransitionGroup
                                                                                      childFactory={[Function]}
                                                                                      component={null}
                                                                                      exit={true}
                                                                                    />
                                                                                  </span>
                                                                                </ForwardRef(TouchRipple)>
                                                                              </WithStyles(memo)>
                                                                            </li>
                                                                          </ForwardRef(ButtonBase)>
                                                                        </WithStyles(ForwardRef(ButtonBase))>
                                                                      </ForwardRef(ListItem)>
                                                                    </WithStyles(ForwardRef(ListItem))>
                                                                  </ForwardRef(MenuItem)>
                                                                </WithStyles(ForwardRef(MenuItem))>
                                                                <WithStyles(ForwardRef(MenuItem))
                                                                  className="ListItem_delete"
                                                                  key=".$.1"
                                                                  onClick={[Function]}
                                                                >
                                                                  <ForwardRef(MenuItem)
                                                                    className="ListItem_delete"
                                                                    classes={
                                                                      Object {
                                                                        "dense": "MuiMenuItem-dense",
                                                                        "gutters": "MuiMenuItem-gutters",
                                                                        "root": "MuiMenuItem-root",
                                                                        "selected": "Mui-selected",
                                                                      }
                                                                    }
                                                                    onClick={[Function]}
                                                                  >
                                                                    <WithStyles(ForwardRef(ListItem))
                                                                      button={true}
                                                                      className="MuiMenuItem-root ListItem_delete MuiMenuItem-gutters"
                                                                      classes={
                                                                        Object {
                                                                          "dense": "MuiMenuItem-dense",
                                                                        }
                                                                      }
                                                                      component="li"
                                                                      disableGutters={false}
                                                                      onClick={[Function]}
                                                                      role="menuitem"
                                                                      tabIndex={-1}
                                                                    >
                                                                      <ForwardRef(ListItem)
                                                                        button={true}
                                                                        className="MuiMenuItem-root ListItem_delete MuiMenuItem-gutters"
                                                                        classes={
                                                                          Object {
                                                                            "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                                            "button": "MuiListItem-button",
                                                                            "container": "MuiListItem-container",
                                                                            "dense": "MuiListItem-dense MuiMenuItem-dense",
                                                                            "disabled": "Mui-disabled",
                                                                            "divider": "MuiListItem-divider",
                                                                            "focusVisible": "Mui-focusVisible",
                                                                            "gutters": "MuiListItem-gutters",
                                                                            "root": "MuiListItem-root",
                                                                            "secondaryAction": "MuiListItem-secondaryAction",
                                                                            "selected": "Mui-selected",
                                                                          }
                                                                        }
                                                                        component="li"
                                                                        disableGutters={false}
                                                                        onClick={[Function]}
                                                                        role="menuitem"
                                                                        tabIndex={-1}
                                                                      >
                                                                        <WithStyles(ForwardRef(ButtonBase))
                                                                          className="MuiListItem-root MuiMenuItem-root ListItem_delete MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                          component="li"
                                                                          disabled={false}
                                                                          focusVisibleClassName="Mui-focusVisible"
                                                                          onClick={[Function]}
                                                                          role="menuitem"
                                                                          tabIndex={-1}
                                                                        >
                                                                          <ForwardRef(ButtonBase)
                                                                            className="MuiListItem-root MuiMenuItem-root ListItem_delete MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                            classes={
                                                                              Object {
                                                                                "disabled": "Mui-disabled",
                                                                                "focusVisible": "Mui-focusVisible",
                                                                                "root": "MuiButtonBase-root",
                                                                              }
                                                                            }
                                                                            component="li"
                                                                            disabled={false}
                                                                            focusVisibleClassName="Mui-focusVisible"
                                                                            onClick={[Function]}
                                                                            role="menuitem"
                                                                            tabIndex={-1}
                                                                          >
                                                                            <li
                                                                              aria-disabled={false}
                                                                              className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_delete MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                              onBlur={[Function]}
                                                                              onClick={[Function]}
                                                                              onDragLeave={[Function]}
                                                                              onFocus={[Function]}
                                                                              onKeyDown={[Function]}
                                                                              onKeyUp={[Function]}
                                                                              onMouseDown={[Function]}
                                                                              onMouseLeave={[Function]}
                                                                              onMouseUp={[Function]}
                                                                              onTouchEnd={[Function]}
                                                                              onTouchMove={[Function]}
                                                                              onTouchStart={[Function]}
                                                                              role="menuitem"
                                                                              tabIndex={-1}
                                                                            >
                                                                              Удалить
                                                                              <WithStyles(memo)
                                                                                center={false}
                                                                              >
                                                                                <ForwardRef(TouchRipple)
                                                                                  center={false}
                                                                                  classes={
                                                                                    Object {
                                                                                      "child": "MuiTouchRipple-child",
                                                                                      "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                      "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                      "ripple": "MuiTouchRipple-ripple",
                                                                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                      "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                      "root": "MuiTouchRipple-root",
                                                                                    }
                                                                                  }
                                                                                >
                                                                                  <span
                                                                                    className="MuiTouchRipple-root"
                                                                                  >
                                                                                    <TransitionGroup
                                                                                      childFactory={[Function]}
                                                                                      component={null}
                                                                                      exit={true}
                                                                                    />
                                                                                  </span>
                                                                                </ForwardRef(TouchRipple)>
                                                                              </WithStyles(memo)>
                                                                            </li>
                                                                          </ForwardRef(ButtonBase)>
                                                                        </WithStyles(ForwardRef(ButtonBase))>
                                                                      </ForwardRef(ListItem)>
                                                                    </WithStyles(ForwardRef(ListItem))>
                                                                  </ForwardRef(MenuItem)>
                                                                </WithStyles(ForwardRef(MenuItem))>
                                                              </ul>
                                                            </ForwardRef(List)>
                                                          </WithStyles(ForwardRef(List))>
                                                        </ForwardRef(MenuList)>
                                                      </div>
                                                    </ForwardRef(Paper)>
                                                  </WithStyles(ForwardRef(Paper))>
                                                </Transition>
                                              </ForwardRef(Fade)>
                                              <div
                                                data-test="sentinelEnd"
                                                tabIndex={0}
                                              />
                                            </Unstable_TrapFocus>
                                          </div>
                                        </Portal>
                                      </ForwardRef(Portal)>
                                    </ForwardRef(Modal)>
                                  </ForwardRef(Popover)>
                                </WithStyles(ForwardRef(Popover))>
                              </ForwardRef(Menu)>
                            </WithStyles(ForwardRef(Menu))>
                          </div>
                          <WithStyles(memo)
                            center={false}
                          >
                            <ForwardRef(TouchRipple)
                              center={false}
                              classes={
                                Object {
                                  "child": "MuiTouchRipple-child",
                                  "childLeaving": "MuiTouchRipple-childLeaving",
                                  "childPulsate": "MuiTouchRipple-childPulsate",
                                  "ripple": "MuiTouchRipple-ripple",
                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                  "rippleVisible": "MuiTouchRipple-rippleVisible",
                                  "root": "MuiTouchRipple-root",
                                }
                              }
                            >
                              <span
                                className="MuiTouchRipple-root"
                              >
                                <TransitionGroup
                                  childFactory={[Function]}
                                  component={null}
                                  exit={true}
                                />
                              </span>
                            </ForwardRef(TouchRipple)>
                          </WithStyles(memo)>
                        </div>
                      </ForwardRef(ButtonBase)>
                    </WithStyles(ForwardRef(ButtonBase))>
                  </ForwardRef(ListItem)>
                </WithStyles(ForwardRef(ListItem))>
              </div>
            </Memo(List)>
          </Connect(Component)>
        </div>
        <div
          className="lists__addListButton"
          onClick={[Function]}
        >
          <WithStyles(ForwardRef(IconButton))
            aria-label="add List"
            color="inherit"
          >
            <ForwardRef(IconButton)
              aria-label="add List"
              classes={
                Object {
                  "colorInherit": "MuiIconButton-colorInherit",
                  "colorPrimary": "MuiIconButton-colorPrimary",
                  "colorSecondary": "MuiIconButton-colorSecondary",
                  "disabled": "Mui-disabled",
                  "edgeEnd": "MuiIconButton-edgeEnd",
                  "edgeStart": "MuiIconButton-edgeStart",
                  "label": "MuiIconButton-label",
                  "root": "MuiIconButton-root",
                  "sizeSmall": "MuiIconButton-sizeSmall",
                }
              }
              color="inherit"
            >
              <WithStyles(ForwardRef(ButtonBase))
                aria-label="add List"
                centerRipple={true}
                className="MuiIconButton-root MuiIconButton-colorInherit"
                disabled={false}
                focusRipple={true}
              >
                <ForwardRef(ButtonBase)
                  aria-label="add List"
                  centerRipple={true}
                  className="MuiIconButton-root MuiIconButton-colorInherit"
                  classes={
                    Object {
                      "disabled": "Mui-disabled",
                      "focusVisible": "Mui-focusVisible",
                      "root": "MuiButtonBase-root",
                    }
                  }
                  disabled={false}
                  focusRipple={true}
                >
                  <button
                    aria-label="add List"
                    className="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit"
                    disabled={false}
                    onBlur={[Function]}
                    onDragLeave={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    onKeyUp={[Function]}
                    onMouseDown={[Function]}
                    onMouseLeave={[Function]}
                    onMouseUp={[Function]}
                    onTouchEnd={[Function]}
                    onTouchMove={[Function]}
                    onTouchStart={[Function]}
                    tabIndex={0}
                    type="button"
                  >
                    <span
                      className="MuiIconButton-label"
                    >
                      <ForwardRef(PlaylistAddIcon)
                        fontSize="medium"
                      >
                        <WithStyles(ForwardRef(SvgIcon))
                          fontSize="medium"
                        >
                          <ForwardRef(SvgIcon)
                            classes={
                              Object {
                                "colorAction": "MuiSvgIcon-colorAction",
                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                "colorError": "MuiSvgIcon-colorError",
                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                "root": "MuiSvgIcon-root",
                              }
                            }
                            fontSize="medium"
                          >
                            <svg
                              aria-hidden={true}
                              className="MuiSvgIcon-root"
                              focusable="false"
                              viewBox="0 0 24 24"
                            >
                              <path
                                d="M14 10H2v2h12v-2zm0-4H2v2h12V6zm4 8v-4h-2v4h-4v2h4v4h2v-4h4v-2h-4zM2 16h8v-2H2v2z"
                              />
                            </svg>
                          </ForwardRef(SvgIcon)>
                        </WithStyles(ForwardRef(SvgIcon))>
                      </ForwardRef(PlaylistAddIcon)>
                    </span>
                    <WithStyles(memo)
                      center={true}
                    >
                      <ForwardRef(TouchRipple)
                        center={true}
                        classes={
                          Object {
                            "child": "MuiTouchRipple-child",
                            "childLeaving": "MuiTouchRipple-childLeaving",
                            "childPulsate": "MuiTouchRipple-childPulsate",
                            "ripple": "MuiTouchRipple-ripple",
                            "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                            "rippleVisible": "MuiTouchRipple-rippleVisible",
                            "root": "MuiTouchRipple-root",
                          }
                        }
                      >
                        <span
                          className="MuiTouchRipple-root"
                        >
                          <TransitionGroup
                            childFactory={[Function]}
                            component={null}
                            exit={true}
                          />
                        </span>
                      </ForwardRef(TouchRipple)>
                    </WithStyles(memo)>
                  </button>
                </ForwardRef(ButtonBase)>
              </WithStyles(ForwardRef(ButtonBase))>
            </ForwardRef(IconButton)>
          </WithStyles(ForwardRef(IconButton))>
          <span>
            Добавить список
          </span>
        </div>
      </div>
    </Memo(Lists)>
  </Connect(Component)>
</Provider>
`;

exports[`Checking the list change 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(Component)>
    <Memo(Lists)
      addToDoListAC={[Function]}
      lists={
        Array [
          Object {
            "id": 1,
            "label": "Магазин",
            "toDoList": Array [],
          },
        ]
      }
      updateActiveTodoListIdAC={[Function]}
    >
      <div
        className="lists__close-wrapper null"
        onClick={[Function]}
      />
      <div
        className="lists null"
      >
        <input
          checked={false}
          className="hidden-menu-ticker"
          id="hmt"
          readOnly={true}
          type="checkbox"
        />
        <label
          className="btn-menu toggleMenu null"
          htmlFor="hmt"
          onClick={[Function]}
        >
          <span
            className="first"
          />
          <span
            className="second"
          />
          <span
            className="third"
          />
        </label>
        <h1
          className="lists_main"
          onClick={[Function]}
        >
          <ForwardRef(HomeIcon)>
            <WithStyles(ForwardRef(SvgIcon))>
              <ForwardRef(SvgIcon)
                classes={
                  Object {
                    "colorAction": "MuiSvgIcon-colorAction",
                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                    "colorError": "MuiSvgIcon-colorError",
                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                    "root": "MuiSvgIcon-root",
                  }
                }
              >
                <svg
                  aria-hidden={true}
                  className="MuiSvgIcon-root"
                  focusable="false"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z"
                  />
                </svg>
              </ForwardRef(SvgIcon)>
            </WithStyles(ForwardRef(SvgIcon))>
          </ForwardRef(HomeIcon)>
          <span>
            Главная
          </span>
        </h1>
        <h2
          className="lists__title"
        >
          <ForwardRef(FormatListBulletedIcon)>
            <WithStyles(ForwardRef(SvgIcon))>
              <ForwardRef(SvgIcon)
                classes={
                  Object {
                    "colorAction": "MuiSvgIcon-colorAction",
                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                    "colorError": "MuiSvgIcon-colorError",
                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                    "root": "MuiSvgIcon-root",
                  }
                }
              >
                <svg
                  aria-hidden={true}
                  className="MuiSvgIcon-root"
                  focusable="false"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M4 10.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm0-6c-.83 0-1.5.67-1.5 1.5S3.17 7.5 4 7.5 5.5 6.83 5.5 6 4.83 4.5 4 4.5zm0 12c-.83 0-1.5.68-1.5 1.5s.68 1.5 1.5 1.5 1.5-.68 1.5-1.5-.67-1.5-1.5-1.5zM7 19h14v-2H7v2zm0-6h14v-2H7v2zm0-8v2h14V5H7z"
                  />
                </svg>
              </ForwardRef(SvgIcon)>
            </WithStyles(ForwardRef(SvgIcon))>
          </ForwardRef(FormatListBulletedIcon)>
          <span>
            Списки:
          </span>
        </h2>
        <div
          className="lists__renderList null"
        >
          <Connect(Component)
            id={1}
            key="1"
            label="Магазин"
            needsDone={0}
            toggleDrawer={[Function]}
          >
            <Memo(List)
              activeToDoListId={null}
              deleteToDoListAC={[Function]}
              id={1}
              label="Магазин"
              needsDone={0}
              toggleDrawer={[Function]}
              updateActiveTodoListIdAC={[Function]}
              updateToDoListLabelAC={[Function]}
            >
              <div>
                <WithStyles(ForwardRef(ListItem))
                  button={true}
                  className="list__item"
                  onClick={[Function]}
                >
                  <ForwardRef(ListItem)
                    button={true}
                    className="list__item"
                    classes={
                      Object {
                        "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                        "button": "MuiListItem-button",
                        "container": "MuiListItem-container",
                        "dense": "MuiListItem-dense",
                        "disabled": "Mui-disabled",
                        "divider": "MuiListItem-divider",
                        "focusVisible": "Mui-focusVisible",
                        "gutters": "MuiListItem-gutters",
                        "root": "MuiListItem-root",
                        "secondaryAction": "MuiListItem-secondaryAction",
                        "selected": "Mui-selected",
                      }
                    }
                    onClick={[Function]}
                  >
                    <WithStyles(ForwardRef(ButtonBase))
                      className="MuiListItem-root list__item MuiListItem-gutters MuiListItem-button"
                      component="div"
                      disabled={false}
                      focusVisibleClassName="Mui-focusVisible"
                      onClick={[Function]}
                    >
                      <ForwardRef(ButtonBase)
                        className="MuiListItem-root list__item MuiListItem-gutters MuiListItem-button"
                        classes={
                          Object {
                            "disabled": "Mui-disabled",
                            "focusVisible": "Mui-focusVisible",
                            "root": "MuiButtonBase-root",
                          }
                        }
                        component="div"
                        disabled={false}
                        focusVisibleClassName="Mui-focusVisible"
                        onClick={[Function]}
                      >
                        <div
                          aria-disabled={false}
                          className="MuiButtonBase-root MuiListItem-root list__item MuiListItem-gutters MuiListItem-button"
                          onBlur={[Function]}
                          onClick={[Function]}
                          onDragLeave={[Function]}
                          onFocus={[Function]}
                          onKeyDown={[Function]}
                          onKeyUp={[Function]}
                          onMouseDown={[Function]}
                          onMouseLeave={[Function]}
                          onMouseUp={[Function]}
                          onTouchEnd={[Function]}
                          onTouchMove={[Function]}
                          onTouchStart={[Function]}
                          role="button"
                          tabIndex={0}
                        >
                          <div
                            key=".0"
                          >
                            Магазин
                          </div>
                          <div
                            className="list__wrapper__list__buttonMenu"
                            key=".1"
                          >
                            <WithStyles(ForwardRef(IconButton))
                              aria-controls="simple-menu"
                              aria-haspopup="true"
                              className="list__buttonMenu"
                              onClick={[Function]}
                            >
                              <ForwardRef(IconButton)
                                aria-controls="simple-menu"
                                aria-haspopup="true"
                                className="list__buttonMenu"
                                classes={
                                  Object {
                                    "colorInherit": "MuiIconButton-colorInherit",
                                    "colorPrimary": "MuiIconButton-colorPrimary",
                                    "colorSecondary": "MuiIconButton-colorSecondary",
                                    "disabled": "Mui-disabled",
                                    "edgeEnd": "MuiIconButton-edgeEnd",
                                    "edgeStart": "MuiIconButton-edgeStart",
                                    "label": "MuiIconButton-label",
                                    "root": "MuiIconButton-root",
                                    "sizeSmall": "MuiIconButton-sizeSmall",
                                  }
                                }
                                onClick={[Function]}
                              >
                                <WithStyles(ForwardRef(ButtonBase))
                                  aria-controls="simple-menu"
                                  aria-haspopup="true"
                                  centerRipple={true}
                                  className="MuiIconButton-root list__buttonMenu"
                                  disabled={false}
                                  focusRipple={true}
                                  onClick={[Function]}
                                >
                                  <ForwardRef(ButtonBase)
                                    aria-controls="simple-menu"
                                    aria-haspopup="true"
                                    centerRipple={true}
                                    className="MuiIconButton-root list__buttonMenu"
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "focusVisible": "Mui-focusVisible",
                                        "root": "MuiButtonBase-root",
                                      }
                                    }
                                    disabled={false}
                                    focusRipple={true}
                                    onClick={[Function]}
                                  >
                                    <button
                                      aria-controls="simple-menu"
                                      aria-haspopup="true"
                                      className="MuiButtonBase-root MuiIconButton-root list__buttonMenu"
                                      disabled={false}
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={0}
                                      type="button"
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <ForwardRef(MoreVertIcon)>
                                          <WithStyles(ForwardRef(SvgIcon))>
                                            <ForwardRef(SvgIcon)
                                              classes={
                                                Object {
                                                  "colorAction": "MuiSvgIcon-colorAction",
                                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                  "colorError": "MuiSvgIcon-colorError",
                                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                  "root": "MuiSvgIcon-root",
                                                }
                                              }
                                            >
                                              <svg
                                                aria-hidden={true}
                                                className="MuiSvgIcon-root"
                                                focusable="false"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                                />
                                              </svg>
                                            </ForwardRef(SvgIcon)>
                                          </WithStyles(ForwardRef(SvgIcon))>
                                        </ForwardRef(MoreVertIcon)>
                                      </span>
                                      <WithStyles(memo)
                                        center={true}
                                      >
                                        <ForwardRef(TouchRipple)
                                          center={true}
                                          classes={
                                            Object {
                                              "child": "MuiTouchRipple-child",
                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                              "ripple": "MuiTouchRipple-ripple",
                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                              "root": "MuiTouchRipple-root",
                                            }
                                          }
                                        >
                                          <span
                                            className="MuiTouchRipple-root"
                                          >
                                            <TransitionGroup
                                              childFactory={[Function]}
                                              component={null}
                                              exit={true}
                                            />
                                          </span>
                                        </ForwardRef(TouchRipple)>
                                      </WithStyles(memo)>
                                    </button>
                                  </ForwardRef(ButtonBase)>
                                </WithStyles(ForwardRef(ButtonBase))>
                              </ForwardRef(IconButton)>
                            </WithStyles(ForwardRef(IconButton))>
                            <WithStyles(ForwardRef(Menu))
                              TransitionComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "propTypes": Object {
                                    "children": [Function],
                                    "disableStrictModeCompat": [Function],
                                    "in": [Function],
                                    "onEnter": [Function],
                                    "onEntered": [Function],
                                    "onEntering": [Function],
                                    "onExit": [Function],
                                    "onExited": [Function],
                                    "onExiting": [Function],
                                    "style": [Function],
                                    "timeout": [Function],
                                  },
                                  "render": [Function],
                                }
                              }
                              anchorEl={null}
                              id="simple-menu"
                              keepMounted={true}
                              onClose={[Function]}
                              open={false}
                            >
                              <ForwardRef(Menu)
                                TransitionComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "propTypes": Object {
                                      "children": [Function],
                                      "disableStrictModeCompat": [Function],
                                      "in": [Function],
                                      "onEnter": [Function],
                                      "onEntered": [Function],
                                      "onEntering": [Function],
                                      "onExit": [Function],
                                      "onExited": [Function],
                                      "onExiting": [Function],
                                      "style": [Function],
                                      "timeout": [Function],
                                    },
                                    "render": [Function],
                                  }
                                }
                                anchorEl={null}
                                classes={
                                  Object {
                                    "list": "MuiMenu-list",
                                    "paper": "MuiMenu-paper",
                                  }
                                }
                                id="simple-menu"
                                keepMounted={true}
                                onClose={[Function]}
                                open={false}
                              >
                                <WithStyles(ForwardRef(Popover))
                                  PaperProps={
                                    Object {
                                      "classes": Object {
                                        "root": "MuiMenu-paper",
                                      },
                                    }
                                  }
                                  TransitionComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "propTypes": Object {
                                        "children": [Function],
                                        "disableStrictModeCompat": [Function],
                                        "in": [Function],
                                        "onEnter": [Function],
                                        "onEntered": [Function],
                                        "onEntering": [Function],
                                        "onExit": [Function],
                                        "onExited": [Function],
                                        "onExiting": [Function],
                                        "style": [Function],
                                        "timeout": [Function],
                                      },
                                      "render": [Function],
                                    }
                                  }
                                  TransitionProps={
                                    Object {
                                      "onEntering": [Function],
                                    }
                                  }
                                  anchorEl={null}
                                  anchorOrigin={
                                    Object {
                                      "horizontal": "left",
                                      "vertical": "top",
                                    }
                                  }
                                  getContentAnchorEl={[Function]}
                                  id="simple-menu"
                                  keepMounted={true}
                                  onClose={[Function]}
                                  open={false}
                                  transformOrigin={
                                    Object {
                                      "horizontal": "left",
                                      "vertical": "top",
                                    }
                                  }
                                  transitionDuration="auto"
                                >
                                  <ForwardRef(Popover)
                                    PaperProps={
                                      Object {
                                        "classes": Object {
                                          "root": "MuiMenu-paper",
                                        },
                                      }
                                    }
                                    TransitionComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "propTypes": Object {
                                          "children": [Function],
                                          "disableStrictModeCompat": [Function],
                                          "in": [Function],
                                          "onEnter": [Function],
                                          "onEntered": [Function],
                                          "onEntering": [Function],
                                          "onExit": [Function],
                                          "onExited": [Function],
                                          "onExiting": [Function],
                                          "style": [Function],
                                          "timeout": [Function],
                                        },
                                        "render": [Function],
                                      }
                                    }
                                    TransitionProps={
                                      Object {
                                        "onEntering": [Function],
                                      }
                                    }
                                    anchorEl={null}
                                    anchorOrigin={
                                      Object {
                                        "horizontal": "left",
                                        "vertical": "top",
                                      }
                                    }
                                    classes={
                                      Object {
                                        "paper": "MuiPopover-paper",
                                        "root": "MuiPopover-root",
                                      }
                                    }
                                    getContentAnchorEl={[Function]}
                                    id="simple-menu"
                                    keepMounted={true}
                                    onClose={[Function]}
                                    open={false}
                                    transformOrigin={
                                      Object {
                                        "horizontal": "left",
                                        "vertical": "top",
                                      }
                                    }
                                    transitionDuration="auto"
                                  >
                                    <ForwardRef(Modal)
                                      BackdropProps={
                                        Object {
                                          "invisible": true,
                                        }
                                      }
                                      className="MuiPopover-root"
                                      id="simple-menu"
                                      keepMounted={true}
                                      onClose={[Function]}
                                      open={false}
                                    >
                                      <ForwardRef(Portal)
                                        disablePortal={false}
                                      >
                                        <Portal
                                          containerInfo={
                                            <body
                                              style=""
                                            >
                                              <div
                                                aria-hidden="true"
                                                class="MuiPopover-root"
                                                id="simple-menu"
                                                role="presentation"
                                                style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px; visibility: hidden;"
                                              >
                                                <div
                                                  data-test="sentinelStart"
                                                  tabindex="0"
                                                />
                                                <div
                                                  class="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                                  style="opacity: 0; visibility: hidden;"
                                                  tabindex="-1"
                                                >
                                                  <ul
                                                    class="MuiList-root MuiMenu-list MuiList-padding"
                                                    role="menu"
                                                    tabindex="-1"
                                                  >
                                                    <li
                                                      aria-disabled="false"
                                                      class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_edit MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                      role="menuitem"
                                                      tabindex="0"
                                                    >
                                                      Редактировать
                                                      <span
                                                        class="MuiTouchRipple-root"
                                                      />
                                                    </li>
                                                    <li
                                                      aria-disabled="false"
                                                      class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_delete MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                      role="menuitem"
                                                      tabindex="-1"
                                                    >
                                                      Удалить
                                                      <span
                                                        class="MuiTouchRipple-root"
                                                      />
                                                    </li>
                                                  </ul>
                                                </div>
                                                <div
                                                  data-test="sentinelEnd"
                                                  tabindex="0"
                                                />
                                              </div>
                                              <div
                                                aria-hidden="true"
                                                class="MuiPopover-root"
                                                id="simple-menu"
                                                role="presentation"
                                                style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                                              >
                                                <div
                                                  data-test="sentinelStart"
                                                  tabindex="0"
                                                />
                                                <div
                                                  class="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                                  style="opacity: 0; webkit-transition: opacity 195ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 195ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; top: 16px; left: 16px; transform-origin: -16px -16px;"
                                                  tabindex="-1"
                                                >
                                                  <ul
                                                    class="MuiList-root MuiMenu-list MuiList-padding"
                                                    role="menu"
                                                    tabindex="-1"
                                                  >
                                                    <li
                                                      aria-disabled="false"
                                                      class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_edit MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button Mui-focusVisible Mui-focusVisible"
                                                      role="menuitem"
                                                      tabindex="0"
                                                    >
                                                      Редактировать
                                                      <span
                                                        class="MuiTouchRipple-root"
                                                      />
                                                    </li>
                                                    <li
                                                      aria-disabled="false"
                                                      class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_delete MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                      role="menuitem"
                                                      tabindex="-1"
                                                    >
                                                      Удалить
                                                      <span
                                                        class="MuiTouchRipple-root"
                                                      />
                                                    </li>
                                                  </ul>
                                                </div>
                                                <div
                                                  data-test="sentinelEnd"
                                                  tabindex="0"
                                                />
                                              </div>
                                              <div
                                                aria-hidden="true"
                                                class="MuiPopover-root"
                                                id="simple-menu"
                                                role="presentation"
                                                style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px; visibility: hidden;"
                                              >
                                                <div
                                                  data-test="sentinelStart"
                                                  tabindex="0"
                                                />
                                                <div
                                                  class="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                                  style="opacity: 0; visibility: hidden;"
                                                  tabindex="-1"
                                                >
                                                  <ul
                                                    class="MuiList-root MuiMenu-list MuiList-padding"
                                                    role="menu"
                                                    tabindex="-1"
                                                  >
                                                    <li
                                                      aria-disabled="false"
                                                      class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_edit MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                      role="menuitem"
                                                      tabindex="0"
                                                    >
                                                      Редактировать
                                                      <span
                                                        class="MuiTouchRipple-root"
                                                      />
                                                    </li>
                                                    <li
                                                      aria-disabled="false"
                                                      class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_delete MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                      role="menuitem"
                                                      tabindex="-1"
                                                    >
                                                      Удалить
                                                      <span
                                                        class="MuiTouchRipple-root"
                                                      />
                                                    </li>
                                                  </ul>
                                                </div>
                                                <div
                                                  data-test="sentinelEnd"
                                                  tabindex="0"
                                                />
                                              </div>
                                            </body>
                                          }
                                        >
                                          <div
                                            className="MuiPopover-root"
                                            id="simple-menu"
                                            onKeyDown={[Function]}
                                            role="presentation"
                                            style={
                                              Object {
                                                "bottom": 0,
                                                "left": 0,
                                                "position": "fixed",
                                                "right": 0,
                                                "top": 0,
                                                "visibility": "hidden",
                                                "zIndex": 1300,
                                              }
                                            }
                                          >
                                            <ForwardRef(SimpleBackdrop)
                                              invisible={true}
                                              onClick={[Function]}
                                              open={false}
                                            />
                                            <Unstable_TrapFocus
                                              disableAutoFocus={false}
                                              disableEnforceFocus={false}
                                              disableRestoreFocus={false}
                                              getDoc={[Function]}
                                              isEnabled={[Function]}
                                              open={false}
                                            >
                                              <div
                                                data-test="sentinelStart"
                                                tabIndex={0}
                                              />
                                              <ForwardRef(Fade)
                                                appear={true}
                                                in={false}
                                                onEnter={[Function]}
                                                onEntering={[Function]}
                                                onExited={[Function]}
                                                tabIndex="-1"
                                              >
                                                <Transition
                                                  appear={true}
                                                  enter={true}
                                                  exit={true}
                                                  in={false}
                                                  mountOnEnter={false}
                                                  onEnter={[Function]}
                                                  onEntered={[Function]}
                                                  onEntering={[Function]}
                                                  onExit={[Function]}
                                                  onExited={[Function]}
                                                  onExiting={[Function]}
                                                  tabIndex="-1"
                                                  timeout={
                                                    Object {
                                                      "enter": 225,
                                                      "exit": 195,
                                                    }
                                                  }
                                                  unmountOnExit={false}
                                                >
                                                  <WithStyles(ForwardRef(Paper))
                                                    className="MuiPopover-paper"
                                                    classes={
                                                      Object {
                                                        "root": "MuiMenu-paper",
                                                      }
                                                    }
                                                    elevation={8}
                                                    style={
                                                      Object {
                                                        "opacity": 0,
                                                        "visibility": "hidden",
                                                      }
                                                    }
                                                    tabIndex="-1"
                                                  >
                                                    <ForwardRef(Paper)
                                                      className="MuiPopover-paper"
                                                      classes={
                                                        Object {
                                                          "elevation0": "MuiPaper-elevation0",
                                                          "elevation1": "MuiPaper-elevation1",
                                                          "elevation10": "MuiPaper-elevation10",
                                                          "elevation11": "MuiPaper-elevation11",
                                                          "elevation12": "MuiPaper-elevation12",
                                                          "elevation13": "MuiPaper-elevation13",
                                                          "elevation14": "MuiPaper-elevation14",
                                                          "elevation15": "MuiPaper-elevation15",
                                                          "elevation16": "MuiPaper-elevation16",
                                                          "elevation17": "MuiPaper-elevation17",
                                                          "elevation18": "MuiPaper-elevation18",
                                                          "elevation19": "MuiPaper-elevation19",
                                                          "elevation2": "MuiPaper-elevation2",
                                                          "elevation20": "MuiPaper-elevation20",
                                                          "elevation21": "MuiPaper-elevation21",
                                                          "elevation22": "MuiPaper-elevation22",
                                                          "elevation23": "MuiPaper-elevation23",
                                                          "elevation24": "MuiPaper-elevation24",
                                                          "elevation3": "MuiPaper-elevation3",
                                                          "elevation4": "MuiPaper-elevation4",
                                                          "elevation5": "MuiPaper-elevation5",
                                                          "elevation6": "MuiPaper-elevation6",
                                                          "elevation7": "MuiPaper-elevation7",
                                                          "elevation8": "MuiPaper-elevation8",
                                                          "elevation9": "MuiPaper-elevation9",
                                                          "outlined": "MuiPaper-outlined",
                                                          "root": "MuiPaper-root MuiMenu-paper",
                                                          "rounded": "MuiPaper-rounded",
                                                        }
                                                      }
                                                      elevation={8}
                                                      style={
                                                        Object {
                                                          "opacity": 0,
                                                          "visibility": "hidden",
                                                        }
                                                      }
                                                      tabIndex="-1"
                                                    >
                                                      <div
                                                        className="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                                        style={
                                                          Object {
                                                            "opacity": 0,
                                                            "visibility": "hidden",
                                                          }
                                                        }
                                                        tabIndex="-1"
                                                      >
                                                        <ForwardRef(MenuList)
                                                          actions={
                                                            Object {
                                                              "current": Object {
                                                                "adjustStyleForScrollbar": [Function],
                                                              },
                                                            }
                                                          }
                                                          autoFocus={false}
                                                          autoFocusItem={false}
                                                          className="MuiMenu-list"
                                                          onKeyDown={[Function]}
                                                          variant="selectedMenu"
                                                        >
                                                          <WithStyles(ForwardRef(List))
                                                            className="MuiMenu-list"
                                                            onKeyDown={[Function]}
                                                            role="menu"
                                                            tabIndex={-1}
                                                          >
                                                            <ForwardRef(List)
                                                              className="MuiMenu-list"
                                                              classes={
                                                                Object {
                                                                  "dense": "MuiList-dense",
                                                                  "padding": "MuiList-padding",
                                                                  "root": "MuiList-root",
                                                                  "subheader": "MuiList-subheader",
                                                                }
                                                              }
                                                              onKeyDown={[Function]}
                                                              role="menu"
                                                              tabIndex={-1}
                                                            >
                                                              <ul
                                                                className="MuiList-root MuiMenu-list MuiList-padding"
                                                                onKeyDown={[Function]}
                                                                role="menu"
                                                                tabIndex={-1}
                                                              >
                                                                <WithStyles(ForwardRef(MenuItem))
                                                                  className="ListItem_edit"
                                                                  key=".$.0"
                                                                  onClick={[Function]}
                                                                  tabIndex={0}
                                                                >
                                                                  <ForwardRef(MenuItem)
                                                                    className="ListItem_edit"
                                                                    classes={
                                                                      Object {
                                                                        "dense": "MuiMenuItem-dense",
                                                                        "gutters": "MuiMenuItem-gutters",
                                                                        "root": "MuiMenuItem-root",
                                                                        "selected": "Mui-selected",
                                                                      }
                                                                    }
                                                                    onClick={[Function]}
                                                                    tabIndex={0}
                                                                  >
                                                                    <WithStyles(ForwardRef(ListItem))
                                                                      button={true}
                                                                      className="MuiMenuItem-root ListItem_edit MuiMenuItem-gutters"
                                                                      classes={
                                                                        Object {
                                                                          "dense": "MuiMenuItem-dense",
                                                                        }
                                                                      }
                                                                      component="li"
                                                                      disableGutters={false}
                                                                      onClick={[Function]}
                                                                      role="menuitem"
                                                                      tabIndex={0}
                                                                    >
                                                                      <ForwardRef(ListItem)
                                                                        button={true}
                                                                        className="MuiMenuItem-root ListItem_edit MuiMenuItem-gutters"
                                                                        classes={
                                                                          Object {
                                                                            "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                                            "button": "MuiListItem-button",
                                                                            "container": "MuiListItem-container",
                                                                            "dense": "MuiListItem-dense MuiMenuItem-dense",
                                                                            "disabled": "Mui-disabled",
                                                                            "divider": "MuiListItem-divider",
                                                                            "focusVisible": "Mui-focusVisible",
                                                                            "gutters": "MuiListItem-gutters",
                                                                            "root": "MuiListItem-root",
                                                                            "secondaryAction": "MuiListItem-secondaryAction",
                                                                            "selected": "Mui-selected",
                                                                          }
                                                                        }
                                                                        component="li"
                                                                        disableGutters={false}
                                                                        onClick={[Function]}
                                                                        role="menuitem"
                                                                        tabIndex={0}
                                                                      >
                                                                        <WithStyles(ForwardRef(ButtonBase))
                                                                          className="MuiListItem-root MuiMenuItem-root ListItem_edit MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                          component="li"
                                                                          disabled={false}
                                                                          focusVisibleClassName="Mui-focusVisible"
                                                                          onClick={[Function]}
                                                                          role="menuitem"
                                                                          tabIndex={0}
                                                                        >
                                                                          <ForwardRef(ButtonBase)
                                                                            className="MuiListItem-root MuiMenuItem-root ListItem_edit MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                            classes={
                                                                              Object {
                                                                                "disabled": "Mui-disabled",
                                                                                "focusVisible": "Mui-focusVisible",
                                                                                "root": "MuiButtonBase-root",
                                                                              }
                                                                            }
                                                                            component="li"
                                                                            disabled={false}
                                                                            focusVisibleClassName="Mui-focusVisible"
                                                                            onClick={[Function]}
                                                                            role="menuitem"
                                                                            tabIndex={0}
                                                                          >
                                                                            <li
                                                                              aria-disabled={false}
                                                                              className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_edit MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                              onBlur={[Function]}
                                                                              onClick={[Function]}
                                                                              onDragLeave={[Function]}
                                                                              onFocus={[Function]}
                                                                              onKeyDown={[Function]}
                                                                              onKeyUp={[Function]}
                                                                              onMouseDown={[Function]}
                                                                              onMouseLeave={[Function]}
                                                                              onMouseUp={[Function]}
                                                                              onTouchEnd={[Function]}
                                                                              onTouchMove={[Function]}
                                                                              onTouchStart={[Function]}
                                                                              role="menuitem"
                                                                              tabIndex={0}
                                                                            >
                                                                              Редактировать
                                                                              <WithStyles(memo)
                                                                                center={false}
                                                                              >
                                                                                <ForwardRef(TouchRipple)
                                                                                  center={false}
                                                                                  classes={
                                                                                    Object {
                                                                                      "child": "MuiTouchRipple-child",
                                                                                      "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                      "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                      "ripple": "MuiTouchRipple-ripple",
                                                                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                      "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                      "root": "MuiTouchRipple-root",
                                                                                    }
                                                                                  }
                                                                                >
                                                                                  <span
                                                                                    className="MuiTouchRipple-root"
                                                                                  >
                                                                                    <TransitionGroup
                                                                                      childFactory={[Function]}
                                                                                      component={null}
                                                                                      exit={true}
                                                                                    />
                                                                                  </span>
                                                                                </ForwardRef(TouchRipple)>
                                                                              </WithStyles(memo)>
                                                                            </li>
                                                                          </ForwardRef(ButtonBase)>
                                                                        </WithStyles(ForwardRef(ButtonBase))>
                                                                      </ForwardRef(ListItem)>
                                                                    </WithStyles(ForwardRef(ListItem))>
                                                                  </ForwardRef(MenuItem)>
                                                                </WithStyles(ForwardRef(MenuItem))>
                                                                <WithStyles(ForwardRef(MenuItem))
                                                                  className="ListItem_delete"
                                                                  key=".$.1"
                                                                  onClick={[Function]}
                                                                >
                                                                  <ForwardRef(MenuItem)
                                                                    className="ListItem_delete"
                                                                    classes={
                                                                      Object {
                                                                        "dense": "MuiMenuItem-dense",
                                                                        "gutters": "MuiMenuItem-gutters",
                                                                        "root": "MuiMenuItem-root",
                                                                        "selected": "Mui-selected",
                                                                      }
                                                                    }
                                                                    onClick={[Function]}
                                                                  >
                                                                    <WithStyles(ForwardRef(ListItem))
                                                                      button={true}
                                                                      className="MuiMenuItem-root ListItem_delete MuiMenuItem-gutters"
                                                                      classes={
                                                                        Object {
                                                                          "dense": "MuiMenuItem-dense",
                                                                        }
                                                                      }
                                                                      component="li"
                                                                      disableGutters={false}
                                                                      onClick={[Function]}
                                                                      role="menuitem"
                                                                      tabIndex={-1}
                                                                    >
                                                                      <ForwardRef(ListItem)
                                                                        button={true}
                                                                        className="MuiMenuItem-root ListItem_delete MuiMenuItem-gutters"
                                                                        classes={
                                                                          Object {
                                                                            "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                                            "button": "MuiListItem-button",
                                                                            "container": "MuiListItem-container",
                                                                            "dense": "MuiListItem-dense MuiMenuItem-dense",
                                                                            "disabled": "Mui-disabled",
                                                                            "divider": "MuiListItem-divider",
                                                                            "focusVisible": "Mui-focusVisible",
                                                                            "gutters": "MuiListItem-gutters",
                                                                            "root": "MuiListItem-root",
                                                                            "secondaryAction": "MuiListItem-secondaryAction",
                                                                            "selected": "Mui-selected",
                                                                          }
                                                                        }
                                                                        component="li"
                                                                        disableGutters={false}
                                                                        onClick={[Function]}
                                                                        role="menuitem"
                                                                        tabIndex={-1}
                                                                      >
                                                                        <WithStyles(ForwardRef(ButtonBase))
                                                                          className="MuiListItem-root MuiMenuItem-root ListItem_delete MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                          component="li"
                                                                          disabled={false}
                                                                          focusVisibleClassName="Mui-focusVisible"
                                                                          onClick={[Function]}
                                                                          role="menuitem"
                                                                          tabIndex={-1}
                                                                        >
                                                                          <ForwardRef(ButtonBase)
                                                                            className="MuiListItem-root MuiMenuItem-root ListItem_delete MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                            classes={
                                                                              Object {
                                                                                "disabled": "Mui-disabled",
                                                                                "focusVisible": "Mui-focusVisible",
                                                                                "root": "MuiButtonBase-root",
                                                                              }
                                                                            }
                                                                            component="li"
                                                                            disabled={false}
                                                                            focusVisibleClassName="Mui-focusVisible"
                                                                            onClick={[Function]}
                                                                            role="menuitem"
                                                                            tabIndex={-1}
                                                                          >
                                                                            <li
                                                                              aria-disabled={false}
                                                                              className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_delete MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                              onBlur={[Function]}
                                                                              onClick={[Function]}
                                                                              onDragLeave={[Function]}
                                                                              onFocus={[Function]}
                                                                              onKeyDown={[Function]}
                                                                              onKeyUp={[Function]}
                                                                              onMouseDown={[Function]}
                                                                              onMouseLeave={[Function]}
                                                                              onMouseUp={[Function]}
                                                                              onTouchEnd={[Function]}
                                                                              onTouchMove={[Function]}
                                                                              onTouchStart={[Function]}
                                                                              role="menuitem"
                                                                              tabIndex={-1}
                                                                            >
                                                                              Удалить
                                                                              <WithStyles(memo)
                                                                                center={false}
                                                                              >
                                                                                <ForwardRef(TouchRipple)
                                                                                  center={false}
                                                                                  classes={
                                                                                    Object {
                                                                                      "child": "MuiTouchRipple-child",
                                                                                      "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                      "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                      "ripple": "MuiTouchRipple-ripple",
                                                                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                      "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                      "root": "MuiTouchRipple-root",
                                                                                    }
                                                                                  }
                                                                                >
                                                                                  <span
                                                                                    className="MuiTouchRipple-root"
                                                                                  >
                                                                                    <TransitionGroup
                                                                                      childFactory={[Function]}
                                                                                      component={null}
                                                                                      exit={true}
                                                                                    />
                                                                                  </span>
                                                                                </ForwardRef(TouchRipple)>
                                                                              </WithStyles(memo)>
                                                                            </li>
                                                                          </ForwardRef(ButtonBase)>
                                                                        </WithStyles(ForwardRef(ButtonBase))>
                                                                      </ForwardRef(ListItem)>
                                                                    </WithStyles(ForwardRef(ListItem))>
                                                                  </ForwardRef(MenuItem)>
                                                                </WithStyles(ForwardRef(MenuItem))>
                                                              </ul>
                                                            </ForwardRef(List)>
                                                          </WithStyles(ForwardRef(List))>
                                                        </ForwardRef(MenuList)>
                                                      </div>
                                                    </ForwardRef(Paper)>
                                                  </WithStyles(ForwardRef(Paper))>
                                                </Transition>
                                              </ForwardRef(Fade)>
                                              <div
                                                data-test="sentinelEnd"
                                                tabIndex={0}
                                              />
                                            </Unstable_TrapFocus>
                                          </div>
                                        </Portal>
                                      </ForwardRef(Portal)>
                                    </ForwardRef(Modal)>
                                  </ForwardRef(Popover)>
                                </WithStyles(ForwardRef(Popover))>
                              </ForwardRef(Menu)>
                            </WithStyles(ForwardRef(Menu))>
                          </div>
                          <WithStyles(memo)
                            center={false}
                          >
                            <ForwardRef(TouchRipple)
                              center={false}
                              classes={
                                Object {
                                  "child": "MuiTouchRipple-child",
                                  "childLeaving": "MuiTouchRipple-childLeaving",
                                  "childPulsate": "MuiTouchRipple-childPulsate",
                                  "ripple": "MuiTouchRipple-ripple",
                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                  "rippleVisible": "MuiTouchRipple-rippleVisible",
                                  "root": "MuiTouchRipple-root",
                                }
                              }
                            >
                              <span
                                className="MuiTouchRipple-root"
                              >
                                <TransitionGroup
                                  childFactory={[Function]}
                                  component={null}
                                  exit={true}
                                />
                              </span>
                            </ForwardRef(TouchRipple)>
                          </WithStyles(memo)>
                        </div>
                      </ForwardRef(ButtonBase)>
                    </WithStyles(ForwardRef(ButtonBase))>
                  </ForwardRef(ListItem)>
                </WithStyles(ForwardRef(ListItem))>
              </div>
            </Memo(List)>
          </Connect(Component)>
        </div>
        <div
          className="lists__addListButton"
          onClick={[Function]}
        >
          <WithStyles(ForwardRef(IconButton))
            aria-label="add List"
            color="inherit"
          >
            <ForwardRef(IconButton)
              aria-label="add List"
              classes={
                Object {
                  "colorInherit": "MuiIconButton-colorInherit",
                  "colorPrimary": "MuiIconButton-colorPrimary",
                  "colorSecondary": "MuiIconButton-colorSecondary",
                  "disabled": "Mui-disabled",
                  "edgeEnd": "MuiIconButton-edgeEnd",
                  "edgeStart": "MuiIconButton-edgeStart",
                  "label": "MuiIconButton-label",
                  "root": "MuiIconButton-root",
                  "sizeSmall": "MuiIconButton-sizeSmall",
                }
              }
              color="inherit"
            >
              <WithStyles(ForwardRef(ButtonBase))
                aria-label="add List"
                centerRipple={true}
                className="MuiIconButton-root MuiIconButton-colorInherit"
                disabled={false}
                focusRipple={true}
              >
                <ForwardRef(ButtonBase)
                  aria-label="add List"
                  centerRipple={true}
                  className="MuiIconButton-root MuiIconButton-colorInherit"
                  classes={
                    Object {
                      "disabled": "Mui-disabled",
                      "focusVisible": "Mui-focusVisible",
                      "root": "MuiButtonBase-root",
                    }
                  }
                  disabled={false}
                  focusRipple={true}
                >
                  <button
                    aria-label="add List"
                    className="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit"
                    disabled={false}
                    onBlur={[Function]}
                    onDragLeave={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    onKeyUp={[Function]}
                    onMouseDown={[Function]}
                    onMouseLeave={[Function]}
                    onMouseUp={[Function]}
                    onTouchEnd={[Function]}
                    onTouchMove={[Function]}
                    onTouchStart={[Function]}
                    tabIndex={0}
                    type="button"
                  >
                    <span
                      className="MuiIconButton-label"
                    >
                      <ForwardRef(PlaylistAddIcon)
                        fontSize="medium"
                      >
                        <WithStyles(ForwardRef(SvgIcon))
                          fontSize="medium"
                        >
                          <ForwardRef(SvgIcon)
                            classes={
                              Object {
                                "colorAction": "MuiSvgIcon-colorAction",
                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                "colorError": "MuiSvgIcon-colorError",
                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                "root": "MuiSvgIcon-root",
                              }
                            }
                            fontSize="medium"
                          >
                            <svg
                              aria-hidden={true}
                              className="MuiSvgIcon-root"
                              focusable="false"
                              viewBox="0 0 24 24"
                            >
                              <path
                                d="M14 10H2v2h12v-2zm0-4H2v2h12V6zm4 8v-4h-2v4h-4v2h4v4h2v-4h4v-2h-4zM2 16h8v-2H2v2z"
                              />
                            </svg>
                          </ForwardRef(SvgIcon)>
                        </WithStyles(ForwardRef(SvgIcon))>
                      </ForwardRef(PlaylistAddIcon)>
                    </span>
                    <WithStyles(memo)
                      center={true}
                    >
                      <ForwardRef(TouchRipple)
                        center={true}
                        classes={
                          Object {
                            "child": "MuiTouchRipple-child",
                            "childLeaving": "MuiTouchRipple-childLeaving",
                            "childPulsate": "MuiTouchRipple-childPulsate",
                            "ripple": "MuiTouchRipple-ripple",
                            "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                            "rippleVisible": "MuiTouchRipple-rippleVisible",
                            "root": "MuiTouchRipple-root",
                          }
                        }
                      >
                        <span
                          className="MuiTouchRipple-root"
                        >
                          <TransitionGroup
                            childFactory={[Function]}
                            component={null}
                            exit={true}
                          />
                        </span>
                      </ForwardRef(TouchRipple)>
                    </WithStyles(memo)>
                  </button>
                </ForwardRef(ButtonBase)>
              </WithStyles(ForwardRef(ButtonBase))>
            </ForwardRef(IconButton)>
          </WithStyles(ForwardRef(IconButton))>
          <span>
            Добавить список
          </span>
        </div>
      </div>
    </Memo(Lists)>
  </Connect(Component)>
</Provider>
`;

exports[`Checking the list change 2`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(Component)>
    <Memo(Lists)
      addToDoListAC={[Function]}
      lists={
        Array [
          Object {
            "id": 1,
            "label": "Магазин",
            "toDoList": Array [],
          },
        ]
      }
      updateActiveTodoListIdAC={[Function]}
    >
      <div
        className="lists__close-wrapper null"
        onClick={[Function]}
      />
      <div
        className="lists null"
      >
        <input
          checked={false}
          className="hidden-menu-ticker"
          id="hmt"
          readOnly={true}
          type="checkbox"
        />
        <label
          className="btn-menu toggleMenu null"
          htmlFor="hmt"
          onClick={[Function]}
        >
          <span
            className="first"
          />
          <span
            className="second"
          />
          <span
            className="third"
          />
        </label>
        <h1
          className="lists_main"
          onClick={[Function]}
        >
          <ForwardRef(HomeIcon)>
            <WithStyles(ForwardRef(SvgIcon))>
              <ForwardRef(SvgIcon)
                classes={
                  Object {
                    "colorAction": "MuiSvgIcon-colorAction",
                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                    "colorError": "MuiSvgIcon-colorError",
                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                    "root": "MuiSvgIcon-root",
                  }
                }
              >
                <svg
                  aria-hidden={true}
                  className="MuiSvgIcon-root"
                  focusable="false"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z"
                  />
                </svg>
              </ForwardRef(SvgIcon)>
            </WithStyles(ForwardRef(SvgIcon))>
          </ForwardRef(HomeIcon)>
          <span>
            Главная
          </span>
        </h1>
        <h2
          className="lists__title"
        >
          <ForwardRef(FormatListBulletedIcon)>
            <WithStyles(ForwardRef(SvgIcon))>
              <ForwardRef(SvgIcon)
                classes={
                  Object {
                    "colorAction": "MuiSvgIcon-colorAction",
                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                    "colorError": "MuiSvgIcon-colorError",
                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                    "root": "MuiSvgIcon-root",
                  }
                }
              >
                <svg
                  aria-hidden={true}
                  className="MuiSvgIcon-root"
                  focusable="false"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M4 10.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm0-6c-.83 0-1.5.67-1.5 1.5S3.17 7.5 4 7.5 5.5 6.83 5.5 6 4.83 4.5 4 4.5zm0 12c-.83 0-1.5.68-1.5 1.5s.68 1.5 1.5 1.5 1.5-.68 1.5-1.5-.67-1.5-1.5-1.5zM7 19h14v-2H7v2zm0-6h14v-2H7v2zm0-8v2h14V5H7z"
                  />
                </svg>
              </ForwardRef(SvgIcon)>
            </WithStyles(ForwardRef(SvgIcon))>
          </ForwardRef(FormatListBulletedIcon)>
          <span>
            Списки:
          </span>
        </h2>
        <div
          className="lists__renderList null"
        >
          <Connect(Component)
            id={1}
            key="1"
            label="Магазин"
            needsDone={0}
            toggleDrawer={[Function]}
          >
            <Memo(List)
              activeToDoListId={null}
              deleteToDoListAC={[Function]}
              id={1}
              label="Магазин"
              needsDone={0}
              toggleDrawer={[Function]}
              updateActiveTodoListIdAC={[Function]}
              updateToDoListLabelAC={[Function]}
            >
              <div>
                <WithStyles(ForwardRef(ListItem))
                  button={true}
                  className="list__item"
                  onClick={[Function]}
                >
                  <ForwardRef(ListItem)
                    button={true}
                    className="list__item"
                    classes={
                      Object {
                        "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                        "button": "MuiListItem-button",
                        "container": "MuiListItem-container",
                        "dense": "MuiListItem-dense",
                        "disabled": "Mui-disabled",
                        "divider": "MuiListItem-divider",
                        "focusVisible": "Mui-focusVisible",
                        "gutters": "MuiListItem-gutters",
                        "root": "MuiListItem-root",
                        "secondaryAction": "MuiListItem-secondaryAction",
                        "selected": "Mui-selected",
                      }
                    }
                    onClick={[Function]}
                  >
                    <WithStyles(ForwardRef(ButtonBase))
                      className="MuiListItem-root list__item MuiListItem-gutters MuiListItem-button"
                      component="div"
                      disabled={false}
                      focusVisibleClassName="Mui-focusVisible"
                      onClick={[Function]}
                    >
                      <ForwardRef(ButtonBase)
                        className="MuiListItem-root list__item MuiListItem-gutters MuiListItem-button"
                        classes={
                          Object {
                            "disabled": "Mui-disabled",
                            "focusVisible": "Mui-focusVisible",
                            "root": "MuiButtonBase-root",
                          }
                        }
                        component="div"
                        disabled={false}
                        focusVisibleClassName="Mui-focusVisible"
                        onClick={[Function]}
                      >
                        <div
                          aria-disabled={false}
                          className="MuiButtonBase-root MuiListItem-root list__item MuiListItem-gutters MuiListItem-button Mui-focusVisible Mui-focusVisible"
                          onBlur={[Function]}
                          onClick={[Function]}
                          onDragLeave={[Function]}
                          onFocus={[Function]}
                          onKeyDown={[Function]}
                          onKeyUp={[Function]}
                          onMouseDown={[Function]}
                          onMouseLeave={[Function]}
                          onMouseUp={[Function]}
                          onTouchEnd={[Function]}
                          onTouchMove={[Function]}
                          onTouchStart={[Function]}
                          role="button"
                          tabIndex={0}
                        >
                          <div
                            key=".0"
                          >
                            Магазин
                          </div>
                          <div
                            className="list__wrapper__list__buttonMenu"
                            key=".1"
                          >
                            <WithStyles(ForwardRef(IconButton))
                              aria-controls="simple-menu"
                              aria-haspopup="true"
                              className="list__buttonMenu"
                              onClick={[Function]}
                            >
                              <ForwardRef(IconButton)
                                aria-controls="simple-menu"
                                aria-haspopup="true"
                                className="list__buttonMenu"
                                classes={
                                  Object {
                                    "colorInherit": "MuiIconButton-colorInherit",
                                    "colorPrimary": "MuiIconButton-colorPrimary",
                                    "colorSecondary": "MuiIconButton-colorSecondary",
                                    "disabled": "Mui-disabled",
                                    "edgeEnd": "MuiIconButton-edgeEnd",
                                    "edgeStart": "MuiIconButton-edgeStart",
                                    "label": "MuiIconButton-label",
                                    "root": "MuiIconButton-root",
                                    "sizeSmall": "MuiIconButton-sizeSmall",
                                  }
                                }
                                onClick={[Function]}
                              >
                                <WithStyles(ForwardRef(ButtonBase))
                                  aria-controls="simple-menu"
                                  aria-haspopup="true"
                                  centerRipple={true}
                                  className="MuiIconButton-root list__buttonMenu"
                                  disabled={false}
                                  focusRipple={true}
                                  onClick={[Function]}
                                >
                                  <ForwardRef(ButtonBase)
                                    aria-controls="simple-menu"
                                    aria-haspopup="true"
                                    centerRipple={true}
                                    className="MuiIconButton-root list__buttonMenu"
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "focusVisible": "Mui-focusVisible",
                                        "root": "MuiButtonBase-root",
                                      }
                                    }
                                    disabled={false}
                                    focusRipple={true}
                                    onClick={[Function]}
                                  >
                                    <button
                                      aria-controls="simple-menu"
                                      aria-haspopup="true"
                                      className="MuiButtonBase-root MuiIconButton-root list__buttonMenu"
                                      disabled={false}
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={0}
                                      type="button"
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <ForwardRef(MoreVertIcon)>
                                          <WithStyles(ForwardRef(SvgIcon))>
                                            <ForwardRef(SvgIcon)
                                              classes={
                                                Object {
                                                  "colorAction": "MuiSvgIcon-colorAction",
                                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                  "colorError": "MuiSvgIcon-colorError",
                                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                  "root": "MuiSvgIcon-root",
                                                }
                                              }
                                            >
                                              <svg
                                                aria-hidden={true}
                                                className="MuiSvgIcon-root"
                                                focusable="false"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                                />
                                              </svg>
                                            </ForwardRef(SvgIcon)>
                                          </WithStyles(ForwardRef(SvgIcon))>
                                        </ForwardRef(MoreVertIcon)>
                                      </span>
                                      <WithStyles(memo)
                                        center={true}
                                      >
                                        <ForwardRef(TouchRipple)
                                          center={true}
                                          classes={
                                            Object {
                                              "child": "MuiTouchRipple-child",
                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                              "ripple": "MuiTouchRipple-ripple",
                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                              "root": "MuiTouchRipple-root",
                                            }
                                          }
                                        >
                                          <span
                                            className="MuiTouchRipple-root"
                                          >
                                            <TransitionGroup
                                              childFactory={[Function]}
                                              component={null}
                                              exit={true}
                                            />
                                          </span>
                                        </ForwardRef(TouchRipple)>
                                      </WithStyles(memo)>
                                    </button>
                                  </ForwardRef(ButtonBase)>
                                </WithStyles(ForwardRef(ButtonBase))>
                              </ForwardRef(IconButton)>
                            </WithStyles(ForwardRef(IconButton))>
                            <WithStyles(ForwardRef(Menu))
                              TransitionComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "propTypes": Object {
                                    "children": [Function],
                                    "disableStrictModeCompat": [Function],
                                    "in": [Function],
                                    "onEnter": [Function],
                                    "onEntered": [Function],
                                    "onEntering": [Function],
                                    "onExit": [Function],
                                    "onExited": [Function],
                                    "onExiting": [Function],
                                    "style": [Function],
                                    "timeout": [Function],
                                  },
                                  "render": [Function],
                                }
                              }
                              anchorEl={
                                <button
                                  aria-controls="simple-menu"
                                  aria-haspopup="true"
                                  class="MuiButtonBase-root MuiIconButton-root list__buttonMenu"
                                  tabindex="0"
                                  type="button"
                                >
                                  <span
                                    class="MuiIconButton-label"
                                  >
                                    <svg
                                      aria-hidden="true"
                                      class="MuiSvgIcon-root"
                                      focusable="false"
                                      viewBox="0 0 24 24"
                                    >
                                      <path
                                        d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                      />
                                    </svg>
                                  </span>
                                  <span
                                    class="MuiTouchRipple-root"
                                  />
                                </button>
                              }
                              id="simple-menu"
                              keepMounted={true}
                              onClose={[Function]}
                              open={true}
                            >
                              <ForwardRef(Menu)
                                TransitionComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "propTypes": Object {
                                      "children": [Function],
                                      "disableStrictModeCompat": [Function],
                                      "in": [Function],
                                      "onEnter": [Function],
                                      "onEntered": [Function],
                                      "onEntering": [Function],
                                      "onExit": [Function],
                                      "onExited": [Function],
                                      "onExiting": [Function],
                                      "style": [Function],
                                      "timeout": [Function],
                                    },
                                    "render": [Function],
                                  }
                                }
                                anchorEl={
                                  <button
                                    aria-controls="simple-menu"
                                    aria-haspopup="true"
                                    class="MuiButtonBase-root MuiIconButton-root list__buttonMenu"
                                    tabindex="0"
                                    type="button"
                                  >
                                    <span
                                      class="MuiIconButton-label"
                                    >
                                      <svg
                                        aria-hidden="true"
                                        class="MuiSvgIcon-root"
                                        focusable="false"
                                        viewBox="0 0 24 24"
                                      >
                                        <path
                                          d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                        />
                                      </svg>
                                    </span>
                                    <span
                                      class="MuiTouchRipple-root"
                                    />
                                  </button>
                                }
                                classes={
                                  Object {
                                    "list": "MuiMenu-list",
                                    "paper": "MuiMenu-paper",
                                  }
                                }
                                id="simple-menu"
                                keepMounted={true}
                                onClose={[Function]}
                                open={true}
                              >
                                <WithStyles(ForwardRef(Popover))
                                  PaperProps={
                                    Object {
                                      "classes": Object {
                                        "root": "MuiMenu-paper",
                                      },
                                    }
                                  }
                                  TransitionComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "propTypes": Object {
                                        "children": [Function],
                                        "disableStrictModeCompat": [Function],
                                        "in": [Function],
                                        "onEnter": [Function],
                                        "onEntered": [Function],
                                        "onEntering": [Function],
                                        "onExit": [Function],
                                        "onExited": [Function],
                                        "onExiting": [Function],
                                        "style": [Function],
                                        "timeout": [Function],
                                      },
                                      "render": [Function],
                                    }
                                  }
                                  TransitionProps={
                                    Object {
                                      "onEntering": [Function],
                                    }
                                  }
                                  anchorEl={
                                    <button
                                      aria-controls="simple-menu"
                                      aria-haspopup="true"
                                      class="MuiButtonBase-root MuiIconButton-root list__buttonMenu"
                                      tabindex="0"
                                      type="button"
                                    >
                                      <span
                                        class="MuiIconButton-label"
                                      >
                                        <svg
                                          aria-hidden="true"
                                          class="MuiSvgIcon-root"
                                          focusable="false"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                          />
                                        </svg>
                                      </span>
                                      <span
                                        class="MuiTouchRipple-root"
                                      />
                                    </button>
                                  }
                                  anchorOrigin={
                                    Object {
                                      "horizontal": "left",
                                      "vertical": "top",
                                    }
                                  }
                                  getContentAnchorEl={[Function]}
                                  id="simple-menu"
                                  keepMounted={true}
                                  onClose={[Function]}
                                  open={true}
                                  transformOrigin={
                                    Object {
                                      "horizontal": "left",
                                      "vertical": "top",
                                    }
                                  }
                                  transitionDuration="auto"
                                >
                                  <ForwardRef(Popover)
                                    PaperProps={
                                      Object {
                                        "classes": Object {
                                          "root": "MuiMenu-paper",
                                        },
                                      }
                                    }
                                    TransitionComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "propTypes": Object {
                                          "children": [Function],
                                          "disableStrictModeCompat": [Function],
                                          "in": [Function],
                                          "onEnter": [Function],
                                          "onEntered": [Function],
                                          "onEntering": [Function],
                                          "onExit": [Function],
                                          "onExited": [Function],
                                          "onExiting": [Function],
                                          "style": [Function],
                                          "timeout": [Function],
                                        },
                                        "render": [Function],
                                      }
                                    }
                                    TransitionProps={
                                      Object {
                                        "onEntering": [Function],
                                      }
                                    }
                                    anchorEl={
                                      <button
                                        aria-controls="simple-menu"
                                        aria-haspopup="true"
                                        class="MuiButtonBase-root MuiIconButton-root list__buttonMenu"
                                        tabindex="0"
                                        type="button"
                                      >
                                        <span
                                          class="MuiIconButton-label"
                                        >
                                          <svg
                                            aria-hidden="true"
                                            class="MuiSvgIcon-root"
                                            focusable="false"
                                            viewBox="0 0 24 24"
                                          >
                                            <path
                                              d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                            />
                                          </svg>
                                        </span>
                                        <span
                                          class="MuiTouchRipple-root"
                                        />
                                      </button>
                                    }
                                    anchorOrigin={
                                      Object {
                                        "horizontal": "left",
                                        "vertical": "top",
                                      }
                                    }
                                    classes={
                                      Object {
                                        "paper": "MuiPopover-paper",
                                        "root": "MuiPopover-root",
                                      }
                                    }
                                    getContentAnchorEl={[Function]}
                                    id="simple-menu"
                                    keepMounted={true}
                                    onClose={[Function]}
                                    open={true}
                                    transformOrigin={
                                      Object {
                                        "horizontal": "left",
                                        "vertical": "top",
                                      }
                                    }
                                    transitionDuration="auto"
                                  >
                                    <ForwardRef(Modal)
                                      BackdropProps={
                                        Object {
                                          "invisible": true,
                                        }
                                      }
                                      className="MuiPopover-root"
                                      container={
                                        <body
                                          style="padding-right: 0px; overflow: hidden;"
                                        >
                                          <div
                                            aria-hidden="true"
                                            class="MuiPopover-root"
                                            id="simple-menu"
                                            role="presentation"
                                            style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px; visibility: hidden;"
                                          >
                                            <div
                                              data-test="sentinelStart"
                                              tabindex="0"
                                            />
                                            <div
                                              class="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                              style="opacity: 0; visibility: hidden;"
                                              tabindex="-1"
                                            >
                                              <ul
                                                class="MuiList-root MuiMenu-list MuiList-padding"
                                                role="menu"
                                                tabindex="-1"
                                              >
                                                <li
                                                  aria-disabled="false"
                                                  class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_edit MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                  role="menuitem"
                                                  tabindex="0"
                                                >
                                                  Редактировать
                                                  <span
                                                    class="MuiTouchRipple-root"
                                                  />
                                                </li>
                                                <li
                                                  aria-disabled="false"
                                                  class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_delete MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                  role="menuitem"
                                                  tabindex="-1"
                                                >
                                                  Удалить
                                                  <span
                                                    class="MuiTouchRipple-root"
                                                  />
                                                </li>
                                              </ul>
                                            </div>
                                            <div
                                              data-test="sentinelEnd"
                                              tabindex="0"
                                            />
                                          </div>
                                          <div
                                            aria-hidden="true"
                                            class="MuiPopover-root"
                                            id="simple-menu"
                                            role="presentation"
                                            style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                                          >
                                            <div
                                              data-test="sentinelStart"
                                              tabindex="0"
                                            />
                                            <div
                                              class="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                              style="opacity: 0; webkit-transition: opacity 195ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 195ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; top: 16px; left: 16px; transform-origin: -16px -16px;"
                                              tabindex="-1"
                                            >
                                              <ul
                                                class="MuiList-root MuiMenu-list MuiList-padding"
                                                role="menu"
                                                tabindex="-1"
                                              >
                                                <li
                                                  aria-disabled="false"
                                                  class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_edit MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                  role="menuitem"
                                                  tabindex="0"
                                                >
                                                  Редактировать
                                                  <span
                                                    class="MuiTouchRipple-root"
                                                  />
                                                </li>
                                                <li
                                                  aria-disabled="false"
                                                  class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_delete MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                  role="menuitem"
                                                  tabindex="-1"
                                                >
                                                  Удалить
                                                  <span
                                                    class="MuiTouchRipple-root"
                                                  />
                                                </li>
                                              </ul>
                                            </div>
                                            <div
                                              data-test="sentinelEnd"
                                              tabindex="0"
                                            />
                                          </div>
                                          <div
                                            class="MuiPopover-root"
                                            id="simple-menu"
                                            role="presentation"
                                            style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                                          >
                                            <div
                                              aria-hidden="true"
                                              style="z-index: -1; position: fixed; right: 0px; bottom: 0px; top: 0px; left: 0px; background-color: transparent;"
                                            />
                                            <div
                                              data-test="sentinelStart"
                                              tabindex="0"
                                            />
                                            <div
                                              class="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                              style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; top: 16px; left: 16px; transform-origin: -16px -16px;"
                                              tabindex="-1"
                                            >
                                              <ul
                                                class="MuiList-root MuiMenu-list MuiList-padding"
                                                role="menu"
                                                tabindex="-1"
                                              >
                                                <li
                                                  aria-disabled="false"
                                                  class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_edit MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button Mui-focusVisible Mui-focusVisible"
                                                  role="menuitem"
                                                  tabindex="0"
                                                >
                                                  Редактировать
                                                  <span
                                                    class="MuiTouchRipple-root"
                                                  />
                                                </li>
                                                <li
                                                  aria-disabled="false"
                                                  class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_delete MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                  role="menuitem"
                                                  tabindex="-1"
                                                >
                                                  Удалить
                                                  <span
                                                    class="MuiTouchRipple-root"
                                                  />
                                                </li>
                                              </ul>
                                            </div>
                                            <div
                                              data-test="sentinelEnd"
                                              tabindex="0"
                                            />
                                          </div>
                                        </body>
                                      }
                                      id="simple-menu"
                                      keepMounted={true}
                                      onClose={[Function]}
                                      open={true}
                                    >
                                      <ForwardRef(Portal)
                                        container={
                                          <body
                                            style="padding-right: 0px; overflow: hidden;"
                                          >
                                            <div
                                              aria-hidden="true"
                                              class="MuiPopover-root"
                                              id="simple-menu"
                                              role="presentation"
                                              style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px; visibility: hidden;"
                                            >
                                              <div
                                                data-test="sentinelStart"
                                                tabindex="0"
                                              />
                                              <div
                                                class="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                                style="opacity: 0; visibility: hidden;"
                                                tabindex="-1"
                                              >
                                                <ul
                                                  class="MuiList-root MuiMenu-list MuiList-padding"
                                                  role="menu"
                                                  tabindex="-1"
                                                >
                                                  <li
                                                    aria-disabled="false"
                                                    class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_edit MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                    role="menuitem"
                                                    tabindex="0"
                                                  >
                                                    Редактировать
                                                    <span
                                                      class="MuiTouchRipple-root"
                                                    />
                                                  </li>
                                                  <li
                                                    aria-disabled="false"
                                                    class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_delete MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                    role="menuitem"
                                                    tabindex="-1"
                                                  >
                                                    Удалить
                                                    <span
                                                      class="MuiTouchRipple-root"
                                                    />
                                                  </li>
                                                </ul>
                                              </div>
                                              <div
                                                data-test="sentinelEnd"
                                                tabindex="0"
                                              />
                                            </div>
                                            <div
                                              aria-hidden="true"
                                              class="MuiPopover-root"
                                              id="simple-menu"
                                              role="presentation"
                                              style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                                            >
                                              <div
                                                data-test="sentinelStart"
                                                tabindex="0"
                                              />
                                              <div
                                                class="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                                style="opacity: 0; webkit-transition: opacity 195ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 195ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; top: 16px; left: 16px; transform-origin: -16px -16px;"
                                                tabindex="-1"
                                              >
                                                <ul
                                                  class="MuiList-root MuiMenu-list MuiList-padding"
                                                  role="menu"
                                                  tabindex="-1"
                                                >
                                                  <li
                                                    aria-disabled="false"
                                                    class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_edit MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                    role="menuitem"
                                                    tabindex="0"
                                                  >
                                                    Редактировать
                                                    <span
                                                      class="MuiTouchRipple-root"
                                                    />
                                                  </li>
                                                  <li
                                                    aria-disabled="false"
                                                    class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_delete MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                    role="menuitem"
                                                    tabindex="-1"
                                                  >
                                                    Удалить
                                                    <span
                                                      class="MuiTouchRipple-root"
                                                    />
                                                  </li>
                                                </ul>
                                              </div>
                                              <div
                                                data-test="sentinelEnd"
                                                tabindex="0"
                                              />
                                            </div>
                                            <div
                                              class="MuiPopover-root"
                                              id="simple-menu"
                                              role="presentation"
                                              style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                                            >
                                              <div
                                                aria-hidden="true"
                                                style="z-index: -1; position: fixed; right: 0px; bottom: 0px; top: 0px; left: 0px; background-color: transparent;"
                                              />
                                              <div
                                                data-test="sentinelStart"
                                                tabindex="0"
                                              />
                                              <div
                                                class="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                                style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; top: 16px; left: 16px; transform-origin: -16px -16px;"
                                                tabindex="-1"
                                              >
                                                <ul
                                                  class="MuiList-root MuiMenu-list MuiList-padding"
                                                  role="menu"
                                                  tabindex="-1"
                                                >
                                                  <li
                                                    aria-disabled="false"
                                                    class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_edit MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button Mui-focusVisible Mui-focusVisible"
                                                    role="menuitem"
                                                    tabindex="0"
                                                  >
                                                    Редактировать
                                                    <span
                                                      class="MuiTouchRipple-root"
                                                    />
                                                  </li>
                                                  <li
                                                    aria-disabled="false"
                                                    class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_delete MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                    role="menuitem"
                                                    tabindex="-1"
                                                  >
                                                    Удалить
                                                    <span
                                                      class="MuiTouchRipple-root"
                                                    />
                                                  </li>
                                                </ul>
                                              </div>
                                              <div
                                                data-test="sentinelEnd"
                                                tabindex="0"
                                              />
                                            </div>
                                          </body>
                                        }
                                        disablePortal={false}
                                      >
                                        <Portal
                                          containerInfo={
                                            <body
                                              style="padding-right: 0px; overflow: hidden;"
                                            >
                                              <div
                                                aria-hidden="true"
                                                class="MuiPopover-root"
                                                id="simple-menu"
                                                role="presentation"
                                                style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px; visibility: hidden;"
                                              >
                                                <div
                                                  data-test="sentinelStart"
                                                  tabindex="0"
                                                />
                                                <div
                                                  class="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                                  style="opacity: 0; visibility: hidden;"
                                                  tabindex="-1"
                                                >
                                                  <ul
                                                    class="MuiList-root MuiMenu-list MuiList-padding"
                                                    role="menu"
                                                    tabindex="-1"
                                                  >
                                                    <li
                                                      aria-disabled="false"
                                                      class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_edit MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                      role="menuitem"
                                                      tabindex="0"
                                                    >
                                                      Редактировать
                                                      <span
                                                        class="MuiTouchRipple-root"
                                                      />
                                                    </li>
                                                    <li
                                                      aria-disabled="false"
                                                      class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_delete MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                      role="menuitem"
                                                      tabindex="-1"
                                                    >
                                                      Удалить
                                                      <span
                                                        class="MuiTouchRipple-root"
                                                      />
                                                    </li>
                                                  </ul>
                                                </div>
                                                <div
                                                  data-test="sentinelEnd"
                                                  tabindex="0"
                                                />
                                              </div>
                                              <div
                                                aria-hidden="true"
                                                class="MuiPopover-root"
                                                id="simple-menu"
                                                role="presentation"
                                                style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                                              >
                                                <div
                                                  data-test="sentinelStart"
                                                  tabindex="0"
                                                />
                                                <div
                                                  class="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                                  style="opacity: 0; webkit-transition: opacity 195ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 195ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; top: 16px; left: 16px; transform-origin: -16px -16px;"
                                                  tabindex="-1"
                                                >
                                                  <ul
                                                    class="MuiList-root MuiMenu-list MuiList-padding"
                                                    role="menu"
                                                    tabindex="-1"
                                                  >
                                                    <li
                                                      aria-disabled="false"
                                                      class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_edit MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                      role="menuitem"
                                                      tabindex="0"
                                                    >
                                                      Редактировать
                                                      <span
                                                        class="MuiTouchRipple-root"
                                                      />
                                                    </li>
                                                    <li
                                                      aria-disabled="false"
                                                      class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_delete MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                      role="menuitem"
                                                      tabindex="-1"
                                                    >
                                                      Удалить
                                                      <span
                                                        class="MuiTouchRipple-root"
                                                      />
                                                    </li>
                                                  </ul>
                                                </div>
                                                <div
                                                  data-test="sentinelEnd"
                                                  tabindex="0"
                                                />
                                              </div>
                                              <div
                                                class="MuiPopover-root"
                                                id="simple-menu"
                                                role="presentation"
                                                style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                                              >
                                                <div
                                                  aria-hidden="true"
                                                  style="z-index: -1; position: fixed; right: 0px; bottom: 0px; top: 0px; left: 0px; background-color: transparent;"
                                                />
                                                <div
                                                  data-test="sentinelStart"
                                                  tabindex="0"
                                                />
                                                <div
                                                  class="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                                  style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; top: 16px; left: 16px; transform-origin: -16px -16px;"
                                                  tabindex="-1"
                                                >
                                                  <ul
                                                    class="MuiList-root MuiMenu-list MuiList-padding"
                                                    role="menu"
                                                    tabindex="-1"
                                                  >
                                                    <li
                                                      aria-disabled="false"
                                                      class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_edit MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button Mui-focusVisible Mui-focusVisible"
                                                      role="menuitem"
                                                      tabindex="0"
                                                    >
                                                      Редактировать
                                                      <span
                                                        class="MuiTouchRipple-root"
                                                      />
                                                    </li>
                                                    <li
                                                      aria-disabled="false"
                                                      class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_delete MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                      role="menuitem"
                                                      tabindex="-1"
                                                    >
                                                      Удалить
                                                      <span
                                                        class="MuiTouchRipple-root"
                                                      />
                                                    </li>
                                                  </ul>
                                                </div>
                                                <div
                                                  data-test="sentinelEnd"
                                                  tabindex="0"
                                                />
                                              </div>
                                            </body>
                                          }
                                        >
                                          <div
                                            className="MuiPopover-root"
                                            id="simple-menu"
                                            onKeyDown={[Function]}
                                            role="presentation"
                                            style={
                                              Object {
                                                "bottom": 0,
                                                "left": 0,
                                                "position": "fixed",
                                                "right": 0,
                                                "top": 0,
                                                "zIndex": 1300,
                                              }
                                            }
                                          >
                                            <ForwardRef(SimpleBackdrop)
                                              invisible={true}
                                              onClick={[Function]}
                                              open={true}
                                            >
                                              <div
                                                aria-hidden={true}
                                                onClick={[Function]}
                                                style={
                                                  Object {
                                                    "WebkitTapHighlightColor": "transparent",
                                                    "backgroundColor": "transparent",
                                                    "bottom": 0,
                                                    "left": 0,
                                                    "position": "fixed",
                                                    "right": 0,
                                                    "top": 0,
                                                    "zIndex": -1,
                                                  }
                                                }
                                              />
                                            </ForwardRef(SimpleBackdrop)>
                                            <Unstable_TrapFocus
                                              disableAutoFocus={false}
                                              disableEnforceFocus={false}
                                              disableRestoreFocus={false}
                                              getDoc={[Function]}
                                              isEnabled={[Function]}
                                              open={true}
                                            >
                                              <div
                                                data-test="sentinelStart"
                                                tabIndex={0}
                                              />
                                              <ForwardRef(Fade)
                                                appear={true}
                                                in={true}
                                                onEnter={[Function]}
                                                onEntering={[Function]}
                                                onExited={[Function]}
                                                tabIndex="-1"
                                              >
                                                <Transition
                                                  appear={true}
                                                  enter={true}
                                                  exit={true}
                                                  in={true}
                                                  mountOnEnter={false}
                                                  onEnter={[Function]}
                                                  onEntered={[Function]}
                                                  onEntering={[Function]}
                                                  onExit={[Function]}
                                                  onExited={[Function]}
                                                  onExiting={[Function]}
                                                  tabIndex="-1"
                                                  timeout={
                                                    Object {
                                                      "enter": 225,
                                                      "exit": 195,
                                                    }
                                                  }
                                                  unmountOnExit={false}
                                                >
                                                  <WithStyles(ForwardRef(Paper))
                                                    className="MuiPopover-paper"
                                                    classes={
                                                      Object {
                                                        "root": "MuiMenu-paper",
                                                      }
                                                    }
                                                    elevation={8}
                                                    style={
                                                      Object {
                                                        "opacity": 1,
                                                        "visibility": undefined,
                                                      }
                                                    }
                                                    tabIndex="-1"
                                                  >
                                                    <ForwardRef(Paper)
                                                      className="MuiPopover-paper"
                                                      classes={
                                                        Object {
                                                          "elevation0": "MuiPaper-elevation0",
                                                          "elevation1": "MuiPaper-elevation1",
                                                          "elevation10": "MuiPaper-elevation10",
                                                          "elevation11": "MuiPaper-elevation11",
                                                          "elevation12": "MuiPaper-elevation12",
                                                          "elevation13": "MuiPaper-elevation13",
                                                          "elevation14": "MuiPaper-elevation14",
                                                          "elevation15": "MuiPaper-elevation15",
                                                          "elevation16": "MuiPaper-elevation16",
                                                          "elevation17": "MuiPaper-elevation17",
                                                          "elevation18": "MuiPaper-elevation18",
                                                          "elevation19": "MuiPaper-elevation19",
                                                          "elevation2": "MuiPaper-elevation2",
                                                          "elevation20": "MuiPaper-elevation20",
                                                          "elevation21": "MuiPaper-elevation21",
                                                          "elevation22": "MuiPaper-elevation22",
                                                          "elevation23": "MuiPaper-elevation23",
                                                          "elevation24": "MuiPaper-elevation24",
                                                          "elevation3": "MuiPaper-elevation3",
                                                          "elevation4": "MuiPaper-elevation4",
                                                          "elevation5": "MuiPaper-elevation5",
                                                          "elevation6": "MuiPaper-elevation6",
                                                          "elevation7": "MuiPaper-elevation7",
                                                          "elevation8": "MuiPaper-elevation8",
                                                          "elevation9": "MuiPaper-elevation9",
                                                          "outlined": "MuiPaper-outlined",
                                                          "root": "MuiPaper-root MuiMenu-paper",
                                                          "rounded": "MuiPaper-rounded",
                                                        }
                                                      }
                                                      elevation={8}
                                                      style={
                                                        Object {
                                                          "opacity": 1,
                                                          "visibility": undefined,
                                                        }
                                                      }
                                                      tabIndex="-1"
                                                    >
                                                      <div
                                                        className="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                                        style={
                                                          Object {
                                                            "opacity": 1,
                                                            "visibility": undefined,
                                                          }
                                                        }
                                                        tabIndex="-1"
                                                      >
                                                        <ForwardRef(MenuList)
                                                          actions={
                                                            Object {
                                                              "current": Object {
                                                                "adjustStyleForScrollbar": [Function],
                                                              },
                                                            }
                                                          }
                                                          autoFocus={false}
                                                          autoFocusItem={true}
                                                          className="MuiMenu-list"
                                                          onKeyDown={[Function]}
                                                          variant="selectedMenu"
                                                        >
                                                          <WithStyles(ForwardRef(List))
                                                            className="MuiMenu-list"
                                                            onKeyDown={[Function]}
                                                            role="menu"
                                                            tabIndex={-1}
                                                          >
                                                            <ForwardRef(List)
                                                              className="MuiMenu-list"
                                                              classes={
                                                                Object {
                                                                  "dense": "MuiList-dense",
                                                                  "padding": "MuiList-padding",
                                                                  "root": "MuiList-root",
                                                                  "subheader": "MuiList-subheader",
                                                                }
                                                              }
                                                              onKeyDown={[Function]}
                                                              role="menu"
                                                              tabIndex={-1}
                                                            >
                                                              <ul
                                                                className="MuiList-root MuiMenu-list MuiList-padding"
                                                                onKeyDown={[Function]}
                                                                role="menu"
                                                                tabIndex={-1}
                                                              >
                                                                <WithStyles(ForwardRef(MenuItem))
                                                                  autoFocus={true}
                                                                  className="ListItem_edit"
                                                                  key=".$.0"
                                                                  onClick={[Function]}
                                                                  tabIndex={0}
                                                                >
                                                                  <ForwardRef(MenuItem)
                                                                    autoFocus={true}
                                                                    className="ListItem_edit"
                                                                    classes={
                                                                      Object {
                                                                        "dense": "MuiMenuItem-dense",
                                                                        "gutters": "MuiMenuItem-gutters",
                                                                        "root": "MuiMenuItem-root",
                                                                        "selected": "Mui-selected",
                                                                      }
                                                                    }
                                                                    onClick={[Function]}
                                                                    tabIndex={0}
                                                                  >
                                                                    <WithStyles(ForwardRef(ListItem))
                                                                      autoFocus={true}
                                                                      button={true}
                                                                      className="MuiMenuItem-root ListItem_edit MuiMenuItem-gutters"
                                                                      classes={
                                                                        Object {
                                                                          "dense": "MuiMenuItem-dense",
                                                                        }
                                                                      }
                                                                      component="li"
                                                                      disableGutters={false}
                                                                      onClick={[Function]}
                                                                      role="menuitem"
                                                                      tabIndex={0}
                                                                    >
                                                                      <ForwardRef(ListItem)
                                                                        autoFocus={true}
                                                                        button={true}
                                                                        className="MuiMenuItem-root ListItem_edit MuiMenuItem-gutters"
                                                                        classes={
                                                                          Object {
                                                                            "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                                            "button": "MuiListItem-button",
                                                                            "container": "MuiListItem-container",
                                                                            "dense": "MuiListItem-dense MuiMenuItem-dense",
                                                                            "disabled": "Mui-disabled",
                                                                            "divider": "MuiListItem-divider",
                                                                            "focusVisible": "Mui-focusVisible",
                                                                            "gutters": "MuiListItem-gutters",
                                                                            "root": "MuiListItem-root",
                                                                            "secondaryAction": "MuiListItem-secondaryAction",
                                                                            "selected": "Mui-selected",
                                                                          }
                                                                        }
                                                                        component="li"
                                                                        disableGutters={false}
                                                                        onClick={[Function]}
                                                                        role="menuitem"
                                                                        tabIndex={0}
                                                                      >
                                                                        <WithStyles(ForwardRef(ButtonBase))
                                                                          className="MuiListItem-root MuiMenuItem-root ListItem_edit MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                          component="li"
                                                                          disabled={false}
                                                                          focusVisibleClassName="Mui-focusVisible"
                                                                          onClick={[Function]}
                                                                          role="menuitem"
                                                                          tabIndex={0}
                                                                        >
                                                                          <ForwardRef(ButtonBase)
                                                                            className="MuiListItem-root MuiMenuItem-root ListItem_edit MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                            classes={
                                                                              Object {
                                                                                "disabled": "Mui-disabled",
                                                                                "focusVisible": "Mui-focusVisible",
                                                                                "root": "MuiButtonBase-root",
                                                                              }
                                                                            }
                                                                            component="li"
                                                                            disabled={false}
                                                                            focusVisibleClassName="Mui-focusVisible"
                                                                            onClick={[Function]}
                                                                            role="menuitem"
                                                                            tabIndex={0}
                                                                          >
                                                                            <li
                                                                              aria-disabled={false}
                                                                              className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_edit MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button Mui-focusVisible Mui-focusVisible"
                                                                              onBlur={[Function]}
                                                                              onClick={[Function]}
                                                                              onDragLeave={[Function]}
                                                                              onFocus={[Function]}
                                                                              onKeyDown={[Function]}
                                                                              onKeyUp={[Function]}
                                                                              onMouseDown={[Function]}
                                                                              onMouseLeave={[Function]}
                                                                              onMouseUp={[Function]}
                                                                              onTouchEnd={[Function]}
                                                                              onTouchMove={[Function]}
                                                                              onTouchStart={[Function]}
                                                                              role="menuitem"
                                                                              tabIndex={0}
                                                                            >
                                                                              Редактировать
                                                                              <WithStyles(memo)
                                                                                center={false}
                                                                              >
                                                                                <ForwardRef(TouchRipple)
                                                                                  center={false}
                                                                                  classes={
                                                                                    Object {
                                                                                      "child": "MuiTouchRipple-child",
                                                                                      "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                      "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                      "ripple": "MuiTouchRipple-ripple",
                                                                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                      "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                      "root": "MuiTouchRipple-root",
                                                                                    }
                                                                                  }
                                                                                >
                                                                                  <span
                                                                                    className="MuiTouchRipple-root"
                                                                                  >
                                                                                    <TransitionGroup
                                                                                      childFactory={[Function]}
                                                                                      component={null}
                                                                                      exit={true}
                                                                                    />
                                                                                  </span>
                                                                                </ForwardRef(TouchRipple)>
                                                                              </WithStyles(memo)>
                                                                            </li>
                                                                          </ForwardRef(ButtonBase)>
                                                                        </WithStyles(ForwardRef(ButtonBase))>
                                                                      </ForwardRef(ListItem)>
                                                                    </WithStyles(ForwardRef(ListItem))>
                                                                  </ForwardRef(MenuItem)>
                                                                </WithStyles(ForwardRef(MenuItem))>
                                                                <WithStyles(ForwardRef(MenuItem))
                                                                  className="ListItem_delete"
                                                                  key=".$.1"
                                                                  onClick={[Function]}
                                                                >
                                                                  <ForwardRef(MenuItem)
                                                                    className="ListItem_delete"
                                                                    classes={
                                                                      Object {
                                                                        "dense": "MuiMenuItem-dense",
                                                                        "gutters": "MuiMenuItem-gutters",
                                                                        "root": "MuiMenuItem-root",
                                                                        "selected": "Mui-selected",
                                                                      }
                                                                    }
                                                                    onClick={[Function]}
                                                                  >
                                                                    <WithStyles(ForwardRef(ListItem))
                                                                      button={true}
                                                                      className="MuiMenuItem-root ListItem_delete MuiMenuItem-gutters"
                                                                      classes={
                                                                        Object {
                                                                          "dense": "MuiMenuItem-dense",
                                                                        }
                                                                      }
                                                                      component="li"
                                                                      disableGutters={false}
                                                                      onClick={[Function]}
                                                                      role="menuitem"
                                                                      tabIndex={-1}
                                                                    >
                                                                      <ForwardRef(ListItem)
                                                                        button={true}
                                                                        className="MuiMenuItem-root ListItem_delete MuiMenuItem-gutters"
                                                                        classes={
                                                                          Object {
                                                                            "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                                            "button": "MuiListItem-button",
                                                                            "container": "MuiListItem-container",
                                                                            "dense": "MuiListItem-dense MuiMenuItem-dense",
                                                                            "disabled": "Mui-disabled",
                                                                            "divider": "MuiListItem-divider",
                                                                            "focusVisible": "Mui-focusVisible",
                                                                            "gutters": "MuiListItem-gutters",
                                                                            "root": "MuiListItem-root",
                                                                            "secondaryAction": "MuiListItem-secondaryAction",
                                                                            "selected": "Mui-selected",
                                                                          }
                                                                        }
                                                                        component="li"
                                                                        disableGutters={false}
                                                                        onClick={[Function]}
                                                                        role="menuitem"
                                                                        tabIndex={-1}
                                                                      >
                                                                        <WithStyles(ForwardRef(ButtonBase))
                                                                          className="MuiListItem-root MuiMenuItem-root ListItem_delete MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                          component="li"
                                                                          disabled={false}
                                                                          focusVisibleClassName="Mui-focusVisible"
                                                                          onClick={[Function]}
                                                                          role="menuitem"
                                                                          tabIndex={-1}
                                                                        >
                                                                          <ForwardRef(ButtonBase)
                                                                            className="MuiListItem-root MuiMenuItem-root ListItem_delete MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                            classes={
                                                                              Object {
                                                                                "disabled": "Mui-disabled",
                                                                                "focusVisible": "Mui-focusVisible",
                                                                                "root": "MuiButtonBase-root",
                                                                              }
                                                                            }
                                                                            component="li"
                                                                            disabled={false}
                                                                            focusVisibleClassName="Mui-focusVisible"
                                                                            onClick={[Function]}
                                                                            role="menuitem"
                                                                            tabIndex={-1}
                                                                          >
                                                                            <li
                                                                              aria-disabled={false}
                                                                              className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_delete MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                              onBlur={[Function]}
                                                                              onClick={[Function]}
                                                                              onDragLeave={[Function]}
                                                                              onFocus={[Function]}
                                                                              onKeyDown={[Function]}
                                                                              onKeyUp={[Function]}
                                                                              onMouseDown={[Function]}
                                                                              onMouseLeave={[Function]}
                                                                              onMouseUp={[Function]}
                                                                              onTouchEnd={[Function]}
                                                                              onTouchMove={[Function]}
                                                                              onTouchStart={[Function]}
                                                                              role="menuitem"
                                                                              tabIndex={-1}
                                                                            >
                                                                              Удалить
                                                                              <WithStyles(memo)
                                                                                center={false}
                                                                              >
                                                                                <ForwardRef(TouchRipple)
                                                                                  center={false}
                                                                                  classes={
                                                                                    Object {
                                                                                      "child": "MuiTouchRipple-child",
                                                                                      "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                      "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                      "ripple": "MuiTouchRipple-ripple",
                                                                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                      "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                      "root": "MuiTouchRipple-root",
                                                                                    }
                                                                                  }
                                                                                >
                                                                                  <span
                                                                                    className="MuiTouchRipple-root"
                                                                                  >
                                                                                    <TransitionGroup
                                                                                      childFactory={[Function]}
                                                                                      component={null}
                                                                                      exit={true}
                                                                                    />
                                                                                  </span>
                                                                                </ForwardRef(TouchRipple)>
                                                                              </WithStyles(memo)>
                                                                            </li>
                                                                          </ForwardRef(ButtonBase)>
                                                                        </WithStyles(ForwardRef(ButtonBase))>
                                                                      </ForwardRef(ListItem)>
                                                                    </WithStyles(ForwardRef(ListItem))>
                                                                  </ForwardRef(MenuItem)>
                                                                </WithStyles(ForwardRef(MenuItem))>
                                                              </ul>
                                                            </ForwardRef(List)>
                                                          </WithStyles(ForwardRef(List))>
                                                        </ForwardRef(MenuList)>
                                                      </div>
                                                    </ForwardRef(Paper)>
                                                  </WithStyles(ForwardRef(Paper))>
                                                </Transition>
                                              </ForwardRef(Fade)>
                                              <div
                                                data-test="sentinelEnd"
                                                tabIndex={0}
                                              />
                                            </Unstable_TrapFocus>
                                          </div>
                                        </Portal>
                                      </ForwardRef(Portal)>
                                    </ForwardRef(Modal)>
                                  </ForwardRef(Popover)>
                                </WithStyles(ForwardRef(Popover))>
                              </ForwardRef(Menu)>
                            </WithStyles(ForwardRef(Menu))>
                          </div>
                          <WithStyles(memo)
                            center={false}
                          >
                            <ForwardRef(TouchRipple)
                              center={false}
                              classes={
                                Object {
                                  "child": "MuiTouchRipple-child",
                                  "childLeaving": "MuiTouchRipple-childLeaving",
                                  "childPulsate": "MuiTouchRipple-childPulsate",
                                  "ripple": "MuiTouchRipple-ripple",
                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                  "rippleVisible": "MuiTouchRipple-rippleVisible",
                                  "root": "MuiTouchRipple-root",
                                }
                              }
                            >
                              <span
                                className="MuiTouchRipple-root"
                              >
                                <TransitionGroup
                                  childFactory={[Function]}
                                  component={null}
                                  exit={true}
                                />
                              </span>
                            </ForwardRef(TouchRipple)>
                          </WithStyles(memo)>
                        </div>
                      </ForwardRef(ButtonBase)>
                    </WithStyles(ForwardRef(ButtonBase))>
                  </ForwardRef(ListItem)>
                </WithStyles(ForwardRef(ListItem))>
              </div>
            </Memo(List)>
          </Connect(Component)>
        </div>
        <div
          className="lists__addListButton"
          onClick={[Function]}
        >
          <WithStyles(ForwardRef(IconButton))
            aria-label="add List"
            color="inherit"
          >
            <ForwardRef(IconButton)
              aria-label="add List"
              classes={
                Object {
                  "colorInherit": "MuiIconButton-colorInherit",
                  "colorPrimary": "MuiIconButton-colorPrimary",
                  "colorSecondary": "MuiIconButton-colorSecondary",
                  "disabled": "Mui-disabled",
                  "edgeEnd": "MuiIconButton-edgeEnd",
                  "edgeStart": "MuiIconButton-edgeStart",
                  "label": "MuiIconButton-label",
                  "root": "MuiIconButton-root",
                  "sizeSmall": "MuiIconButton-sizeSmall",
                }
              }
              color="inherit"
            >
              <WithStyles(ForwardRef(ButtonBase))
                aria-label="add List"
                centerRipple={true}
                className="MuiIconButton-root MuiIconButton-colorInherit"
                disabled={false}
                focusRipple={true}
              >
                <ForwardRef(ButtonBase)
                  aria-label="add List"
                  centerRipple={true}
                  className="MuiIconButton-root MuiIconButton-colorInherit"
                  classes={
                    Object {
                      "disabled": "Mui-disabled",
                      "focusVisible": "Mui-focusVisible",
                      "root": "MuiButtonBase-root",
                    }
                  }
                  disabled={false}
                  focusRipple={true}
                >
                  <button
                    aria-label="add List"
                    className="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit"
                    disabled={false}
                    onBlur={[Function]}
                    onDragLeave={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    onKeyUp={[Function]}
                    onMouseDown={[Function]}
                    onMouseLeave={[Function]}
                    onMouseUp={[Function]}
                    onTouchEnd={[Function]}
                    onTouchMove={[Function]}
                    onTouchStart={[Function]}
                    tabIndex={0}
                    type="button"
                  >
                    <span
                      className="MuiIconButton-label"
                    >
                      <ForwardRef(PlaylistAddIcon)
                        fontSize="medium"
                      >
                        <WithStyles(ForwardRef(SvgIcon))
                          fontSize="medium"
                        >
                          <ForwardRef(SvgIcon)
                            classes={
                              Object {
                                "colorAction": "MuiSvgIcon-colorAction",
                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                "colorError": "MuiSvgIcon-colorError",
                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                "root": "MuiSvgIcon-root",
                              }
                            }
                            fontSize="medium"
                          >
                            <svg
                              aria-hidden={true}
                              className="MuiSvgIcon-root"
                              focusable="false"
                              viewBox="0 0 24 24"
                            >
                              <path
                                d="M14 10H2v2h12v-2zm0-4H2v2h12V6zm4 8v-4h-2v4h-4v2h4v4h2v-4h4v-2h-4zM2 16h8v-2H2v2z"
                              />
                            </svg>
                          </ForwardRef(SvgIcon)>
                        </WithStyles(ForwardRef(SvgIcon))>
                      </ForwardRef(PlaylistAddIcon)>
                    </span>
                    <WithStyles(memo)
                      center={true}
                    >
                      <ForwardRef(TouchRipple)
                        center={true}
                        classes={
                          Object {
                            "child": "MuiTouchRipple-child",
                            "childLeaving": "MuiTouchRipple-childLeaving",
                            "childPulsate": "MuiTouchRipple-childPulsate",
                            "ripple": "MuiTouchRipple-ripple",
                            "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                            "rippleVisible": "MuiTouchRipple-rippleVisible",
                            "root": "MuiTouchRipple-root",
                          }
                        }
                      >
                        <span
                          className="MuiTouchRipple-root"
                        >
                          <TransitionGroup
                            childFactory={[Function]}
                            component={null}
                            exit={true}
                          />
                        </span>
                      </ForwardRef(TouchRipple)>
                    </WithStyles(memo)>
                  </button>
                </ForwardRef(ButtonBase)>
              </WithStyles(ForwardRef(ButtonBase))>
            </ForwardRef(IconButton)>
          </WithStyles(ForwardRef(IconButton))>
          <span>
            Добавить список
          </span>
        </div>
      </div>
    </Memo(Lists)>
  </Connect(Component)>
</Provider>
`;

exports[`Checking the list change 3`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(Component)>
    <Memo(Lists)
      addToDoListAC={[Function]}
      lists={
        Array [
          Object {
            "id": 1,
            "label": "Магазин",
            "toDoList": Array [],
          },
        ]
      }
      updateActiveTodoListIdAC={[Function]}
    >
      <div
        className="lists__close-wrapper null"
        onClick={[Function]}
      />
      <div
        className="lists null"
      >
        <input
          checked={false}
          className="hidden-menu-ticker"
          id="hmt"
          readOnly={true}
          type="checkbox"
        />
        <label
          className="btn-menu toggleMenu null"
          htmlFor="hmt"
          onClick={[Function]}
        >
          <span
            className="first"
          />
          <span
            className="second"
          />
          <span
            className="third"
          />
        </label>
        <h1
          className="lists_main"
          onClick={[Function]}
        >
          <ForwardRef(HomeIcon)>
            <WithStyles(ForwardRef(SvgIcon))>
              <ForwardRef(SvgIcon)
                classes={
                  Object {
                    "colorAction": "MuiSvgIcon-colorAction",
                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                    "colorError": "MuiSvgIcon-colorError",
                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                    "root": "MuiSvgIcon-root",
                  }
                }
              >
                <svg
                  aria-hidden={true}
                  className="MuiSvgIcon-root"
                  focusable="false"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z"
                  />
                </svg>
              </ForwardRef(SvgIcon)>
            </WithStyles(ForwardRef(SvgIcon))>
          </ForwardRef(HomeIcon)>
          <span>
            Главная
          </span>
        </h1>
        <h2
          className="lists__title"
        >
          <ForwardRef(FormatListBulletedIcon)>
            <WithStyles(ForwardRef(SvgIcon))>
              <ForwardRef(SvgIcon)
                classes={
                  Object {
                    "colorAction": "MuiSvgIcon-colorAction",
                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                    "colorError": "MuiSvgIcon-colorError",
                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                    "root": "MuiSvgIcon-root",
                  }
                }
              >
                <svg
                  aria-hidden={true}
                  className="MuiSvgIcon-root"
                  focusable="false"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M4 10.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm0-6c-.83 0-1.5.67-1.5 1.5S3.17 7.5 4 7.5 5.5 6.83 5.5 6 4.83 4.5 4 4.5zm0 12c-.83 0-1.5.68-1.5 1.5s.68 1.5 1.5 1.5 1.5-.68 1.5-1.5-.67-1.5-1.5-1.5zM7 19h14v-2H7v2zm0-6h14v-2H7v2zm0-8v2h14V5H7z"
                  />
                </svg>
              </ForwardRef(SvgIcon)>
            </WithStyles(ForwardRef(SvgIcon))>
          </ForwardRef(FormatListBulletedIcon)>
          <span>
            Списки:
          </span>
        </h2>
        <div
          className="lists__renderList null"
        >
          <Connect(Component)
            id={1}
            key="1"
            label="Магазин"
            needsDone={0}
            toggleDrawer={[Function]}
          >
            <Memo(List)
              activeToDoListId={null}
              deleteToDoListAC={[Function]}
              id={1}
              label="Магазин"
              needsDone={0}
              toggleDrawer={[Function]}
              updateActiveTodoListIdAC={[Function]}
              updateToDoListLabelAC={[Function]}
            >
              <div>
                <WithStyles(ForwardRef(ListItem))
                  button={true}
                  className="list__item"
                  onClick={[Function]}
                >
                  <ForwardRef(ListItem)
                    button={true}
                    className="list__item"
                    classes={
                      Object {
                        "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                        "button": "MuiListItem-button",
                        "container": "MuiListItem-container",
                        "dense": "MuiListItem-dense",
                        "disabled": "Mui-disabled",
                        "divider": "MuiListItem-divider",
                        "focusVisible": "Mui-focusVisible",
                        "gutters": "MuiListItem-gutters",
                        "root": "MuiListItem-root",
                        "secondaryAction": "MuiListItem-secondaryAction",
                        "selected": "Mui-selected",
                      }
                    }
                    onClick={[Function]}
                  >
                    <WithStyles(ForwardRef(ButtonBase))
                      className="MuiListItem-root list__item MuiListItem-gutters MuiListItem-button"
                      component="div"
                      disabled={false}
                      focusVisibleClassName="Mui-focusVisible"
                      onClick={[Function]}
                    >
                      <ForwardRef(ButtonBase)
                        className="MuiListItem-root list__item MuiListItem-gutters MuiListItem-button"
                        classes={
                          Object {
                            "disabled": "Mui-disabled",
                            "focusVisible": "Mui-focusVisible",
                            "root": "MuiButtonBase-root",
                          }
                        }
                        component="div"
                        disabled={false}
                        focusVisibleClassName="Mui-focusVisible"
                        onClick={[Function]}
                      >
                        <div
                          aria-disabled={false}
                          className="MuiButtonBase-root MuiListItem-root list__item MuiListItem-gutters MuiListItem-button"
                          onBlur={[Function]}
                          onClick={[Function]}
                          onDragLeave={[Function]}
                          onFocus={[Function]}
                          onKeyDown={[Function]}
                          onKeyUp={[Function]}
                          onMouseDown={[Function]}
                          onMouseLeave={[Function]}
                          onMouseUp={[Function]}
                          onTouchEnd={[Function]}
                          onTouchMove={[Function]}
                          onTouchStart={[Function]}
                          role="button"
                          tabIndex={0}
                        >
                          <div
                            key=".0"
                          >
                            Магазин
                          </div>
                          <div
                            className="list__wrapper__list__buttonMenu"
                            key=".1"
                          >
                            <WithStyles(ForwardRef(IconButton))
                              aria-controls="simple-menu"
                              aria-haspopup="true"
                              className="list__buttonMenu"
                              onClick={[Function]}
                            >
                              <ForwardRef(IconButton)
                                aria-controls="simple-menu"
                                aria-haspopup="true"
                                className="list__buttonMenu"
                                classes={
                                  Object {
                                    "colorInherit": "MuiIconButton-colorInherit",
                                    "colorPrimary": "MuiIconButton-colorPrimary",
                                    "colorSecondary": "MuiIconButton-colorSecondary",
                                    "disabled": "Mui-disabled",
                                    "edgeEnd": "MuiIconButton-edgeEnd",
                                    "edgeStart": "MuiIconButton-edgeStart",
                                    "label": "MuiIconButton-label",
                                    "root": "MuiIconButton-root",
                                    "sizeSmall": "MuiIconButton-sizeSmall",
                                  }
                                }
                                onClick={[Function]}
                              >
                                <WithStyles(ForwardRef(ButtonBase))
                                  aria-controls="simple-menu"
                                  aria-haspopup="true"
                                  centerRipple={true}
                                  className="MuiIconButton-root list__buttonMenu"
                                  disabled={false}
                                  focusRipple={true}
                                  onClick={[Function]}
                                >
                                  <ForwardRef(ButtonBase)
                                    aria-controls="simple-menu"
                                    aria-haspopup="true"
                                    centerRipple={true}
                                    className="MuiIconButton-root list__buttonMenu"
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "focusVisible": "Mui-focusVisible",
                                        "root": "MuiButtonBase-root",
                                      }
                                    }
                                    disabled={false}
                                    focusRipple={true}
                                    onClick={[Function]}
                                  >
                                    <button
                                      aria-controls="simple-menu"
                                      aria-haspopup="true"
                                      className="MuiButtonBase-root MuiIconButton-root list__buttonMenu"
                                      disabled={false}
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={0}
                                      type="button"
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <ForwardRef(MoreVertIcon)>
                                          <WithStyles(ForwardRef(SvgIcon))>
                                            <ForwardRef(SvgIcon)
                                              classes={
                                                Object {
                                                  "colorAction": "MuiSvgIcon-colorAction",
                                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                  "colorError": "MuiSvgIcon-colorError",
                                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                  "root": "MuiSvgIcon-root",
                                                }
                                              }
                                            >
                                              <svg
                                                aria-hidden={true}
                                                className="MuiSvgIcon-root"
                                                focusable="false"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                                />
                                              </svg>
                                            </ForwardRef(SvgIcon)>
                                          </WithStyles(ForwardRef(SvgIcon))>
                                        </ForwardRef(MoreVertIcon)>
                                      </span>
                                      <WithStyles(memo)
                                        center={true}
                                      >
                                        <ForwardRef(TouchRipple)
                                          center={true}
                                          classes={
                                            Object {
                                              "child": "MuiTouchRipple-child",
                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                              "ripple": "MuiTouchRipple-ripple",
                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                              "root": "MuiTouchRipple-root",
                                            }
                                          }
                                        >
                                          <span
                                            className="MuiTouchRipple-root"
                                          >
                                            <TransitionGroup
                                              childFactory={[Function]}
                                              component={null}
                                              exit={true}
                                            />
                                          </span>
                                        </ForwardRef(TouchRipple)>
                                      </WithStyles(memo)>
                                    </button>
                                  </ForwardRef(ButtonBase)>
                                </WithStyles(ForwardRef(ButtonBase))>
                              </ForwardRef(IconButton)>
                            </WithStyles(ForwardRef(IconButton))>
                            <WithStyles(ForwardRef(Menu))
                              TransitionComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "propTypes": Object {
                                    "children": [Function],
                                    "disableStrictModeCompat": [Function],
                                    "in": [Function],
                                    "onEnter": [Function],
                                    "onEntered": [Function],
                                    "onEntering": [Function],
                                    "onExit": [Function],
                                    "onExited": [Function],
                                    "onExiting": [Function],
                                    "style": [Function],
                                    "timeout": [Function],
                                  },
                                  "render": [Function],
                                }
                              }
                              anchorEl={null}
                              id="simple-menu"
                              keepMounted={true}
                              onClose={[Function]}
                              open={false}
                            >
                              <ForwardRef(Menu)
                                TransitionComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "propTypes": Object {
                                      "children": [Function],
                                      "disableStrictModeCompat": [Function],
                                      "in": [Function],
                                      "onEnter": [Function],
                                      "onEntered": [Function],
                                      "onEntering": [Function],
                                      "onExit": [Function],
                                      "onExited": [Function],
                                      "onExiting": [Function],
                                      "style": [Function],
                                      "timeout": [Function],
                                    },
                                    "render": [Function],
                                  }
                                }
                                anchorEl={null}
                                classes={
                                  Object {
                                    "list": "MuiMenu-list",
                                    "paper": "MuiMenu-paper",
                                  }
                                }
                                id="simple-menu"
                                keepMounted={true}
                                onClose={[Function]}
                                open={false}
                              >
                                <WithStyles(ForwardRef(Popover))
                                  PaperProps={
                                    Object {
                                      "classes": Object {
                                        "root": "MuiMenu-paper",
                                      },
                                    }
                                  }
                                  TransitionComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "propTypes": Object {
                                        "children": [Function],
                                        "disableStrictModeCompat": [Function],
                                        "in": [Function],
                                        "onEnter": [Function],
                                        "onEntered": [Function],
                                        "onEntering": [Function],
                                        "onExit": [Function],
                                        "onExited": [Function],
                                        "onExiting": [Function],
                                        "style": [Function],
                                        "timeout": [Function],
                                      },
                                      "render": [Function],
                                    }
                                  }
                                  TransitionProps={
                                    Object {
                                      "onEntering": [Function],
                                    }
                                  }
                                  anchorEl={null}
                                  anchorOrigin={
                                    Object {
                                      "horizontal": "left",
                                      "vertical": "top",
                                    }
                                  }
                                  getContentAnchorEl={[Function]}
                                  id="simple-menu"
                                  keepMounted={true}
                                  onClose={[Function]}
                                  open={false}
                                  transformOrigin={
                                    Object {
                                      "horizontal": "left",
                                      "vertical": "top",
                                    }
                                  }
                                  transitionDuration="auto"
                                >
                                  <ForwardRef(Popover)
                                    PaperProps={
                                      Object {
                                        "classes": Object {
                                          "root": "MuiMenu-paper",
                                        },
                                      }
                                    }
                                    TransitionComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "propTypes": Object {
                                          "children": [Function],
                                          "disableStrictModeCompat": [Function],
                                          "in": [Function],
                                          "onEnter": [Function],
                                          "onEntered": [Function],
                                          "onEntering": [Function],
                                          "onExit": [Function],
                                          "onExited": [Function],
                                          "onExiting": [Function],
                                          "style": [Function],
                                          "timeout": [Function],
                                        },
                                        "render": [Function],
                                      }
                                    }
                                    TransitionProps={
                                      Object {
                                        "onEntering": [Function],
                                      }
                                    }
                                    anchorEl={null}
                                    anchorOrigin={
                                      Object {
                                        "horizontal": "left",
                                        "vertical": "top",
                                      }
                                    }
                                    classes={
                                      Object {
                                        "paper": "MuiPopover-paper",
                                        "root": "MuiPopover-root",
                                      }
                                    }
                                    getContentAnchorEl={[Function]}
                                    id="simple-menu"
                                    keepMounted={true}
                                    onClose={[Function]}
                                    open={false}
                                    transformOrigin={
                                      Object {
                                        "horizontal": "left",
                                        "vertical": "top",
                                      }
                                    }
                                    transitionDuration="auto"
                                  >
                                    <ForwardRef(Modal)
                                      BackdropProps={
                                        Object {
                                          "invisible": true,
                                        }
                                      }
                                      className="MuiPopover-root"
                                      id="simple-menu"
                                      keepMounted={true}
                                      onClose={[Function]}
                                      open={false}
                                    >
                                      <ForwardRef(Portal)
                                        disablePortal={false}
                                      >
                                        <Portal
                                          containerInfo={
                                            <body
                                              style="padding-right: 0px; overflow: hidden;"
                                            >
                                              <div
                                                aria-hidden="true"
                                                class="MuiPopover-root"
                                                id="simple-menu"
                                                role="presentation"
                                                style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px; visibility: hidden;"
                                              >
                                                <div
                                                  data-test="sentinelStart"
                                                  tabindex="0"
                                                />
                                                <div
                                                  class="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                                  style="opacity: 0; visibility: hidden;"
                                                  tabindex="-1"
                                                >
                                                  <ul
                                                    class="MuiList-root MuiMenu-list MuiList-padding"
                                                    role="menu"
                                                    tabindex="-1"
                                                  >
                                                    <li
                                                      aria-disabled="false"
                                                      class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_edit MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                      role="menuitem"
                                                      tabindex="0"
                                                    >
                                                      Редактировать
                                                      <span
                                                        class="MuiTouchRipple-root"
                                                      />
                                                    </li>
                                                    <li
                                                      aria-disabled="false"
                                                      class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_delete MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                      role="menuitem"
                                                      tabindex="-1"
                                                    >
                                                      Удалить
                                                      <span
                                                        class="MuiTouchRipple-root"
                                                      />
                                                    </li>
                                                  </ul>
                                                </div>
                                                <div
                                                  data-test="sentinelEnd"
                                                  tabindex="0"
                                                />
                                              </div>
                                              <div
                                                aria-hidden="true"
                                                class="MuiPopover-root"
                                                id="simple-menu"
                                                role="presentation"
                                                style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                                              >
                                                <div
                                                  data-test="sentinelStart"
                                                  tabindex="0"
                                                />
                                                <div
                                                  class="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                                  style="opacity: 0; webkit-transition: opacity 195ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 195ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; top: 16px; left: 16px; transform-origin: -16px -16px;"
                                                  tabindex="-1"
                                                >
                                                  <ul
                                                    class="MuiList-root MuiMenu-list MuiList-padding"
                                                    role="menu"
                                                    tabindex="-1"
                                                  >
                                                    <li
                                                      aria-disabled="false"
                                                      class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_edit MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button Mui-focusVisible Mui-focusVisible"
                                                      role="menuitem"
                                                      tabindex="0"
                                                    >
                                                      Редактировать
                                                      <span
                                                        class="MuiTouchRipple-root"
                                                      />
                                                    </li>
                                                    <li
                                                      aria-disabled="false"
                                                      class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_delete MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                      role="menuitem"
                                                      tabindex="-1"
                                                    >
                                                      Удалить
                                                      <span
                                                        class="MuiTouchRipple-root"
                                                      />
                                                    </li>
                                                  </ul>
                                                </div>
                                                <div
                                                  data-test="sentinelEnd"
                                                  tabindex="0"
                                                />
                                              </div>
                                              <div
                                                aria-hidden="true"
                                                class="MuiPopover-root"
                                                id="simple-menu"
                                                role="presentation"
                                                style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                                              >
                                                <div
                                                  data-test="sentinelStart"
                                                  tabindex="0"
                                                />
                                                <div
                                                  class="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                                  style="opacity: 0; webkit-transition: opacity 195ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 195ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; top: 16px; left: 16px; transform-origin: -16px -16px;"
                                                  tabindex="-1"
                                                >
                                                  <ul
                                                    class="MuiList-root MuiMenu-list MuiList-padding"
                                                    role="menu"
                                                    tabindex="-1"
                                                  >
                                                    <li
                                                      aria-disabled="false"
                                                      class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_edit MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                      role="menuitem"
                                                      tabindex="0"
                                                    >
                                                      Редактировать
                                                      <span
                                                        class="MuiTouchRipple-root"
                                                      />
                                                    </li>
                                                    <li
                                                      aria-disabled="false"
                                                      class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_delete MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                      role="menuitem"
                                                      tabindex="-1"
                                                    >
                                                      Удалить
                                                      <span
                                                        class="MuiTouchRipple-root"
                                                      />
                                                    </li>
                                                  </ul>
                                                </div>
                                                <div
                                                  data-test="sentinelEnd"
                                                  tabindex="0"
                                                />
                                              </div>
                                              <div
                                                class="MuiDialog-root"
                                                color="primary"
                                                role="presentation"
                                                style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                                              >
                                                <div
                                                  aria-hidden="true"
                                                  class="MuiBackdrop-root"
                                                  style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                                                />
                                                <div
                                                  data-test="sentinelStart"
                                                  tabindex="0"
                                                />
                                                <div
                                                  class="MuiDialog-container MuiDialog-scrollPaper"
                                                  role="none presentation"
                                                  style="webkit-transform: none; transform: none; webkit-transition: -webkit-transform 225ms cubic-bezier(0.0, 0, 0.2, 1) 0ms; transition: transform 225ms cubic-bezier(0.0, 0, 0.2, 1) 0ms;"
                                                  tabindex="-1"
                                                >
                                                  <div
                                                    aria-describedby="alert-dialog-slide-description"
                                                    aria-labelledby="alert-dialog-slide-title"
                                                    class="MuiPaper-root MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiPaper-elevation24 MuiPaper-rounded"
                                                    role="dialog"
                                                  >
                                                    <div
                                                      class="MuiDialogTitle-root EditToDoListItem__title"
                                                      id="alert-dialog-slide-title"
                                                    >
                                                      <h2
                                                        class="MuiTypography-root MuiTypography-h6"
                                                      >
                                                        Редактирование списка
                                                      </h2>
                                                    </div>
                                                    <div
                                                      class="MuiDialogContent-root"
                                                    >
                                                      <div
                                                        class="MuiFormControl-root MuiTextField-root MuiFormControl-marginDense MuiFormControl-fullWidth"
                                                      >
                                                        <label
                                                          class="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-marginDense MuiFormLabel-filled Mui-focused Mui-focused"
                                                          data-shrink="true"
                                                          for="name"
                                                          id="name-label"
                                                        >
                                                          Название списка
                                                        </label>
                                                        <div
                                                          class="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-fullWidth MuiInput-fullWidth Mui-focused Mui-focused MuiInputBase-formControl MuiInput-formControl MuiInputBase-marginDense MuiInput-marginDense"
                                                        >
                                                          <input
                                                            aria-invalid="false"
                                                            autocomplete="off"
                                                            class="MuiInputBase-input MuiInput-input MuiInputBase-inputMarginDense MuiInput-inputMarginDense"
                                                            id="name"
                                                            maxlength="40"
                                                            type="text"
                                                            value="Магазин"
                                                          />
                                                        </div>
                                                      </div>
                                                    </div>
                                                    <div
                                                      class="MuiDialogActions-root MuiDialogActions-spacing"
                                                    >
                                                      <button
                                                        class="MuiButtonBase-root MuiButton-root MuiButton-contained"
                                                        tabindex="0"
                                                        type="button"
                                                      >
                                                        <span
                                                          class="MuiButton-label"
                                                        >
                                                          Отменить
                                                        </span>
                                                        <span
                                                          class="MuiTouchRipple-root"
                                                        />
                                                      </button>
                                                      <button
                                                        class="MuiButtonBase-root MuiButton-root MuiButton-contained saveButton MuiButton-containedPrimary"
                                                        tabindex="0"
                                                        type="button"
                                                      >
                                                        <span
                                                          class="MuiButton-label"
                                                        >
                                                          <span
                                                            class="MuiButton-startIcon MuiButton-iconSizeMedium"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              class="MuiSvgIcon-root"
                                                              focusable="false"
                                                              viewBox="0 0 24 24"
                                                            >
                                                              <path
                                                                d="M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z"
                                                              />
                                                            </svg>
                                                          </span>
                                                          Сохранить
                                                        </span>
                                                        <span
                                                          class="MuiTouchRipple-root"
                                                        />
                                                      </button>
                                                    </div>
                                                  </div>
                                                </div>
                                                <div
                                                  data-test="sentinelEnd"
                                                  tabindex="0"
                                                />
                                              </div>
                                            </body>
                                          }
                                        >
                                          <div
                                            className="MuiPopover-root"
                                            id="simple-menu"
                                            onKeyDown={[Function]}
                                            role="presentation"
                                            style={
                                              Object {
                                                "bottom": 0,
                                                "left": 0,
                                                "position": "fixed",
                                                "right": 0,
                                                "top": 0,
                                                "zIndex": 1300,
                                              }
                                            }
                                          >
                                            <ForwardRef(SimpleBackdrop)
                                              invisible={true}
                                              onClick={[Function]}
                                              open={false}
                                            />
                                            <Unstable_TrapFocus
                                              disableAutoFocus={false}
                                              disableEnforceFocus={false}
                                              disableRestoreFocus={false}
                                              getDoc={[Function]}
                                              isEnabled={[Function]}
                                              open={false}
                                            >
                                              <div
                                                data-test="sentinelStart"
                                                tabIndex={0}
                                              />
                                              <ForwardRef(Fade)
                                                appear={true}
                                                in={false}
                                                onEnter={[Function]}
                                                onEntering={[Function]}
                                                onExited={[Function]}
                                                tabIndex="-1"
                                              >
                                                <Transition
                                                  appear={true}
                                                  enter={true}
                                                  exit={true}
                                                  in={false}
                                                  mountOnEnter={false}
                                                  onEnter={[Function]}
                                                  onEntered={[Function]}
                                                  onEntering={[Function]}
                                                  onExit={[Function]}
                                                  onExited={[Function]}
                                                  onExiting={[Function]}
                                                  tabIndex="-1"
                                                  timeout={
                                                    Object {
                                                      "enter": 225,
                                                      "exit": 195,
                                                    }
                                                  }
                                                  unmountOnExit={false}
                                                >
                                                  <WithStyles(ForwardRef(Paper))
                                                    className="MuiPopover-paper"
                                                    classes={
                                                      Object {
                                                        "root": "MuiMenu-paper",
                                                      }
                                                    }
                                                    elevation={8}
                                                    style={
                                                      Object {
                                                        "opacity": 0,
                                                        "visibility": undefined,
                                                      }
                                                    }
                                                    tabIndex="-1"
                                                  >
                                                    <ForwardRef(Paper)
                                                      className="MuiPopover-paper"
                                                      classes={
                                                        Object {
                                                          "elevation0": "MuiPaper-elevation0",
                                                          "elevation1": "MuiPaper-elevation1",
                                                          "elevation10": "MuiPaper-elevation10",
                                                          "elevation11": "MuiPaper-elevation11",
                                                          "elevation12": "MuiPaper-elevation12",
                                                          "elevation13": "MuiPaper-elevation13",
                                                          "elevation14": "MuiPaper-elevation14",
                                                          "elevation15": "MuiPaper-elevation15",
                                                          "elevation16": "MuiPaper-elevation16",
                                                          "elevation17": "MuiPaper-elevation17",
                                                          "elevation18": "MuiPaper-elevation18",
                                                          "elevation19": "MuiPaper-elevation19",
                                                          "elevation2": "MuiPaper-elevation2",
                                                          "elevation20": "MuiPaper-elevation20",
                                                          "elevation21": "MuiPaper-elevation21",
                                                          "elevation22": "MuiPaper-elevation22",
                                                          "elevation23": "MuiPaper-elevation23",
                                                          "elevation24": "MuiPaper-elevation24",
                                                          "elevation3": "MuiPaper-elevation3",
                                                          "elevation4": "MuiPaper-elevation4",
                                                          "elevation5": "MuiPaper-elevation5",
                                                          "elevation6": "MuiPaper-elevation6",
                                                          "elevation7": "MuiPaper-elevation7",
                                                          "elevation8": "MuiPaper-elevation8",
                                                          "elevation9": "MuiPaper-elevation9",
                                                          "outlined": "MuiPaper-outlined",
                                                          "root": "MuiPaper-root MuiMenu-paper",
                                                          "rounded": "MuiPaper-rounded",
                                                        }
                                                      }
                                                      elevation={8}
                                                      style={
                                                        Object {
                                                          "opacity": 0,
                                                          "visibility": undefined,
                                                        }
                                                      }
                                                      tabIndex="-1"
                                                    >
                                                      <div
                                                        className="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                                        style={
                                                          Object {
                                                            "opacity": 0,
                                                            "visibility": undefined,
                                                          }
                                                        }
                                                        tabIndex="-1"
                                                      >
                                                        <ForwardRef(MenuList)
                                                          actions={
                                                            Object {
                                                              "current": Object {
                                                                "adjustStyleForScrollbar": [Function],
                                                              },
                                                            }
                                                          }
                                                          autoFocus={false}
                                                          autoFocusItem={false}
                                                          className="MuiMenu-list"
                                                          onKeyDown={[Function]}
                                                          variant="selectedMenu"
                                                        >
                                                          <WithStyles(ForwardRef(List))
                                                            className="MuiMenu-list"
                                                            onKeyDown={[Function]}
                                                            role="menu"
                                                            tabIndex={-1}
                                                          >
                                                            <ForwardRef(List)
                                                              className="MuiMenu-list"
                                                              classes={
                                                                Object {
                                                                  "dense": "MuiList-dense",
                                                                  "padding": "MuiList-padding",
                                                                  "root": "MuiList-root",
                                                                  "subheader": "MuiList-subheader",
                                                                }
                                                              }
                                                              onKeyDown={[Function]}
                                                              role="menu"
                                                              tabIndex={-1}
                                                            >
                                                              <ul
                                                                className="MuiList-root MuiMenu-list MuiList-padding"
                                                                onKeyDown={[Function]}
                                                                role="menu"
                                                                tabIndex={-1}
                                                              >
                                                                <WithStyles(ForwardRef(MenuItem))
                                                                  className="ListItem_edit"
                                                                  key=".$.0"
                                                                  onClick={[Function]}
                                                                  tabIndex={0}
                                                                >
                                                                  <ForwardRef(MenuItem)
                                                                    className="ListItem_edit"
                                                                    classes={
                                                                      Object {
                                                                        "dense": "MuiMenuItem-dense",
                                                                        "gutters": "MuiMenuItem-gutters",
                                                                        "root": "MuiMenuItem-root",
                                                                        "selected": "Mui-selected",
                                                                      }
                                                                    }
                                                                    onClick={[Function]}
                                                                    tabIndex={0}
                                                                  >
                                                                    <WithStyles(ForwardRef(ListItem))
                                                                      button={true}
                                                                      className="MuiMenuItem-root ListItem_edit MuiMenuItem-gutters"
                                                                      classes={
                                                                        Object {
                                                                          "dense": "MuiMenuItem-dense",
                                                                        }
                                                                      }
                                                                      component="li"
                                                                      disableGutters={false}
                                                                      onClick={[Function]}
                                                                      role="menuitem"
                                                                      tabIndex={0}
                                                                    >
                                                                      <ForwardRef(ListItem)
                                                                        button={true}
                                                                        className="MuiMenuItem-root ListItem_edit MuiMenuItem-gutters"
                                                                        classes={
                                                                          Object {
                                                                            "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                                            "button": "MuiListItem-button",
                                                                            "container": "MuiListItem-container",
                                                                            "dense": "MuiListItem-dense MuiMenuItem-dense",
                                                                            "disabled": "Mui-disabled",
                                                                            "divider": "MuiListItem-divider",
                                                                            "focusVisible": "Mui-focusVisible",
                                                                            "gutters": "MuiListItem-gutters",
                                                                            "root": "MuiListItem-root",
                                                                            "secondaryAction": "MuiListItem-secondaryAction",
                                                                            "selected": "Mui-selected",
                                                                          }
                                                                        }
                                                                        component="li"
                                                                        disableGutters={false}
                                                                        onClick={[Function]}
                                                                        role="menuitem"
                                                                        tabIndex={0}
                                                                      >
                                                                        <WithStyles(ForwardRef(ButtonBase))
                                                                          className="MuiListItem-root MuiMenuItem-root ListItem_edit MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                          component="li"
                                                                          disabled={false}
                                                                          focusVisibleClassName="Mui-focusVisible"
                                                                          onClick={[Function]}
                                                                          role="menuitem"
                                                                          tabIndex={0}
                                                                        >
                                                                          <ForwardRef(ButtonBase)
                                                                            className="MuiListItem-root MuiMenuItem-root ListItem_edit MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                            classes={
                                                                              Object {
                                                                                "disabled": "Mui-disabled",
                                                                                "focusVisible": "Mui-focusVisible",
                                                                                "root": "MuiButtonBase-root",
                                                                              }
                                                                            }
                                                                            component="li"
                                                                            disabled={false}
                                                                            focusVisibleClassName="Mui-focusVisible"
                                                                            onClick={[Function]}
                                                                            role="menuitem"
                                                                            tabIndex={0}
                                                                          >
                                                                            <li
                                                                              aria-disabled={false}
                                                                              className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_edit MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                              onBlur={[Function]}
                                                                              onClick={[Function]}
                                                                              onDragLeave={[Function]}
                                                                              onFocus={[Function]}
                                                                              onKeyDown={[Function]}
                                                                              onKeyUp={[Function]}
                                                                              onMouseDown={[Function]}
                                                                              onMouseLeave={[Function]}
                                                                              onMouseUp={[Function]}
                                                                              onTouchEnd={[Function]}
                                                                              onTouchMove={[Function]}
                                                                              onTouchStart={[Function]}
                                                                              role="menuitem"
                                                                              tabIndex={0}
                                                                            >
                                                                              Редактировать
                                                                              <WithStyles(memo)
                                                                                center={false}
                                                                              >
                                                                                <ForwardRef(TouchRipple)
                                                                                  center={false}
                                                                                  classes={
                                                                                    Object {
                                                                                      "child": "MuiTouchRipple-child",
                                                                                      "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                      "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                      "ripple": "MuiTouchRipple-ripple",
                                                                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                      "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                      "root": "MuiTouchRipple-root",
                                                                                    }
                                                                                  }
                                                                                >
                                                                                  <span
                                                                                    className="MuiTouchRipple-root"
                                                                                  >
                                                                                    <TransitionGroup
                                                                                      childFactory={[Function]}
                                                                                      component={null}
                                                                                      exit={true}
                                                                                    />
                                                                                  </span>
                                                                                </ForwardRef(TouchRipple)>
                                                                              </WithStyles(memo)>
                                                                            </li>
                                                                          </ForwardRef(ButtonBase)>
                                                                        </WithStyles(ForwardRef(ButtonBase))>
                                                                      </ForwardRef(ListItem)>
                                                                    </WithStyles(ForwardRef(ListItem))>
                                                                  </ForwardRef(MenuItem)>
                                                                </WithStyles(ForwardRef(MenuItem))>
                                                                <WithStyles(ForwardRef(MenuItem))
                                                                  className="ListItem_delete"
                                                                  key=".$.1"
                                                                  onClick={[Function]}
                                                                >
                                                                  <ForwardRef(MenuItem)
                                                                    className="ListItem_delete"
                                                                    classes={
                                                                      Object {
                                                                        "dense": "MuiMenuItem-dense",
                                                                        "gutters": "MuiMenuItem-gutters",
                                                                        "root": "MuiMenuItem-root",
                                                                        "selected": "Mui-selected",
                                                                      }
                                                                    }
                                                                    onClick={[Function]}
                                                                  >
                                                                    <WithStyles(ForwardRef(ListItem))
                                                                      button={true}
                                                                      className="MuiMenuItem-root ListItem_delete MuiMenuItem-gutters"
                                                                      classes={
                                                                        Object {
                                                                          "dense": "MuiMenuItem-dense",
                                                                        }
                                                                      }
                                                                      component="li"
                                                                      disableGutters={false}
                                                                      onClick={[Function]}
                                                                      role="menuitem"
                                                                      tabIndex={-1}
                                                                    >
                                                                      <ForwardRef(ListItem)
                                                                        button={true}
                                                                        className="MuiMenuItem-root ListItem_delete MuiMenuItem-gutters"
                                                                        classes={
                                                                          Object {
                                                                            "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                                            "button": "MuiListItem-button",
                                                                            "container": "MuiListItem-container",
                                                                            "dense": "MuiListItem-dense MuiMenuItem-dense",
                                                                            "disabled": "Mui-disabled",
                                                                            "divider": "MuiListItem-divider",
                                                                            "focusVisible": "Mui-focusVisible",
                                                                            "gutters": "MuiListItem-gutters",
                                                                            "root": "MuiListItem-root",
                                                                            "secondaryAction": "MuiListItem-secondaryAction",
                                                                            "selected": "Mui-selected",
                                                                          }
                                                                        }
                                                                        component="li"
                                                                        disableGutters={false}
                                                                        onClick={[Function]}
                                                                        role="menuitem"
                                                                        tabIndex={-1}
                                                                      >
                                                                        <WithStyles(ForwardRef(ButtonBase))
                                                                          className="MuiListItem-root MuiMenuItem-root ListItem_delete MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                          component="li"
                                                                          disabled={false}
                                                                          focusVisibleClassName="Mui-focusVisible"
                                                                          onClick={[Function]}
                                                                          role="menuitem"
                                                                          tabIndex={-1}
                                                                        >
                                                                          <ForwardRef(ButtonBase)
                                                                            className="MuiListItem-root MuiMenuItem-root ListItem_delete MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                            classes={
                                                                              Object {
                                                                                "disabled": "Mui-disabled",
                                                                                "focusVisible": "Mui-focusVisible",
                                                                                "root": "MuiButtonBase-root",
                                                                              }
                                                                            }
                                                                            component="li"
                                                                            disabled={false}
                                                                            focusVisibleClassName="Mui-focusVisible"
                                                                            onClick={[Function]}
                                                                            role="menuitem"
                                                                            tabIndex={-1}
                                                                          >
                                                                            <li
                                                                              aria-disabled={false}
                                                                              className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_delete MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                              onBlur={[Function]}
                                                                              onClick={[Function]}
                                                                              onDragLeave={[Function]}
                                                                              onFocus={[Function]}
                                                                              onKeyDown={[Function]}
                                                                              onKeyUp={[Function]}
                                                                              onMouseDown={[Function]}
                                                                              onMouseLeave={[Function]}
                                                                              onMouseUp={[Function]}
                                                                              onTouchEnd={[Function]}
                                                                              onTouchMove={[Function]}
                                                                              onTouchStart={[Function]}
                                                                              role="menuitem"
                                                                              tabIndex={-1}
                                                                            >
                                                                              Удалить
                                                                              <WithStyles(memo)
                                                                                center={false}
                                                                              >
                                                                                <ForwardRef(TouchRipple)
                                                                                  center={false}
                                                                                  classes={
                                                                                    Object {
                                                                                      "child": "MuiTouchRipple-child",
                                                                                      "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                      "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                      "ripple": "MuiTouchRipple-ripple",
                                                                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                      "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                      "root": "MuiTouchRipple-root",
                                                                                    }
                                                                                  }
                                                                                >
                                                                                  <span
                                                                                    className="MuiTouchRipple-root"
                                                                                  >
                                                                                    <TransitionGroup
                                                                                      childFactory={[Function]}
                                                                                      component={null}
                                                                                      exit={true}
                                                                                    />
                                                                                  </span>
                                                                                </ForwardRef(TouchRipple)>
                                                                              </WithStyles(memo)>
                                                                            </li>
                                                                          </ForwardRef(ButtonBase)>
                                                                        </WithStyles(ForwardRef(ButtonBase))>
                                                                      </ForwardRef(ListItem)>
                                                                    </WithStyles(ForwardRef(ListItem))>
                                                                  </ForwardRef(MenuItem)>
                                                                </WithStyles(ForwardRef(MenuItem))>
                                                              </ul>
                                                            </ForwardRef(List)>
                                                          </WithStyles(ForwardRef(List))>
                                                        </ForwardRef(MenuList)>
                                                      </div>
                                                    </ForwardRef(Paper)>
                                                  </WithStyles(ForwardRef(Paper))>
                                                </Transition>
                                              </ForwardRef(Fade)>
                                              <div
                                                data-test="sentinelEnd"
                                                tabIndex={0}
                                              />
                                            </Unstable_TrapFocus>
                                          </div>
                                        </Portal>
                                      </ForwardRef(Portal)>
                                    </ForwardRef(Modal)>
                                  </ForwardRef(Popover)>
                                </WithStyles(ForwardRef(Popover))>
                              </ForwardRef(Menu)>
                            </WithStyles(ForwardRef(Menu))>
                          </div>
                          <WithStyles(memo)
                            center={false}
                          >
                            <ForwardRef(TouchRipple)
                              center={false}
                              classes={
                                Object {
                                  "child": "MuiTouchRipple-child",
                                  "childLeaving": "MuiTouchRipple-childLeaving",
                                  "childPulsate": "MuiTouchRipple-childPulsate",
                                  "ripple": "MuiTouchRipple-ripple",
                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                  "rippleVisible": "MuiTouchRipple-rippleVisible",
                                  "root": "MuiTouchRipple-root",
                                }
                              }
                            >
                              <span
                                className="MuiTouchRipple-root"
                              >
                                <TransitionGroup
                                  childFactory={[Function]}
                                  component={null}
                                  exit={true}
                                />
                              </span>
                            </ForwardRef(TouchRipple)>
                          </WithStyles(memo)>
                        </div>
                      </ForwardRef(ButtonBase)>
                    </WithStyles(ForwardRef(ButtonBase))>
                  </ForwardRef(ListItem)>
                </WithStyles(ForwardRef(ListItem))>
                <Memo(EditForm)
                  eventClose={[Function]}
                  eventSave={[Function]}
                  initialLabel="Магазин"
                  text="Название списка"
                  title="Редактирование списка"
                >
                  <WithStyles(ForwardRef(Dialog))
                    TransitionComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "render": [Function],
                      }
                    }
                    aria-describedby="alert-dialog-slide-description"
                    aria-labelledby="alert-dialog-slide-title"
                    color="primary"
                    keepMounted={true}
                    onClose={[Function]}
                    open={true}
                  >
                    <ForwardRef(Dialog)
                      TransitionComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        }
                      }
                      aria-describedby="alert-dialog-slide-description"
                      aria-labelledby="alert-dialog-slide-title"
                      classes={
                        Object {
                          "container": "MuiDialog-container",
                          "paper": "MuiDialog-paper",
                          "paperFullScreen": "MuiDialog-paperFullScreen",
                          "paperFullWidth": "MuiDialog-paperFullWidth",
                          "paperScrollBody": "MuiDialog-paperScrollBody",
                          "paperScrollPaper": "MuiDialog-paperScrollPaper",
                          "paperWidthFalse": "MuiDialog-paperWidthFalse",
                          "paperWidthLg": "MuiDialog-paperWidthLg",
                          "paperWidthMd": "MuiDialog-paperWidthMd",
                          "paperWidthSm": "MuiDialog-paperWidthSm",
                          "paperWidthXl": "MuiDialog-paperWidthXl",
                          "paperWidthXs": "MuiDialog-paperWidthXs",
                          "root": "MuiDialog-root",
                          "scrollBody": "MuiDialog-scrollBody",
                          "scrollPaper": "MuiDialog-scrollPaper",
                        }
                      }
                      color="primary"
                      keepMounted={true}
                      onClose={[Function]}
                      open={true}
                    >
                      <ForwardRef(Modal)
                        BackdropComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "Naked": Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "propTypes": Object {
                                "children": [Function],
                                "className": [Function],
                                "classes": [Function],
                                "invisible": [Function],
                                "open": [Function],
                                "transitionDuration": [Function],
                              },
                              "render": [Function],
                            },
                            "options": Object {
                              "defaultTheme": Object {
                                "breakpoints": Object {
                                  "between": [Function],
                                  "down": [Function],
                                  "keys": Array [
                                    "xs",
                                    "sm",
                                    "md",
                                    "lg",
                                    "xl",
                                  ],
                                  "only": [Function],
                                  "up": [Function],
                                  "values": Object {
                                    "lg": 1280,
                                    "md": 960,
                                    "sm": 600,
                                    "xl": 1920,
                                    "xs": 0,
                                  },
                                  "width": [Function],
                                },
                                "direction": "ltr",
                                "mixins": Object {
                                  "gutters": [Function],
                                  "toolbar": Object {
                                    "@media (min-width:0px) and (orientation: landscape)": Object {
                                      "minHeight": 48,
                                    },
                                    "@media (min-width:600px)": Object {
                                      "minHeight": 64,
                                    },
                                    "minHeight": 56,
                                  },
                                },
                                "overrides": Object {},
                                "palette": Object {
                                  "action": Object {
                                    "activatedOpacity": 0.12,
                                    "active": "rgba(0, 0, 0, 0.54)",
                                    "disabled": "rgba(0, 0, 0, 0.26)",
                                    "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                    "disabledOpacity": 0.38,
                                    "focus": "rgba(0, 0, 0, 0.12)",
                                    "focusOpacity": 0.12,
                                    "hover": "rgba(0, 0, 0, 0.04)",
                                    "hoverOpacity": 0.04,
                                    "selected": "rgba(0, 0, 0, 0.08)",
                                    "selectedOpacity": 0.08,
                                  },
                                  "augmentColor": [Function],
                                  "background": Object {
                                    "default": "#fafafa",
                                    "paper": "#fff",
                                  },
                                  "common": Object {
                                    "black": "#000",
                                    "white": "#fff",
                                  },
                                  "contrastThreshold": 3,
                                  "divider": "rgba(0, 0, 0, 0.12)",
                                  "error": Object {
                                    "contrastText": "#fff",
                                    "dark": "#d32f2f",
                                    "light": "#e57373",
                                    "main": "#f44336",
                                  },
                                  "getContrastText": [Function],
                                  "grey": Object {
                                    "100": "#f5f5f5",
                                    "200": "#eeeeee",
                                    "300": "#e0e0e0",
                                    "400": "#bdbdbd",
                                    "50": "#fafafa",
                                    "500": "#9e9e9e",
                                    "600": "#757575",
                                    "700": "#616161",
                                    "800": "#424242",
                                    "900": "#212121",
                                    "A100": "#d5d5d5",
                                    "A200": "#aaaaaa",
                                    "A400": "#303030",
                                    "A700": "#616161",
                                  },
                                  "info": Object {
                                    "contrastText": "#fff",
                                    "dark": "#1976d2",
                                    "light": "#64b5f6",
                                    "main": "#2196f3",
                                  },
                                  "primary": Object {
                                    "contrastText": "#fff",
                                    "dark": "#303f9f",
                                    "light": "#7986cb",
                                    "main": "#3f51b5",
                                  },
                                  "secondary": Object {
                                    "contrastText": "#fff",
                                    "dark": "#c51162",
                                    "light": "#ff4081",
                                    "main": "#f50057",
                                  },
                                  "success": Object {
                                    "contrastText": "rgba(0, 0, 0, 0.87)",
                                    "dark": "#388e3c",
                                    "light": "#81c784",
                                    "main": "#4caf50",
                                  },
                                  "text": Object {
                                    "disabled": "rgba(0, 0, 0, 0.38)",
                                    "hint": "rgba(0, 0, 0, 0.38)",
                                    "primary": "rgba(0, 0, 0, 0.87)",
                                    "secondary": "rgba(0, 0, 0, 0.54)",
                                  },
                                  "tonalOffset": 0.2,
                                  "type": "light",
                                  "warning": Object {
                                    "contrastText": "rgba(0, 0, 0, 0.87)",
                                    "dark": "#f57c00",
                                    "light": "#ffb74d",
                                    "main": "#ff9800",
                                  },
                                },
                                "props": Object {},
                                "shadows": Array [
                                  "none",
                                  "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                  "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                  "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                  "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                  "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                  "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                  "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                  "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                  "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                  "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                  "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                  "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                  "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                  "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                  "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                  "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                ],
                                "shape": Object {
                                  "borderRadius": 4,
                                },
                                "spacing": [Function],
                                "transitions": Object {
                                  "create": [Function],
                                  "duration": Object {
                                    "complex": 375,
                                    "enteringScreen": 225,
                                    "leavingScreen": 195,
                                    "short": 250,
                                    "shorter": 200,
                                    "shortest": 150,
                                    "standard": 300,
                                  },
                                  "easing": Object {
                                    "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                    "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                    "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                    "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                  },
                                  "getAutoHeightDuration": [Function],
                                },
                                "typography": Object {
                                  "body1": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.00938em",
                                    "lineHeight": 1.5,
                                  },
                                  "body2": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.875rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.01071em",
                                    "lineHeight": 1.43,
                                  },
                                  "button": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.875rem",
                                    "fontWeight": 500,
                                    "letterSpacing": "0.02857em",
                                    "lineHeight": 1.75,
                                    "textTransform": "uppercase",
                                  },
                                  "caption": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.75rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.03333em",
                                    "lineHeight": 1.66,
                                  },
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": 14,
                                  "fontWeightBold": 700,
                                  "fontWeightLight": 300,
                                  "fontWeightMedium": 500,
                                  "fontWeightRegular": 400,
                                  "h1": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "6rem",
                                    "fontWeight": 300,
                                    "letterSpacing": "-0.01562em",
                                    "lineHeight": 1.167,
                                  },
                                  "h2": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "3.75rem",
                                    "fontWeight": 300,
                                    "letterSpacing": "-0.00833em",
                                    "lineHeight": 1.2,
                                  },
                                  "h3": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "3rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0em",
                                    "lineHeight": 1.167,
                                  },
                                  "h4": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "2.125rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.00735em",
                                    "lineHeight": 1.235,
                                  },
                                  "h5": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1.5rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0em",
                                    "lineHeight": 1.334,
                                  },
                                  "h6": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1.25rem",
                                    "fontWeight": 500,
                                    "letterSpacing": "0.0075em",
                                    "lineHeight": 1.6,
                                  },
                                  "htmlFontSize": 16,
                                  "overline": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.75rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.08333em",
                                    "lineHeight": 2.66,
                                    "textTransform": "uppercase",
                                  },
                                  "pxToRem": [Function],
                                  "round": [Function],
                                  "subtitle1": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.00938em",
                                    "lineHeight": 1.75,
                                  },
                                  "subtitle2": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.875rem",
                                    "fontWeight": 500,
                                    "letterSpacing": "0.00714em",
                                    "lineHeight": 1.57,
                                  },
                                },
                                "zIndex": Object {
                                  "appBar": 1100,
                                  "drawer": 1200,
                                  "mobileStepper": 1000,
                                  "modal": 1300,
                                  "snackbar": 1400,
                                  "speedDial": 1050,
                                  "tooltip": 1500,
                                },
                              },
                              "name": "MuiBackdrop",
                            },
                            "propTypes": Object {
                              "classes": [Function],
                              "innerRef": [Function],
                            },
                            "render": [Function],
                            "useStyles": [Function],
                          }
                        }
                        BackdropProps={
                          Object {
                            "transitionDuration": Object {
                              "enter": 225,
                              "exit": 195,
                            },
                          }
                        }
                        className="MuiDialog-root"
                        closeAfterTransition={true}
                        color="primary"
                        disableEscapeKeyDown={false}
                        keepMounted={true}
                        onClose={[Function]}
                        open={true}
                      >
                        <ForwardRef(Portal)
                          disablePortal={false}
                        >
                          <Portal
                            containerInfo={
                              <body
                                style="padding-right: 0px; overflow: hidden;"
                              >
                                <div
                                  aria-hidden="true"
                                  class="MuiPopover-root"
                                  id="simple-menu"
                                  role="presentation"
                                  style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px; visibility: hidden;"
                                >
                                  <div
                                    data-test="sentinelStart"
                                    tabindex="0"
                                  />
                                  <div
                                    class="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                    style="opacity: 0; visibility: hidden;"
                                    tabindex="-1"
                                  >
                                    <ul
                                      class="MuiList-root MuiMenu-list MuiList-padding"
                                      role="menu"
                                      tabindex="-1"
                                    >
                                      <li
                                        aria-disabled="false"
                                        class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_edit MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                        role="menuitem"
                                        tabindex="0"
                                      >
                                        Редактировать
                                        <span
                                          class="MuiTouchRipple-root"
                                        />
                                      </li>
                                      <li
                                        aria-disabled="false"
                                        class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_delete MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                        role="menuitem"
                                        tabindex="-1"
                                      >
                                        Удалить
                                        <span
                                          class="MuiTouchRipple-root"
                                        />
                                      </li>
                                    </ul>
                                  </div>
                                  <div
                                    data-test="sentinelEnd"
                                    tabindex="0"
                                  />
                                </div>
                                <div
                                  aria-hidden="true"
                                  class="MuiPopover-root"
                                  id="simple-menu"
                                  role="presentation"
                                  style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                                >
                                  <div
                                    data-test="sentinelStart"
                                    tabindex="0"
                                  />
                                  <div
                                    class="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                    style="opacity: 0; webkit-transition: opacity 195ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 195ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; top: 16px; left: 16px; transform-origin: -16px -16px;"
                                    tabindex="-1"
                                  >
                                    <ul
                                      class="MuiList-root MuiMenu-list MuiList-padding"
                                      role="menu"
                                      tabindex="-1"
                                    >
                                      <li
                                        aria-disabled="false"
                                        class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_edit MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button Mui-focusVisible Mui-focusVisible"
                                        role="menuitem"
                                        tabindex="0"
                                      >
                                        Редактировать
                                        <span
                                          class="MuiTouchRipple-root"
                                        />
                                      </li>
                                      <li
                                        aria-disabled="false"
                                        class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_delete MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                        role="menuitem"
                                        tabindex="-1"
                                      >
                                        Удалить
                                        <span
                                          class="MuiTouchRipple-root"
                                        />
                                      </li>
                                    </ul>
                                  </div>
                                  <div
                                    data-test="sentinelEnd"
                                    tabindex="0"
                                  />
                                </div>
                                <div
                                  aria-hidden="true"
                                  class="MuiPopover-root"
                                  id="simple-menu"
                                  role="presentation"
                                  style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                                >
                                  <div
                                    data-test="sentinelStart"
                                    tabindex="0"
                                  />
                                  <div
                                    class="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                    style="opacity: 0; webkit-transition: opacity 195ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 195ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; top: 16px; left: 16px; transform-origin: -16px -16px;"
                                    tabindex="-1"
                                  >
                                    <ul
                                      class="MuiList-root MuiMenu-list MuiList-padding"
                                      role="menu"
                                      tabindex="-1"
                                    >
                                      <li
                                        aria-disabled="false"
                                        class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_edit MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                        role="menuitem"
                                        tabindex="0"
                                      >
                                        Редактировать
                                        <span
                                          class="MuiTouchRipple-root"
                                        />
                                      </li>
                                      <li
                                        aria-disabled="false"
                                        class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_delete MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                        role="menuitem"
                                        tabindex="-1"
                                      >
                                        Удалить
                                        <span
                                          class="MuiTouchRipple-root"
                                        />
                                      </li>
                                    </ul>
                                  </div>
                                  <div
                                    data-test="sentinelEnd"
                                    tabindex="0"
                                  />
                                </div>
                                <div
                                  class="MuiDialog-root"
                                  color="primary"
                                  role="presentation"
                                  style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                                >
                                  <div
                                    aria-hidden="true"
                                    class="MuiBackdrop-root"
                                    style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                                  />
                                  <div
                                    data-test="sentinelStart"
                                    tabindex="0"
                                  />
                                  <div
                                    class="MuiDialog-container MuiDialog-scrollPaper"
                                    role="none presentation"
                                    style="webkit-transform: none; transform: none; webkit-transition: -webkit-transform 225ms cubic-bezier(0.0, 0, 0.2, 1) 0ms; transition: transform 225ms cubic-bezier(0.0, 0, 0.2, 1) 0ms;"
                                    tabindex="-1"
                                  >
                                    <div
                                      aria-describedby="alert-dialog-slide-description"
                                      aria-labelledby="alert-dialog-slide-title"
                                      class="MuiPaper-root MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiPaper-elevation24 MuiPaper-rounded"
                                      role="dialog"
                                    >
                                      <div
                                        class="MuiDialogTitle-root EditToDoListItem__title"
                                        id="alert-dialog-slide-title"
                                      >
                                        <h2
                                          class="MuiTypography-root MuiTypography-h6"
                                        >
                                          Редактирование списка
                                        </h2>
                                      </div>
                                      <div
                                        class="MuiDialogContent-root"
                                      >
                                        <div
                                          class="MuiFormControl-root MuiTextField-root MuiFormControl-marginDense MuiFormControl-fullWidth"
                                        >
                                          <label
                                            class="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-marginDense MuiFormLabel-filled Mui-focused Mui-focused"
                                            data-shrink="true"
                                            for="name"
                                            id="name-label"
                                          >
                                            Название списка
                                          </label>
                                          <div
                                            class="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-fullWidth MuiInput-fullWidth Mui-focused Mui-focused MuiInputBase-formControl MuiInput-formControl MuiInputBase-marginDense MuiInput-marginDense"
                                          >
                                            <input
                                              aria-invalid="false"
                                              autocomplete="off"
                                              class="MuiInputBase-input MuiInput-input MuiInputBase-inputMarginDense MuiInput-inputMarginDense"
                                              id="name"
                                              maxlength="40"
                                              type="text"
                                              value="Магазин"
                                            />
                                          </div>
                                        </div>
                                      </div>
                                      <div
                                        class="MuiDialogActions-root MuiDialogActions-spacing"
                                      >
                                        <button
                                          class="MuiButtonBase-root MuiButton-root MuiButton-contained"
                                          tabindex="0"
                                          type="button"
                                        >
                                          <span
                                            class="MuiButton-label"
                                          >
                                            Отменить
                                          </span>
                                          <span
                                            class="MuiTouchRipple-root"
                                          />
                                        </button>
                                        <button
                                          class="MuiButtonBase-root MuiButton-root MuiButton-contained saveButton MuiButton-containedPrimary"
                                          tabindex="0"
                                          type="button"
                                        >
                                          <span
                                            class="MuiButton-label"
                                          >
                                            <span
                                              class="MuiButton-startIcon MuiButton-iconSizeMedium"
                                            >
                                              <svg
                                                aria-hidden="true"
                                                class="MuiSvgIcon-root"
                                                focusable="false"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z"
                                                />
                                              </svg>
                                            </span>
                                            Сохранить
                                          </span>
                                          <span
                                            class="MuiTouchRipple-root"
                                          />
                                        </button>
                                      </div>
                                    </div>
                                  </div>
                                  <div
                                    data-test="sentinelEnd"
                                    tabindex="0"
                                  />
                                </div>
                              </body>
                            }
                          >
                            <div
                              className="MuiDialog-root"
                              color="primary"
                              onKeyDown={[Function]}
                              role="presentation"
                              style={
                                Object {
                                  "bottom": 0,
                                  "left": 0,
                                  "position": "fixed",
                                  "right": 0,
                                  "top": 0,
                                  "zIndex": 1300,
                                }
                              }
                            >
                              <WithStyles(ForwardRef(Backdrop))
                                onClick={[Function]}
                                open={true}
                                transitionDuration={
                                  Object {
                                    "enter": 225,
                                    "exit": 195,
                                  }
                                }
                              >
                                <ForwardRef(Backdrop)
                                  classes={
                                    Object {
                                      "invisible": "MuiBackdrop-invisible",
                                      "root": "MuiBackdrop-root",
                                    }
                                  }
                                  onClick={[Function]}
                                  open={true}
                                  transitionDuration={
                                    Object {
                                      "enter": 225,
                                      "exit": 195,
                                    }
                                  }
                                >
                                  <ForwardRef(Fade)
                                    in={true}
                                    onClick={[Function]}
                                    timeout={
                                      Object {
                                        "enter": 225,
                                        "exit": 195,
                                      }
                                    }
                                  >
                                    <Transition
                                      appear={true}
                                      enter={true}
                                      exit={true}
                                      in={true}
                                      mountOnEnter={false}
                                      onClick={[Function]}
                                      onEnter={[Function]}
                                      onEntered={[Function]}
                                      onEntering={[Function]}
                                      onExit={[Function]}
                                      onExited={[Function]}
                                      onExiting={[Function]}
                                      timeout={
                                        Object {
                                          "enter": 225,
                                          "exit": 195,
                                        }
                                      }
                                      unmountOnExit={false}
                                    >
                                      <div
                                        aria-hidden={true}
                                        className="MuiBackdrop-root"
                                        onClick={[Function]}
                                        style={
                                          Object {
                                            "opacity": 1,
                                            "visibility": undefined,
                                          }
                                        }
                                      />
                                    </Transition>
                                  </ForwardRef(Fade)>
                                </ForwardRef(Backdrop)>
                              </WithStyles(ForwardRef(Backdrop))>
                              <Unstable_TrapFocus
                                disableAutoFocus={false}
                                disableEnforceFocus={false}
                                disableRestoreFocus={false}
                                getDoc={[Function]}
                                isEnabled={[Function]}
                                open={true}
                              >
                                <div
                                  data-test="sentinelStart"
                                  tabIndex={0}
                                />
                                <ForwardRef
                                  appear={true}
                                  in={true}
                                  onEnter={[Function]}
                                  onExited={[Function]}
                                  role="none presentation"
                                  tabIndex="-1"
                                  timeout={
                                    Object {
                                      "enter": 225,
                                      "exit": 195,
                                    }
                                  }
                                >
                                  <ForwardRef(Slide)
                                    appear={true}
                                    direction="up"
                                    in={true}
                                    onEnter={[Function]}
                                    onExited={[Function]}
                                    role="none presentation"
                                    tabIndex="-1"
                                    timeout={
                                      Object {
                                        "enter": 225,
                                        "exit": 195,
                                      }
                                    }
                                  >
                                    <Transition
                                      appear={true}
                                      enter={true}
                                      exit={true}
                                      in={true}
                                      mountOnEnter={false}
                                      nodeRef={
                                        Object {
                                          "current": <div
                                            class="MuiDialog-container MuiDialog-scrollPaper"
                                            role="none presentation"
                                            style="webkit-transform: none; transform: none; webkit-transition: -webkit-transform 225ms cubic-bezier(0.0, 0, 0.2, 1) 0ms; transition: transform 225ms cubic-bezier(0.0, 0, 0.2, 1) 0ms;"
                                            tabindex="-1"
                                          >
                                            <div
                                              aria-describedby="alert-dialog-slide-description"
                                              aria-labelledby="alert-dialog-slide-title"
                                              class="MuiPaper-root MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiPaper-elevation24 MuiPaper-rounded"
                                              role="dialog"
                                            >
                                              <div
                                                class="MuiDialogTitle-root EditToDoListItem__title"
                                                id="alert-dialog-slide-title"
                                              >
                                                <h2
                                                  class="MuiTypography-root MuiTypography-h6"
                                                >
                                                  Редактирование списка
                                                </h2>
                                              </div>
                                              <div
                                                class="MuiDialogContent-root"
                                              >
                                                <div
                                                  class="MuiFormControl-root MuiTextField-root MuiFormControl-marginDense MuiFormControl-fullWidth"
                                                >
                                                  <label
                                                    class="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-marginDense MuiFormLabel-filled Mui-focused Mui-focused"
                                                    data-shrink="true"
                                                    for="name"
                                                    id="name-label"
                                                  >
                                                    Название списка
                                                  </label>
                                                  <div
                                                    class="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-fullWidth MuiInput-fullWidth Mui-focused Mui-focused MuiInputBase-formControl MuiInput-formControl MuiInputBase-marginDense MuiInput-marginDense"
                                                  >
                                                    <input
                                                      aria-invalid="false"
                                                      autocomplete="off"
                                                      class="MuiInputBase-input MuiInput-input MuiInputBase-inputMarginDense MuiInput-inputMarginDense"
                                                      id="name"
                                                      maxlength="40"
                                                      type="text"
                                                      value="Магазин"
                                                    />
                                                  </div>
                                                </div>
                                              </div>
                                              <div
                                                class="MuiDialogActions-root MuiDialogActions-spacing"
                                              >
                                                <button
                                                  class="MuiButtonBase-root MuiButton-root MuiButton-contained"
                                                  tabindex="0"
                                                  type="button"
                                                >
                                                  <span
                                                    class="MuiButton-label"
                                                  >
                                                    Отменить
                                                  </span>
                                                  <span
                                                    class="MuiTouchRipple-root"
                                                  />
                                                </button>
                                                <button
                                                  class="MuiButtonBase-root MuiButton-root MuiButton-contained saveButton MuiButton-containedPrimary"
                                                  tabindex="0"
                                                  type="button"
                                                >
                                                  <span
                                                    class="MuiButton-label"
                                                  >
                                                    <span
                                                      class="MuiButton-startIcon MuiButton-iconSizeMedium"
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        class="MuiSvgIcon-root"
                                                        focusable="false"
                                                        viewBox="0 0 24 24"
                                                      >
                                                        <path
                                                          d="M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z"
                                                        />
                                                      </svg>
                                                    </span>
                                                    Сохранить
                                                  </span>
                                                  <span
                                                    class="MuiTouchRipple-root"
                                                  />
                                                </button>
                                              </div>
                                            </div>
                                          </div>,
                                        }
                                      }
                                      onEnter={[Function]}
                                      onEntered={[Function]}
                                      onEntering={[Function]}
                                      onExit={[Function]}
                                      onExited={[Function]}
                                      onExiting={[Function]}
                                      role="none presentation"
                                      tabIndex="-1"
                                      timeout={
                                        Object {
                                          "enter": 225,
                                          "exit": 195,
                                        }
                                      }
                                      unmountOnExit={false}
                                    >
                                      <div
                                        className="MuiDialog-container MuiDialog-scrollPaper"
                                        onMouseDown={[Function]}
                                        onMouseUp={[Function]}
                                        role="none presentation"
                                        style={
                                          Object {
                                            "visibility": undefined,
                                          }
                                        }
                                        tabIndex="-1"
                                      >
                                        <WithStyles(ForwardRef(Paper))
                                          aria-describedby="alert-dialog-slide-description"
                                          aria-labelledby="alert-dialog-slide-title"
                                          className="MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm"
                                          elevation={24}
                                          role="dialog"
                                        >
                                          <ForwardRef(Paper)
                                            aria-describedby="alert-dialog-slide-description"
                                            aria-labelledby="alert-dialog-slide-title"
                                            className="MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm"
                                            classes={
                                              Object {
                                                "elevation0": "MuiPaper-elevation0",
                                                "elevation1": "MuiPaper-elevation1",
                                                "elevation10": "MuiPaper-elevation10",
                                                "elevation11": "MuiPaper-elevation11",
                                                "elevation12": "MuiPaper-elevation12",
                                                "elevation13": "MuiPaper-elevation13",
                                                "elevation14": "MuiPaper-elevation14",
                                                "elevation15": "MuiPaper-elevation15",
                                                "elevation16": "MuiPaper-elevation16",
                                                "elevation17": "MuiPaper-elevation17",
                                                "elevation18": "MuiPaper-elevation18",
                                                "elevation19": "MuiPaper-elevation19",
                                                "elevation2": "MuiPaper-elevation2",
                                                "elevation20": "MuiPaper-elevation20",
                                                "elevation21": "MuiPaper-elevation21",
                                                "elevation22": "MuiPaper-elevation22",
                                                "elevation23": "MuiPaper-elevation23",
                                                "elevation24": "MuiPaper-elevation24",
                                                "elevation3": "MuiPaper-elevation3",
                                                "elevation4": "MuiPaper-elevation4",
                                                "elevation5": "MuiPaper-elevation5",
                                                "elevation6": "MuiPaper-elevation6",
                                                "elevation7": "MuiPaper-elevation7",
                                                "elevation8": "MuiPaper-elevation8",
                                                "elevation9": "MuiPaper-elevation9",
                                                "outlined": "MuiPaper-outlined",
                                                "root": "MuiPaper-root",
                                                "rounded": "MuiPaper-rounded",
                                              }
                                            }
                                            elevation={24}
                                            role="dialog"
                                          >
                                            <div
                                              aria-describedby="alert-dialog-slide-description"
                                              aria-labelledby="alert-dialog-slide-title"
                                              className="MuiPaper-root MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiPaper-elevation24 MuiPaper-rounded"
                                              role="dialog"
                                            >
                                              <WithStyles(ForwardRef(DialogTitle))
                                                className="EditToDoListItem__title"
                                                id="alert-dialog-slide-title"
                                              >
                                                <ForwardRef(DialogTitle)
                                                  className="EditToDoListItem__title"
                                                  classes={
                                                    Object {
                                                      "root": "MuiDialogTitle-root",
                                                    }
                                                  }
                                                  id="alert-dialog-slide-title"
                                                >
                                                  <div
                                                    className="MuiDialogTitle-root EditToDoListItem__title"
                                                    id="alert-dialog-slide-title"
                                                  >
                                                    <WithStyles(ForwardRef(Typography))
                                                      component="h2"
                                                      variant="h6"
                                                    >
                                                      <ForwardRef(Typography)
                                                        classes={
                                                          Object {
                                                            "alignCenter": "MuiTypography-alignCenter",
                                                            "alignJustify": "MuiTypography-alignJustify",
                                                            "alignLeft": "MuiTypography-alignLeft",
                                                            "alignRight": "MuiTypography-alignRight",
                                                            "body1": "MuiTypography-body1",
                                                            "body2": "MuiTypography-body2",
                                                            "button": "MuiTypography-button",
                                                            "caption": "MuiTypography-caption",
                                                            "colorError": "MuiTypography-colorError",
                                                            "colorInherit": "MuiTypography-colorInherit",
                                                            "colorPrimary": "MuiTypography-colorPrimary",
                                                            "colorSecondary": "MuiTypography-colorSecondary",
                                                            "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                            "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                            "displayBlock": "MuiTypography-displayBlock",
                                                            "displayInline": "MuiTypography-displayInline",
                                                            "gutterBottom": "MuiTypography-gutterBottom",
                                                            "h1": "MuiTypography-h1",
                                                            "h2": "MuiTypography-h2",
                                                            "h3": "MuiTypography-h3",
                                                            "h4": "MuiTypography-h4",
                                                            "h5": "MuiTypography-h5",
                                                            "h6": "MuiTypography-h6",
                                                            "noWrap": "MuiTypography-noWrap",
                                                            "overline": "MuiTypography-overline",
                                                            "paragraph": "MuiTypography-paragraph",
                                                            "root": "MuiTypography-root",
                                                            "srOnly": "MuiTypography-srOnly",
                                                            "subtitle1": "MuiTypography-subtitle1",
                                                            "subtitle2": "MuiTypography-subtitle2",
                                                          }
                                                        }
                                                        component="h2"
                                                        variant="h6"
                                                      >
                                                        <h2
                                                          className="MuiTypography-root MuiTypography-h6"
                                                        >
                                                          Редактирование списка
                                                        </h2>
                                                      </ForwardRef(Typography)>
                                                    </WithStyles(ForwardRef(Typography))>
                                                  </div>
                                                </ForwardRef(DialogTitle)>
                                              </WithStyles(ForwardRef(DialogTitle))>
                                              <WithStyles(ForwardRef(DialogContent))>
                                                <ForwardRef(DialogContent)
                                                  classes={
                                                    Object {
                                                      "dividers": "MuiDialogContent-dividers",
                                                      "root": "MuiDialogContent-root",
                                                    }
                                                  }
                                                >
                                                  <div
                                                    className="MuiDialogContent-root"
                                                  >
                                                    <WithStyles(ForwardRef(TextField))
                                                      autoComplete="off"
                                                      autoFocus={true}
                                                      color="primary"
                                                      fullWidth={true}
                                                      id="name"
                                                      inputProps={
                                                        Object {
                                                          "maxLength": "40",
                                                        }
                                                      }
                                                      label="Название списка"
                                                      margin="dense"
                                                      onChange={[Function]}
                                                      onKeyPress={[Function]}
                                                      type="text"
                                                      value="Магазин"
                                                    >
                                                      <ForwardRef(TextField)
                                                        autoComplete="off"
                                                        autoFocus={true}
                                                        classes={
                                                          Object {
                                                            "root": "MuiTextField-root",
                                                          }
                                                        }
                                                        color="primary"
                                                        fullWidth={true}
                                                        id="name"
                                                        inputProps={
                                                          Object {
                                                            "maxLength": "40",
                                                          }
                                                        }
                                                        label="Название списка"
                                                        margin="dense"
                                                        onChange={[Function]}
                                                        onKeyPress={[Function]}
                                                        type="text"
                                                        value="Магазин"
                                                      >
                                                        <WithStyles(ForwardRef(FormControl))
                                                          className="MuiTextField-root"
                                                          color="primary"
                                                          disabled={false}
                                                          error={false}
                                                          fullWidth={true}
                                                          margin="dense"
                                                          onKeyPress={[Function]}
                                                          required={false}
                                                          variant="standard"
                                                        >
                                                          <ForwardRef(FormControl)
                                                            className="MuiTextField-root"
                                                            classes={
                                                              Object {
                                                                "fullWidth": "MuiFormControl-fullWidth",
                                                                "marginDense": "MuiFormControl-marginDense",
                                                                "marginNormal": "MuiFormControl-marginNormal",
                                                                "root": "MuiFormControl-root",
                                                              }
                                                            }
                                                            color="primary"
                                                            disabled={false}
                                                            error={false}
                                                            fullWidth={true}
                                                            margin="dense"
                                                            onKeyPress={[Function]}
                                                            required={false}
                                                            variant="standard"
                                                          >
                                                            <div
                                                              className="MuiFormControl-root MuiTextField-root MuiFormControl-marginDense MuiFormControl-fullWidth"
                                                              onKeyPress={[Function]}
                                                            >
                                                              <WithStyles(ForwardRef(InputLabel))
                                                                htmlFor="name"
                                                                id="name-label"
                                                              >
                                                                <ForwardRef(InputLabel)
                                                                  classes={
                                                                    Object {
                                                                      "animated": "MuiInputLabel-animated",
                                                                      "asterisk": "MuiInputLabel-asterisk",
                                                                      "disabled": "Mui-disabled",
                                                                      "error": "Mui-error",
                                                                      "filled": "MuiInputLabel-filled",
                                                                      "focused": "Mui-focused",
                                                                      "formControl": "MuiInputLabel-formControl",
                                                                      "marginDense": "MuiInputLabel-marginDense",
                                                                      "outlined": "MuiInputLabel-outlined",
                                                                      "required": "Mui-required",
                                                                      "root": "MuiInputLabel-root",
                                                                      "shrink": "MuiInputLabel-shrink",
                                                                    }
                                                                  }
                                                                  htmlFor="name"
                                                                  id="name-label"
                                                                >
                                                                  <WithStyles(ForwardRef(FormLabel))
                                                                    className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-marginDense"
                                                                    classes={
                                                                      Object {
                                                                        "asterisk": "MuiInputLabel-asterisk",
                                                                        "disabled": "Mui-disabled",
                                                                        "error": "Mui-error",
                                                                        "focused": "Mui-focused",
                                                                        "required": "Mui-required",
                                                                      }
                                                                    }
                                                                    data-shrink={true}
                                                                    htmlFor="name"
                                                                    id="name-label"
                                                                  >
                                                                    <ForwardRef(FormLabel)
                                                                      className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-marginDense"
                                                                      classes={
                                                                        Object {
                                                                          "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                                                          "colorSecondary": "MuiFormLabel-colorSecondary",
                                                                          "disabled": "Mui-disabled Mui-disabled",
                                                                          "error": "Mui-error Mui-error",
                                                                          "filled": "MuiFormLabel-filled",
                                                                          "focused": "Mui-focused Mui-focused",
                                                                          "required": "Mui-required Mui-required",
                                                                          "root": "MuiFormLabel-root",
                                                                        }
                                                                      }
                                                                      data-shrink={true}
                                                                      htmlFor="name"
                                                                      id="name-label"
                                                                    >
                                                                      <label
                                                                        className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-marginDense MuiFormLabel-filled Mui-focused Mui-focused"
                                                                        data-shrink={true}
                                                                        htmlFor="name"
                                                                        id="name-label"
                                                                      >
                                                                        Название списка
                                                                      </label>
                                                                    </ForwardRef(FormLabel)>
                                                                  </WithStyles(ForwardRef(FormLabel))>
                                                                </ForwardRef(InputLabel)>
                                                              </WithStyles(ForwardRef(InputLabel))>
                                                              <WithStyles(ForwardRef(Input))
                                                                autoComplete="off"
                                                                autoFocus={true}
                                                                fullWidth={true}
                                                                id="name"
                                                                inputProps={
                                                                  Object {
                                                                    "maxLength": "40",
                                                                  }
                                                                }
                                                                multiline={false}
                                                                onChange={[Function]}
                                                                type="text"
                                                                value="Магазин"
                                                              >
                                                                <ForwardRef(Input)
                                                                  autoComplete="off"
                                                                  autoFocus={true}
                                                                  classes={
                                                                    Object {
                                                                      "colorSecondary": "MuiInput-colorSecondary",
                                                                      "disabled": "Mui-disabled",
                                                                      "error": "Mui-error",
                                                                      "focused": "Mui-focused",
                                                                      "formControl": "MuiInput-formControl",
                                                                      "fullWidth": "MuiInput-fullWidth",
                                                                      "input": "MuiInput-input",
                                                                      "inputMarginDense": "MuiInput-inputMarginDense",
                                                                      "inputMultiline": "MuiInput-inputMultiline",
                                                                      "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                                      "marginDense": "MuiInput-marginDense",
                                                                      "multiline": "MuiInput-multiline",
                                                                      "root": "MuiInput-root",
                                                                      "underline": "MuiInput-underline",
                                                                    }
                                                                  }
                                                                  fullWidth={true}
                                                                  id="name"
                                                                  inputProps={
                                                                    Object {
                                                                      "maxLength": "40",
                                                                    }
                                                                  }
                                                                  multiline={false}
                                                                  onChange={[Function]}
                                                                  type="text"
                                                                  value="Магазин"
                                                                >
                                                                  <WithStyles(ForwardRef(InputBase))
                                                                    autoComplete="off"
                                                                    autoFocus={true}
                                                                    classes={
                                                                      Object {
                                                                        "colorSecondary": "MuiInput-colorSecondary",
                                                                        "disabled": "Mui-disabled",
                                                                        "error": "Mui-error",
                                                                        "focused": "Mui-focused",
                                                                        "formControl": "MuiInput-formControl",
                                                                        "fullWidth": "MuiInput-fullWidth",
                                                                        "input": "MuiInput-input",
                                                                        "inputMarginDense": "MuiInput-inputMarginDense",
                                                                        "inputMultiline": "MuiInput-inputMultiline",
                                                                        "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                                        "marginDense": "MuiInput-marginDense",
                                                                        "multiline": "MuiInput-multiline",
                                                                        "root": "MuiInput-root MuiInput-underline",
                                                                        "underline": null,
                                                                      }
                                                                    }
                                                                    fullWidth={true}
                                                                    id="name"
                                                                    inputComponent="input"
                                                                    inputProps={
                                                                      Object {
                                                                        "maxLength": "40",
                                                                      }
                                                                    }
                                                                    multiline={false}
                                                                    onChange={[Function]}
                                                                    type="text"
                                                                    value="Магазин"
                                                                  >
                                                                    <ForwardRef(InputBase)
                                                                      autoComplete="off"
                                                                      autoFocus={true}
                                                                      classes={
                                                                        Object {
                                                                          "adornedEnd": "MuiInputBase-adornedEnd",
                                                                          "adornedStart": "MuiInputBase-adornedStart",
                                                                          "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                                          "disabled": "Mui-disabled Mui-disabled",
                                                                          "error": "Mui-error Mui-error",
                                                                          "focused": "Mui-focused Mui-focused",
                                                                          "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                                          "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                                          "input": "MuiInputBase-input MuiInput-input",
                                                                          "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                                          "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                                          "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                                          "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                                          "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                                          "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                                          "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                                          "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                                          "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                                        }
                                                                      }
                                                                      fullWidth={true}
                                                                      id="name"
                                                                      inputComponent="input"
                                                                      inputProps={
                                                                        Object {
                                                                          "maxLength": "40",
                                                                        }
                                                                      }
                                                                      multiline={false}
                                                                      onChange={[Function]}
                                                                      type="text"
                                                                      value="Магазин"
                                                                    >
                                                                      <div
                                                                        className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-fullWidth MuiInput-fullWidth Mui-focused Mui-focused MuiInputBase-formControl MuiInput-formControl MuiInputBase-marginDense MuiInput-marginDense"
                                                                        onClick={[Function]}
                                                                      >
                                                                        <input
                                                                          aria-invalid={false}
                                                                          autoComplete="off"
                                                                          autoFocus={true}
                                                                          className="MuiInputBase-input MuiInput-input MuiInputBase-inputMarginDense MuiInput-inputMarginDense"
                                                                          disabled={false}
                                                                          id="name"
                                                                          maxLength="40"
                                                                          onAnimationStart={[Function]}
                                                                          onBlur={[Function]}
                                                                          onChange={[Function]}
                                                                          onFocus={[Function]}
                                                                          required={false}
                                                                          type="text"
                                                                          value="Магазин"
                                                                        />
                                                                      </div>
                                                                    </ForwardRef(InputBase)>
                                                                  </WithStyles(ForwardRef(InputBase))>
                                                                </ForwardRef(Input)>
                                                              </WithStyles(ForwardRef(Input))>
                                                            </div>
                                                          </ForwardRef(FormControl)>
                                                        </WithStyles(ForwardRef(FormControl))>
                                                      </ForwardRef(TextField)>
                                                    </WithStyles(ForwardRef(TextField))>
                                                  </div>
                                                </ForwardRef(DialogContent)>
                                              </WithStyles(ForwardRef(DialogContent))>
                                              <WithStyles(ForwardRef(DialogActions))>
                                                <ForwardRef(DialogActions)
                                                  classes={
                                                    Object {
                                                      "root": "MuiDialogActions-root",
                                                      "spacing": "MuiDialogActions-spacing",
                                                    }
                                                  }
                                                >
                                                  <div
                                                    className="MuiDialogActions-root MuiDialogActions-spacing"
                                                  >
                                                    <WithStyles(ForwardRef(Button))
                                                      onClick={[Function]}
                                                      size="medium"
                                                      variant="contained"
                                                    >
                                                      <ForwardRef(Button)
                                                        classes={
                                                          Object {
                                                            "colorInherit": "MuiButton-colorInherit",
                                                            "contained": "MuiButton-contained",
                                                            "containedPrimary": "MuiButton-containedPrimary",
                                                            "containedSecondary": "MuiButton-containedSecondary",
                                                            "containedSizeLarge": "MuiButton-containedSizeLarge",
                                                            "containedSizeSmall": "MuiButton-containedSizeSmall",
                                                            "disableElevation": "MuiButton-disableElevation",
                                                            "disabled": "Mui-disabled",
                                                            "endIcon": "MuiButton-endIcon",
                                                            "focusVisible": "Mui-focusVisible",
                                                            "fullWidth": "MuiButton-fullWidth",
                                                            "iconSizeLarge": "MuiButton-iconSizeLarge",
                                                            "iconSizeMedium": "MuiButton-iconSizeMedium",
                                                            "iconSizeSmall": "MuiButton-iconSizeSmall",
                                                            "label": "MuiButton-label",
                                                            "outlined": "MuiButton-outlined",
                                                            "outlinedPrimary": "MuiButton-outlinedPrimary",
                                                            "outlinedSecondary": "MuiButton-outlinedSecondary",
                                                            "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                                            "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                                            "root": "MuiButton-root",
                                                            "sizeLarge": "MuiButton-sizeLarge",
                                                            "sizeSmall": "MuiButton-sizeSmall",
                                                            "startIcon": "MuiButton-startIcon",
                                                            "text": "MuiButton-text",
                                                            "textPrimary": "MuiButton-textPrimary",
                                                            "textSecondary": "MuiButton-textSecondary",
                                                            "textSizeLarge": "MuiButton-textSizeLarge",
                                                            "textSizeSmall": "MuiButton-textSizeSmall",
                                                          }
                                                        }
                                                        onClick={[Function]}
                                                        size="medium"
                                                        variant="contained"
                                                      >
                                                        <WithStyles(ForwardRef(ButtonBase))
                                                          className="MuiButton-root MuiButton-contained"
                                                          component="button"
                                                          disabled={false}
                                                          focusRipple={true}
                                                          focusVisibleClassName="Mui-focusVisible"
                                                          onClick={[Function]}
                                                          type="button"
                                                        >
                                                          <ForwardRef(ButtonBase)
                                                            className="MuiButton-root MuiButton-contained"
                                                            classes={
                                                              Object {
                                                                "disabled": "Mui-disabled",
                                                                "focusVisible": "Mui-focusVisible",
                                                                "root": "MuiButtonBase-root",
                                                              }
                                                            }
                                                            component="button"
                                                            disabled={false}
                                                            focusRipple={true}
                                                            focusVisibleClassName="Mui-focusVisible"
                                                            onClick={[Function]}
                                                            type="button"
                                                          >
                                                            <button
                                                              className="MuiButtonBase-root MuiButton-root MuiButton-contained"
                                                              disabled={false}
                                                              onBlur={[Function]}
                                                              onClick={[Function]}
                                                              onDragLeave={[Function]}
                                                              onFocus={[Function]}
                                                              onKeyDown={[Function]}
                                                              onKeyUp={[Function]}
                                                              onMouseDown={[Function]}
                                                              onMouseLeave={[Function]}
                                                              onMouseUp={[Function]}
                                                              onTouchEnd={[Function]}
                                                              onTouchMove={[Function]}
                                                              onTouchStart={[Function]}
                                                              tabIndex={0}
                                                              type="button"
                                                            >
                                                              <span
                                                                className="MuiButton-label"
                                                              >
                                                                Отменить
                                                              </span>
                                                              <WithStyles(memo)
                                                                center={false}
                                                              >
                                                                <ForwardRef(TouchRipple)
                                                                  center={false}
                                                                  classes={
                                                                    Object {
                                                                      "child": "MuiTouchRipple-child",
                                                                      "childLeaving": "MuiTouchRipple-childLeaving",
                                                                      "childPulsate": "MuiTouchRipple-childPulsate",
                                                                      "ripple": "MuiTouchRipple-ripple",
                                                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                      "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                      "root": "MuiTouchRipple-root",
                                                                    }
                                                                  }
                                                                >
                                                                  <span
                                                                    className="MuiTouchRipple-root"
                                                                  >
                                                                    <TransitionGroup
                                                                      childFactory={[Function]}
                                                                      component={null}
                                                                      exit={true}
                                                                    />
                                                                  </span>
                                                                </ForwardRef(TouchRipple)>
                                                              </WithStyles(memo)>
                                                            </button>
                                                          </ForwardRef(ButtonBase)>
                                                        </WithStyles(ForwardRef(ButtonBase))>
                                                      </ForwardRef(Button)>
                                                    </WithStyles(ForwardRef(Button))>
                                                    <WithStyles(ForwardRef(Button))
                                                      className="saveButton"
                                                      color="primary"
                                                      disabled={false}
                                                      onClick={[Function]}
                                                      size="medium"
                                                      startIcon={<Memo />}
                                                      variant="contained"
                                                    >
                                                      <ForwardRef(Button)
                                                        className="saveButton"
                                                        classes={
                                                          Object {
                                                            "colorInherit": "MuiButton-colorInherit",
                                                            "contained": "MuiButton-contained",
                                                            "containedPrimary": "MuiButton-containedPrimary",
                                                            "containedSecondary": "MuiButton-containedSecondary",
                                                            "containedSizeLarge": "MuiButton-containedSizeLarge",
                                                            "containedSizeSmall": "MuiButton-containedSizeSmall",
                                                            "disableElevation": "MuiButton-disableElevation",
                                                            "disabled": "Mui-disabled",
                                                            "endIcon": "MuiButton-endIcon",
                                                            "focusVisible": "Mui-focusVisible",
                                                            "fullWidth": "MuiButton-fullWidth",
                                                            "iconSizeLarge": "MuiButton-iconSizeLarge",
                                                            "iconSizeMedium": "MuiButton-iconSizeMedium",
                                                            "iconSizeSmall": "MuiButton-iconSizeSmall",
                                                            "label": "MuiButton-label",
                                                            "outlined": "MuiButton-outlined",
                                                            "outlinedPrimary": "MuiButton-outlinedPrimary",
                                                            "outlinedSecondary": "MuiButton-outlinedSecondary",
                                                            "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                                            "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                                            "root": "MuiButton-root",
                                                            "sizeLarge": "MuiButton-sizeLarge",
                                                            "sizeSmall": "MuiButton-sizeSmall",
                                                            "startIcon": "MuiButton-startIcon",
                                                            "text": "MuiButton-text",
                                                            "textPrimary": "MuiButton-textPrimary",
                                                            "textSecondary": "MuiButton-textSecondary",
                                                            "textSizeLarge": "MuiButton-textSizeLarge",
                                                            "textSizeSmall": "MuiButton-textSizeSmall",
                                                          }
                                                        }
                                                        color="primary"
                                                        disabled={false}
                                                        onClick={[Function]}
                                                        size="medium"
                                                        startIcon={<Memo />}
                                                        variant="contained"
                                                      >
                                                        <WithStyles(ForwardRef(ButtonBase))
                                                          className="MuiButton-root MuiButton-contained saveButton MuiButton-containedPrimary"
                                                          component="button"
                                                          disabled={false}
                                                          focusRipple={true}
                                                          focusVisibleClassName="Mui-focusVisible"
                                                          onClick={[Function]}
                                                          type="button"
                                                        >
                                                          <ForwardRef(ButtonBase)
                                                            className="MuiButton-root MuiButton-contained saveButton MuiButton-containedPrimary"
                                                            classes={
                                                              Object {
                                                                "disabled": "Mui-disabled",
                                                                "focusVisible": "Mui-focusVisible",
                                                                "root": "MuiButtonBase-root",
                                                              }
                                                            }
                                                            component="button"
                                                            disabled={false}
                                                            focusRipple={true}
                                                            focusVisibleClassName="Mui-focusVisible"
                                                            onClick={[Function]}
                                                            type="button"
                                                          >
                                                            <button
                                                              className="MuiButtonBase-root MuiButton-root MuiButton-contained saveButton MuiButton-containedPrimary"
                                                              disabled={false}
                                                              onBlur={[Function]}
                                                              onClick={[Function]}
                                                              onDragLeave={[Function]}
                                                              onFocus={[Function]}
                                                              onKeyDown={[Function]}
                                                              onKeyUp={[Function]}
                                                              onMouseDown={[Function]}
                                                              onMouseLeave={[Function]}
                                                              onMouseUp={[Function]}
                                                              onTouchEnd={[Function]}
                                                              onTouchMove={[Function]}
                                                              onTouchStart={[Function]}
                                                              tabIndex={0}
                                                              type="button"
                                                            >
                                                              <span
                                                                className="MuiButton-label"
                                                              >
                                                                <span
                                                                  className="MuiButton-startIcon MuiButton-iconSizeMedium"
                                                                >
                                                                  <ForwardRef(SaveIcon)>
                                                                    <WithStyles(ForwardRef(SvgIcon))>
                                                                      <ForwardRef(SvgIcon)
                                                                        classes={
                                                                          Object {
                                                                            "colorAction": "MuiSvgIcon-colorAction",
                                                                            "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                            "colorError": "MuiSvgIcon-colorError",
                                                                            "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                            "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                            "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                            "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                            "root": "MuiSvgIcon-root",
                                                                          }
                                                                        }
                                                                      >
                                                                        <svg
                                                                          aria-hidden={true}
                                                                          className="MuiSvgIcon-root"
                                                                          focusable="false"
                                                                          viewBox="0 0 24 24"
                                                                        >
                                                                          <path
                                                                            d="M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z"
                                                                          />
                                                                        </svg>
                                                                      </ForwardRef(SvgIcon)>
                                                                    </WithStyles(ForwardRef(SvgIcon))>
                                                                  </ForwardRef(SaveIcon)>
                                                                </span>
                                                                Сохранить
                                                              </span>
                                                              <WithStyles(memo)
                                                                center={false}
                                                              >
                                                                <ForwardRef(TouchRipple)
                                                                  center={false}
                                                                  classes={
                                                                    Object {
                                                                      "child": "MuiTouchRipple-child",
                                                                      "childLeaving": "MuiTouchRipple-childLeaving",
                                                                      "childPulsate": "MuiTouchRipple-childPulsate",
                                                                      "ripple": "MuiTouchRipple-ripple",
                                                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                      "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                      "root": "MuiTouchRipple-root",
                                                                    }
                                                                  }
                                                                >
                                                                  <span
                                                                    className="MuiTouchRipple-root"
                                                                  >
                                                                    <TransitionGroup
                                                                      childFactory={[Function]}
                                                                      component={null}
                                                                      exit={true}
                                                                    />
                                                                  </span>
                                                                </ForwardRef(TouchRipple)>
                                                              </WithStyles(memo)>
                                                            </button>
                                                          </ForwardRef(ButtonBase)>
                                                        </WithStyles(ForwardRef(ButtonBase))>
                                                      </ForwardRef(Button)>
                                                    </WithStyles(ForwardRef(Button))>
                                                  </div>
                                                </ForwardRef(DialogActions)>
                                              </WithStyles(ForwardRef(DialogActions))>
                                            </div>
                                          </ForwardRef(Paper)>
                                        </WithStyles(ForwardRef(Paper))>
                                      </div>
                                    </Transition>
                                  </ForwardRef(Slide)>
                                </ForwardRef>
                                <div
                                  data-test="sentinelEnd"
                                  tabIndex={0}
                                />
                              </Unstable_TrapFocus>
                            </div>
                          </Portal>
                        </ForwardRef(Portal)>
                      </ForwardRef(Modal)>
                    </ForwardRef(Dialog)>
                  </WithStyles(ForwardRef(Dialog))>
                </Memo(EditForm)>
              </div>
            </Memo(List)>
          </Connect(Component)>
        </div>
        <div
          className="lists__addListButton"
          onClick={[Function]}
        >
          <WithStyles(ForwardRef(IconButton))
            aria-label="add List"
            color="inherit"
          >
            <ForwardRef(IconButton)
              aria-label="add List"
              classes={
                Object {
                  "colorInherit": "MuiIconButton-colorInherit",
                  "colorPrimary": "MuiIconButton-colorPrimary",
                  "colorSecondary": "MuiIconButton-colorSecondary",
                  "disabled": "Mui-disabled",
                  "edgeEnd": "MuiIconButton-edgeEnd",
                  "edgeStart": "MuiIconButton-edgeStart",
                  "label": "MuiIconButton-label",
                  "root": "MuiIconButton-root",
                  "sizeSmall": "MuiIconButton-sizeSmall",
                }
              }
              color="inherit"
            >
              <WithStyles(ForwardRef(ButtonBase))
                aria-label="add List"
                centerRipple={true}
                className="MuiIconButton-root MuiIconButton-colorInherit"
                disabled={false}
                focusRipple={true}
              >
                <ForwardRef(ButtonBase)
                  aria-label="add List"
                  centerRipple={true}
                  className="MuiIconButton-root MuiIconButton-colorInherit"
                  classes={
                    Object {
                      "disabled": "Mui-disabled",
                      "focusVisible": "Mui-focusVisible",
                      "root": "MuiButtonBase-root",
                    }
                  }
                  disabled={false}
                  focusRipple={true}
                >
                  <button
                    aria-label="add List"
                    className="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit"
                    disabled={false}
                    onBlur={[Function]}
                    onDragLeave={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    onKeyUp={[Function]}
                    onMouseDown={[Function]}
                    onMouseLeave={[Function]}
                    onMouseUp={[Function]}
                    onTouchEnd={[Function]}
                    onTouchMove={[Function]}
                    onTouchStart={[Function]}
                    tabIndex={0}
                    type="button"
                  >
                    <span
                      className="MuiIconButton-label"
                    >
                      <ForwardRef(PlaylistAddIcon)
                        fontSize="medium"
                      >
                        <WithStyles(ForwardRef(SvgIcon))
                          fontSize="medium"
                        >
                          <ForwardRef(SvgIcon)
                            classes={
                              Object {
                                "colorAction": "MuiSvgIcon-colorAction",
                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                "colorError": "MuiSvgIcon-colorError",
                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                "root": "MuiSvgIcon-root",
                              }
                            }
                            fontSize="medium"
                          >
                            <svg
                              aria-hidden={true}
                              className="MuiSvgIcon-root"
                              focusable="false"
                              viewBox="0 0 24 24"
                            >
                              <path
                                d="M14 10H2v2h12v-2zm0-4H2v2h12V6zm4 8v-4h-2v4h-4v2h4v4h2v-4h4v-2h-4zM2 16h8v-2H2v2z"
                              />
                            </svg>
                          </ForwardRef(SvgIcon)>
                        </WithStyles(ForwardRef(SvgIcon))>
                      </ForwardRef(PlaylistAddIcon)>
                    </span>
                    <WithStyles(memo)
                      center={true}
                    >
                      <ForwardRef(TouchRipple)
                        center={true}
                        classes={
                          Object {
                            "child": "MuiTouchRipple-child",
                            "childLeaving": "MuiTouchRipple-childLeaving",
                            "childPulsate": "MuiTouchRipple-childPulsate",
                            "ripple": "MuiTouchRipple-ripple",
                            "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                            "rippleVisible": "MuiTouchRipple-rippleVisible",
                            "root": "MuiTouchRipple-root",
                          }
                        }
                      >
                        <span
                          className="MuiTouchRipple-root"
                        >
                          <TransitionGroup
                            childFactory={[Function]}
                            component={null}
                            exit={true}
                          />
                        </span>
                      </ForwardRef(TouchRipple)>
                    </WithStyles(memo)>
                  </button>
                </ForwardRef(ButtonBase)>
              </WithStyles(ForwardRef(ButtonBase))>
            </ForwardRef(IconButton)>
          </WithStyles(ForwardRef(IconButton))>
          <span>
            Добавить список
          </span>
        </div>
      </div>
    </Memo(Lists)>
  </Connect(Component)>
</Provider>
`;

exports[`Checking the list change 4`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(Component)>
    <Memo(Lists)
      addToDoListAC={[Function]}
      lists={
        Array [
          Object {
            "id": 1,
            "label": "Магазин",
            "toDoList": Array [],
          },
        ]
      }
      updateActiveTodoListIdAC={[Function]}
    >
      <div
        className="lists__close-wrapper null"
        onClick={[Function]}
      />
      <div
        className="lists null"
      >
        <input
          checked={false}
          className="hidden-menu-ticker"
          id="hmt"
          readOnly={true}
          type="checkbox"
        />
        <label
          className="btn-menu toggleMenu null"
          htmlFor="hmt"
          onClick={[Function]}
        >
          <span
            className="first"
          />
          <span
            className="second"
          />
          <span
            className="third"
          />
        </label>
        <h1
          className="lists_main"
          onClick={[Function]}
        >
          <ForwardRef(HomeIcon)>
            <WithStyles(ForwardRef(SvgIcon))>
              <ForwardRef(SvgIcon)
                classes={
                  Object {
                    "colorAction": "MuiSvgIcon-colorAction",
                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                    "colorError": "MuiSvgIcon-colorError",
                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                    "root": "MuiSvgIcon-root",
                  }
                }
              >
                <svg
                  aria-hidden={true}
                  className="MuiSvgIcon-root"
                  focusable="false"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z"
                  />
                </svg>
              </ForwardRef(SvgIcon)>
            </WithStyles(ForwardRef(SvgIcon))>
          </ForwardRef(HomeIcon)>
          <span>
            Главная
          </span>
        </h1>
        <h2
          className="lists__title"
        >
          <ForwardRef(FormatListBulletedIcon)>
            <WithStyles(ForwardRef(SvgIcon))>
              <ForwardRef(SvgIcon)
                classes={
                  Object {
                    "colorAction": "MuiSvgIcon-colorAction",
                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                    "colorError": "MuiSvgIcon-colorError",
                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                    "root": "MuiSvgIcon-root",
                  }
                }
              >
                <svg
                  aria-hidden={true}
                  className="MuiSvgIcon-root"
                  focusable="false"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M4 10.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm0-6c-.83 0-1.5.67-1.5 1.5S3.17 7.5 4 7.5 5.5 6.83 5.5 6 4.83 4.5 4 4.5zm0 12c-.83 0-1.5.68-1.5 1.5s.68 1.5 1.5 1.5 1.5-.68 1.5-1.5-.67-1.5-1.5-1.5zM7 19h14v-2H7v2zm0-6h14v-2H7v2zm0-8v2h14V5H7z"
                  />
                </svg>
              </ForwardRef(SvgIcon)>
            </WithStyles(ForwardRef(SvgIcon))>
          </ForwardRef(FormatListBulletedIcon)>
          <span>
            Списки:
          </span>
        </h2>
        <div
          className="lists__renderList null"
        >
          <Connect(Component)
            id={1}
            key="1"
            label="Магазин"
            needsDone={0}
            toggleDrawer={[Function]}
          >
            <Memo(List)
              activeToDoListId={null}
              deleteToDoListAC={[Function]}
              id={1}
              label="Магазин"
              needsDone={0}
              toggleDrawer={[Function]}
              updateActiveTodoListIdAC={[Function]}
              updateToDoListLabelAC={[Function]}
            >
              <div>
                <WithStyles(ForwardRef(ListItem))
                  button={true}
                  className="list__item"
                  onClick={[Function]}
                >
                  <ForwardRef(ListItem)
                    button={true}
                    className="list__item"
                    classes={
                      Object {
                        "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                        "button": "MuiListItem-button",
                        "container": "MuiListItem-container",
                        "dense": "MuiListItem-dense",
                        "disabled": "Mui-disabled",
                        "divider": "MuiListItem-divider",
                        "focusVisible": "Mui-focusVisible",
                        "gutters": "MuiListItem-gutters",
                        "root": "MuiListItem-root",
                        "secondaryAction": "MuiListItem-secondaryAction",
                        "selected": "Mui-selected",
                      }
                    }
                    onClick={[Function]}
                  >
                    <WithStyles(ForwardRef(ButtonBase))
                      className="MuiListItem-root list__item MuiListItem-gutters MuiListItem-button"
                      component="div"
                      disabled={false}
                      focusVisibleClassName="Mui-focusVisible"
                      onClick={[Function]}
                    >
                      <ForwardRef(ButtonBase)
                        className="MuiListItem-root list__item MuiListItem-gutters MuiListItem-button"
                        classes={
                          Object {
                            "disabled": "Mui-disabled",
                            "focusVisible": "Mui-focusVisible",
                            "root": "MuiButtonBase-root",
                          }
                        }
                        component="div"
                        disabled={false}
                        focusVisibleClassName="Mui-focusVisible"
                        onClick={[Function]}
                      >
                        <div
                          aria-disabled={false}
                          className="MuiButtonBase-root MuiListItem-root list__item MuiListItem-gutters MuiListItem-button"
                          onBlur={[Function]}
                          onClick={[Function]}
                          onDragLeave={[Function]}
                          onFocus={[Function]}
                          onKeyDown={[Function]}
                          onKeyUp={[Function]}
                          onMouseDown={[Function]}
                          onMouseLeave={[Function]}
                          onMouseUp={[Function]}
                          onTouchEnd={[Function]}
                          onTouchMove={[Function]}
                          onTouchStart={[Function]}
                          role="button"
                          tabIndex={0}
                        >
                          <div
                            key=".0"
                          >
                            Магазин
                          </div>
                          <div
                            className="list__wrapper__list__buttonMenu"
                            key=".1"
                          >
                            <WithStyles(ForwardRef(IconButton))
                              aria-controls="simple-menu"
                              aria-haspopup="true"
                              className="list__buttonMenu"
                              onClick={[Function]}
                            >
                              <ForwardRef(IconButton)
                                aria-controls="simple-menu"
                                aria-haspopup="true"
                                className="list__buttonMenu"
                                classes={
                                  Object {
                                    "colorInherit": "MuiIconButton-colorInherit",
                                    "colorPrimary": "MuiIconButton-colorPrimary",
                                    "colorSecondary": "MuiIconButton-colorSecondary",
                                    "disabled": "Mui-disabled",
                                    "edgeEnd": "MuiIconButton-edgeEnd",
                                    "edgeStart": "MuiIconButton-edgeStart",
                                    "label": "MuiIconButton-label",
                                    "root": "MuiIconButton-root",
                                    "sizeSmall": "MuiIconButton-sizeSmall",
                                  }
                                }
                                onClick={[Function]}
                              >
                                <WithStyles(ForwardRef(ButtonBase))
                                  aria-controls="simple-menu"
                                  aria-haspopup="true"
                                  centerRipple={true}
                                  className="MuiIconButton-root list__buttonMenu"
                                  disabled={false}
                                  focusRipple={true}
                                  onClick={[Function]}
                                >
                                  <ForwardRef(ButtonBase)
                                    aria-controls="simple-menu"
                                    aria-haspopup="true"
                                    centerRipple={true}
                                    className="MuiIconButton-root list__buttonMenu"
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "focusVisible": "Mui-focusVisible",
                                        "root": "MuiButtonBase-root",
                                      }
                                    }
                                    disabled={false}
                                    focusRipple={true}
                                    onClick={[Function]}
                                  >
                                    <button
                                      aria-controls="simple-menu"
                                      aria-haspopup="true"
                                      className="MuiButtonBase-root MuiIconButton-root list__buttonMenu"
                                      disabled={false}
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={0}
                                      type="button"
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <ForwardRef(MoreVertIcon)>
                                          <WithStyles(ForwardRef(SvgIcon))>
                                            <ForwardRef(SvgIcon)
                                              classes={
                                                Object {
                                                  "colorAction": "MuiSvgIcon-colorAction",
                                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                  "colorError": "MuiSvgIcon-colorError",
                                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                  "root": "MuiSvgIcon-root",
                                                }
                                              }
                                            >
                                              <svg
                                                aria-hidden={true}
                                                className="MuiSvgIcon-root"
                                                focusable="false"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                                />
                                              </svg>
                                            </ForwardRef(SvgIcon)>
                                          </WithStyles(ForwardRef(SvgIcon))>
                                        </ForwardRef(MoreVertIcon)>
                                      </span>
                                      <WithStyles(memo)
                                        center={true}
                                      >
                                        <ForwardRef(TouchRipple)
                                          center={true}
                                          classes={
                                            Object {
                                              "child": "MuiTouchRipple-child",
                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                              "ripple": "MuiTouchRipple-ripple",
                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                              "root": "MuiTouchRipple-root",
                                            }
                                          }
                                        >
                                          <span
                                            className="MuiTouchRipple-root"
                                          >
                                            <TransitionGroup
                                              childFactory={[Function]}
                                              component={null}
                                              exit={true}
                                            />
                                          </span>
                                        </ForwardRef(TouchRipple)>
                                      </WithStyles(memo)>
                                    </button>
                                  </ForwardRef(ButtonBase)>
                                </WithStyles(ForwardRef(ButtonBase))>
                              </ForwardRef(IconButton)>
                            </WithStyles(ForwardRef(IconButton))>
                            <WithStyles(ForwardRef(Menu))
                              TransitionComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "propTypes": Object {
                                    "children": [Function],
                                    "disableStrictModeCompat": [Function],
                                    "in": [Function],
                                    "onEnter": [Function],
                                    "onEntered": [Function],
                                    "onEntering": [Function],
                                    "onExit": [Function],
                                    "onExited": [Function],
                                    "onExiting": [Function],
                                    "style": [Function],
                                    "timeout": [Function],
                                  },
                                  "render": [Function],
                                }
                              }
                              anchorEl={null}
                              id="simple-menu"
                              keepMounted={true}
                              onClose={[Function]}
                              open={false}
                            >
                              <ForwardRef(Menu)
                                TransitionComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "propTypes": Object {
                                      "children": [Function],
                                      "disableStrictModeCompat": [Function],
                                      "in": [Function],
                                      "onEnter": [Function],
                                      "onEntered": [Function],
                                      "onEntering": [Function],
                                      "onExit": [Function],
                                      "onExited": [Function],
                                      "onExiting": [Function],
                                      "style": [Function],
                                      "timeout": [Function],
                                    },
                                    "render": [Function],
                                  }
                                }
                                anchorEl={null}
                                classes={
                                  Object {
                                    "list": "MuiMenu-list",
                                    "paper": "MuiMenu-paper",
                                  }
                                }
                                id="simple-menu"
                                keepMounted={true}
                                onClose={[Function]}
                                open={false}
                              >
                                <WithStyles(ForwardRef(Popover))
                                  PaperProps={
                                    Object {
                                      "classes": Object {
                                        "root": "MuiMenu-paper",
                                      },
                                    }
                                  }
                                  TransitionComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "propTypes": Object {
                                        "children": [Function],
                                        "disableStrictModeCompat": [Function],
                                        "in": [Function],
                                        "onEnter": [Function],
                                        "onEntered": [Function],
                                        "onEntering": [Function],
                                        "onExit": [Function],
                                        "onExited": [Function],
                                        "onExiting": [Function],
                                        "style": [Function],
                                        "timeout": [Function],
                                      },
                                      "render": [Function],
                                    }
                                  }
                                  TransitionProps={
                                    Object {
                                      "onEntering": [Function],
                                    }
                                  }
                                  anchorEl={null}
                                  anchorOrigin={
                                    Object {
                                      "horizontal": "left",
                                      "vertical": "top",
                                    }
                                  }
                                  getContentAnchorEl={[Function]}
                                  id="simple-menu"
                                  keepMounted={true}
                                  onClose={[Function]}
                                  open={false}
                                  transformOrigin={
                                    Object {
                                      "horizontal": "left",
                                      "vertical": "top",
                                    }
                                  }
                                  transitionDuration="auto"
                                >
                                  <ForwardRef(Popover)
                                    PaperProps={
                                      Object {
                                        "classes": Object {
                                          "root": "MuiMenu-paper",
                                        },
                                      }
                                    }
                                    TransitionComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "propTypes": Object {
                                          "children": [Function],
                                          "disableStrictModeCompat": [Function],
                                          "in": [Function],
                                          "onEnter": [Function],
                                          "onEntered": [Function],
                                          "onEntering": [Function],
                                          "onExit": [Function],
                                          "onExited": [Function],
                                          "onExiting": [Function],
                                          "style": [Function],
                                          "timeout": [Function],
                                        },
                                        "render": [Function],
                                      }
                                    }
                                    TransitionProps={
                                      Object {
                                        "onEntering": [Function],
                                      }
                                    }
                                    anchorEl={null}
                                    anchorOrigin={
                                      Object {
                                        "horizontal": "left",
                                        "vertical": "top",
                                      }
                                    }
                                    classes={
                                      Object {
                                        "paper": "MuiPopover-paper",
                                        "root": "MuiPopover-root",
                                      }
                                    }
                                    getContentAnchorEl={[Function]}
                                    id="simple-menu"
                                    keepMounted={true}
                                    onClose={[Function]}
                                    open={false}
                                    transformOrigin={
                                      Object {
                                        "horizontal": "left",
                                        "vertical": "top",
                                      }
                                    }
                                    transitionDuration="auto"
                                  >
                                    <ForwardRef(Modal)
                                      BackdropProps={
                                        Object {
                                          "invisible": true,
                                        }
                                      }
                                      className="MuiPopover-root"
                                      id="simple-menu"
                                      keepMounted={true}
                                      onClose={[Function]}
                                      open={false}
                                    >
                                      <ForwardRef(Portal)
                                        disablePortal={false}
                                      >
                                        <Portal
                                          containerInfo={
                                            <body
                                              style="padding-right: 0px; overflow: hidden;"
                                            >
                                              <div
                                                aria-hidden="true"
                                                class="MuiPopover-root"
                                                id="simple-menu"
                                                role="presentation"
                                                style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px; visibility: hidden;"
                                              >
                                                <div
                                                  data-test="sentinelStart"
                                                  tabindex="0"
                                                />
                                                <div
                                                  class="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                                  style="opacity: 0; visibility: hidden;"
                                                  tabindex="-1"
                                                >
                                                  <ul
                                                    class="MuiList-root MuiMenu-list MuiList-padding"
                                                    role="menu"
                                                    tabindex="-1"
                                                  >
                                                    <li
                                                      aria-disabled="false"
                                                      class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_edit MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                      role="menuitem"
                                                      tabindex="0"
                                                    >
                                                      Редактировать
                                                      <span
                                                        class="MuiTouchRipple-root"
                                                      />
                                                    </li>
                                                    <li
                                                      aria-disabled="false"
                                                      class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_delete MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                      role="menuitem"
                                                      tabindex="-1"
                                                    >
                                                      Удалить
                                                      <span
                                                        class="MuiTouchRipple-root"
                                                      />
                                                    </li>
                                                  </ul>
                                                </div>
                                                <div
                                                  data-test="sentinelEnd"
                                                  tabindex="0"
                                                />
                                              </div>
                                              <div
                                                aria-hidden="true"
                                                class="MuiPopover-root"
                                                id="simple-menu"
                                                role="presentation"
                                                style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                                              >
                                                <div
                                                  data-test="sentinelStart"
                                                  tabindex="0"
                                                />
                                                <div
                                                  class="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                                  style="opacity: 0; webkit-transition: opacity 195ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 195ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; top: 16px; left: 16px; transform-origin: -16px -16px;"
                                                  tabindex="-1"
                                                >
                                                  <ul
                                                    class="MuiList-root MuiMenu-list MuiList-padding"
                                                    role="menu"
                                                    tabindex="-1"
                                                  >
                                                    <li
                                                      aria-disabled="false"
                                                      class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_edit MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button Mui-focusVisible Mui-focusVisible"
                                                      role="menuitem"
                                                      tabindex="0"
                                                    >
                                                      Редактировать
                                                      <span
                                                        class="MuiTouchRipple-root"
                                                      />
                                                    </li>
                                                    <li
                                                      aria-disabled="false"
                                                      class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_delete MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                      role="menuitem"
                                                      tabindex="-1"
                                                    >
                                                      Удалить
                                                      <span
                                                        class="MuiTouchRipple-root"
                                                      />
                                                    </li>
                                                  </ul>
                                                </div>
                                                <div
                                                  data-test="sentinelEnd"
                                                  tabindex="0"
                                                />
                                              </div>
                                              <div
                                                aria-hidden="true"
                                                class="MuiPopover-root"
                                                id="simple-menu"
                                                role="presentation"
                                                style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                                              >
                                                <div
                                                  data-test="sentinelStart"
                                                  tabindex="0"
                                                />
                                                <div
                                                  class="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                                  style="opacity: 0; webkit-transition: opacity 195ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 195ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; top: 16px; left: 16px; transform-origin: -16px -16px;"
                                                  tabindex="-1"
                                                >
                                                  <ul
                                                    class="MuiList-root MuiMenu-list MuiList-padding"
                                                    role="menu"
                                                    tabindex="-1"
                                                  >
                                                    <li
                                                      aria-disabled="false"
                                                      class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_edit MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                      role="menuitem"
                                                      tabindex="0"
                                                    >
                                                      Редактировать
                                                      <span
                                                        class="MuiTouchRipple-root"
                                                      />
                                                    </li>
                                                    <li
                                                      aria-disabled="false"
                                                      class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_delete MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                      role="menuitem"
                                                      tabindex="-1"
                                                    >
                                                      Удалить
                                                      <span
                                                        class="MuiTouchRipple-root"
                                                      />
                                                    </li>
                                                  </ul>
                                                </div>
                                                <div
                                                  data-test="sentinelEnd"
                                                  tabindex="0"
                                                />
                                              </div>
                                              <div
                                                class="MuiDialog-root"
                                                color="primary"
                                                role="presentation"
                                                style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                                              >
                                                <div
                                                  aria-hidden="true"
                                                  class="MuiBackdrop-root"
                                                  style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                                                />
                                                <div
                                                  data-test="sentinelStart"
                                                  tabindex="0"
                                                />
                                                <div
                                                  class="MuiDialog-container MuiDialog-scrollPaper"
                                                  role="none presentation"
                                                  style="webkit-transform: none; transform: none; webkit-transition: -webkit-transform 225ms cubic-bezier(0.0, 0, 0.2, 1) 0ms; transition: transform 225ms cubic-bezier(0.0, 0, 0.2, 1) 0ms;"
                                                  tabindex="-1"
                                                >
                                                  <div
                                                    aria-describedby="alert-dialog-slide-description"
                                                    aria-labelledby="alert-dialog-slide-title"
                                                    class="MuiPaper-root MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiPaper-elevation24 MuiPaper-rounded"
                                                    role="dialog"
                                                  >
                                                    <div
                                                      class="MuiDialogTitle-root EditToDoListItem__title"
                                                      id="alert-dialog-slide-title"
                                                    >
                                                      <h2
                                                        class="MuiTypography-root MuiTypography-h6"
                                                      >
                                                        Редактирование списка
                                                      </h2>
                                                    </div>
                                                    <div
                                                      class="MuiDialogContent-root"
                                                    >
                                                      <div
                                                        class="MuiFormControl-root MuiTextField-root MuiFormControl-marginDense MuiFormControl-fullWidth"
                                                      >
                                                        <label
                                                          class="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-marginDense MuiFormLabel-filled Mui-focused Mui-focused"
                                                          data-shrink="true"
                                                          for="name"
                                                          id="name-label"
                                                        >
                                                          Название списка
                                                        </label>
                                                        <div
                                                          class="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-fullWidth MuiInput-fullWidth Mui-focused Mui-focused MuiInputBase-formControl MuiInput-formControl MuiInputBase-marginDense MuiInput-marginDense"
                                                        >
                                                          <input
                                                            aria-invalid="false"
                                                            autocomplete="off"
                                                            class="MuiInputBase-input MuiInput-input MuiInputBase-inputMarginDense MuiInput-inputMarginDense"
                                                            id="name"
                                                            maxlength="40"
                                                            type="text"
                                                            value="updatedList"
                                                          />
                                                        </div>
                                                      </div>
                                                    </div>
                                                    <div
                                                      class="MuiDialogActions-root MuiDialogActions-spacing"
                                                    >
                                                      <button
                                                        class="MuiButtonBase-root MuiButton-root MuiButton-contained"
                                                        tabindex="0"
                                                        type="button"
                                                      >
                                                        <span
                                                          class="MuiButton-label"
                                                        >
                                                          Отменить
                                                        </span>
                                                        <span
                                                          class="MuiTouchRipple-root"
                                                        />
                                                      </button>
                                                      <button
                                                        class="MuiButtonBase-root MuiButton-root MuiButton-contained saveButton MuiButton-containedPrimary"
                                                        tabindex="0"
                                                        type="button"
                                                      >
                                                        <span
                                                          class="MuiButton-label"
                                                        >
                                                          <span
                                                            class="MuiButton-startIcon MuiButton-iconSizeMedium"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              class="MuiSvgIcon-root"
                                                              focusable="false"
                                                              viewBox="0 0 24 24"
                                                            >
                                                              <path
                                                                d="M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z"
                                                              />
                                                            </svg>
                                                          </span>
                                                          Сохранить
                                                        </span>
                                                        <span
                                                          class="MuiTouchRipple-root"
                                                        />
                                                      </button>
                                                    </div>
                                                  </div>
                                                </div>
                                                <div
                                                  data-test="sentinelEnd"
                                                  tabindex="0"
                                                />
                                              </div>
                                            </body>
                                          }
                                        >
                                          <div
                                            className="MuiPopover-root"
                                            id="simple-menu"
                                            onKeyDown={[Function]}
                                            role="presentation"
                                            style={
                                              Object {
                                                "bottom": 0,
                                                "left": 0,
                                                "position": "fixed",
                                                "right": 0,
                                                "top": 0,
                                                "zIndex": 1300,
                                              }
                                            }
                                          >
                                            <ForwardRef(SimpleBackdrop)
                                              invisible={true}
                                              onClick={[Function]}
                                              open={false}
                                            />
                                            <Unstable_TrapFocus
                                              disableAutoFocus={false}
                                              disableEnforceFocus={false}
                                              disableRestoreFocus={false}
                                              getDoc={[Function]}
                                              isEnabled={[Function]}
                                              open={false}
                                            >
                                              <div
                                                data-test="sentinelStart"
                                                tabIndex={0}
                                              />
                                              <ForwardRef(Fade)
                                                appear={true}
                                                in={false}
                                                onEnter={[Function]}
                                                onEntering={[Function]}
                                                onExited={[Function]}
                                                tabIndex="-1"
                                              >
                                                <Transition
                                                  appear={true}
                                                  enter={true}
                                                  exit={true}
                                                  in={false}
                                                  mountOnEnter={false}
                                                  onEnter={[Function]}
                                                  onEntered={[Function]}
                                                  onEntering={[Function]}
                                                  onExit={[Function]}
                                                  onExited={[Function]}
                                                  onExiting={[Function]}
                                                  tabIndex="-1"
                                                  timeout={
                                                    Object {
                                                      "enter": 225,
                                                      "exit": 195,
                                                    }
                                                  }
                                                  unmountOnExit={false}
                                                >
                                                  <WithStyles(ForwardRef(Paper))
                                                    className="MuiPopover-paper"
                                                    classes={
                                                      Object {
                                                        "root": "MuiMenu-paper",
                                                      }
                                                    }
                                                    elevation={8}
                                                    style={
                                                      Object {
                                                        "opacity": 0,
                                                        "visibility": undefined,
                                                      }
                                                    }
                                                    tabIndex="-1"
                                                  >
                                                    <ForwardRef(Paper)
                                                      className="MuiPopover-paper"
                                                      classes={
                                                        Object {
                                                          "elevation0": "MuiPaper-elevation0",
                                                          "elevation1": "MuiPaper-elevation1",
                                                          "elevation10": "MuiPaper-elevation10",
                                                          "elevation11": "MuiPaper-elevation11",
                                                          "elevation12": "MuiPaper-elevation12",
                                                          "elevation13": "MuiPaper-elevation13",
                                                          "elevation14": "MuiPaper-elevation14",
                                                          "elevation15": "MuiPaper-elevation15",
                                                          "elevation16": "MuiPaper-elevation16",
                                                          "elevation17": "MuiPaper-elevation17",
                                                          "elevation18": "MuiPaper-elevation18",
                                                          "elevation19": "MuiPaper-elevation19",
                                                          "elevation2": "MuiPaper-elevation2",
                                                          "elevation20": "MuiPaper-elevation20",
                                                          "elevation21": "MuiPaper-elevation21",
                                                          "elevation22": "MuiPaper-elevation22",
                                                          "elevation23": "MuiPaper-elevation23",
                                                          "elevation24": "MuiPaper-elevation24",
                                                          "elevation3": "MuiPaper-elevation3",
                                                          "elevation4": "MuiPaper-elevation4",
                                                          "elevation5": "MuiPaper-elevation5",
                                                          "elevation6": "MuiPaper-elevation6",
                                                          "elevation7": "MuiPaper-elevation7",
                                                          "elevation8": "MuiPaper-elevation8",
                                                          "elevation9": "MuiPaper-elevation9",
                                                          "outlined": "MuiPaper-outlined",
                                                          "root": "MuiPaper-root MuiMenu-paper",
                                                          "rounded": "MuiPaper-rounded",
                                                        }
                                                      }
                                                      elevation={8}
                                                      style={
                                                        Object {
                                                          "opacity": 0,
                                                          "visibility": undefined,
                                                        }
                                                      }
                                                      tabIndex="-1"
                                                    >
                                                      <div
                                                        className="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                                        style={
                                                          Object {
                                                            "opacity": 0,
                                                            "visibility": undefined,
                                                          }
                                                        }
                                                        tabIndex="-1"
                                                      >
                                                        <ForwardRef(MenuList)
                                                          actions={
                                                            Object {
                                                              "current": Object {
                                                                "adjustStyleForScrollbar": [Function],
                                                              },
                                                            }
                                                          }
                                                          autoFocus={false}
                                                          autoFocusItem={false}
                                                          className="MuiMenu-list"
                                                          onKeyDown={[Function]}
                                                          variant="selectedMenu"
                                                        >
                                                          <WithStyles(ForwardRef(List))
                                                            className="MuiMenu-list"
                                                            onKeyDown={[Function]}
                                                            role="menu"
                                                            tabIndex={-1}
                                                          >
                                                            <ForwardRef(List)
                                                              className="MuiMenu-list"
                                                              classes={
                                                                Object {
                                                                  "dense": "MuiList-dense",
                                                                  "padding": "MuiList-padding",
                                                                  "root": "MuiList-root",
                                                                  "subheader": "MuiList-subheader",
                                                                }
                                                              }
                                                              onKeyDown={[Function]}
                                                              role="menu"
                                                              tabIndex={-1}
                                                            >
                                                              <ul
                                                                className="MuiList-root MuiMenu-list MuiList-padding"
                                                                onKeyDown={[Function]}
                                                                role="menu"
                                                                tabIndex={-1}
                                                              >
                                                                <WithStyles(ForwardRef(MenuItem))
                                                                  className="ListItem_edit"
                                                                  key=".$.0"
                                                                  onClick={[Function]}
                                                                  tabIndex={0}
                                                                >
                                                                  <ForwardRef(MenuItem)
                                                                    className="ListItem_edit"
                                                                    classes={
                                                                      Object {
                                                                        "dense": "MuiMenuItem-dense",
                                                                        "gutters": "MuiMenuItem-gutters",
                                                                        "root": "MuiMenuItem-root",
                                                                        "selected": "Mui-selected",
                                                                      }
                                                                    }
                                                                    onClick={[Function]}
                                                                    tabIndex={0}
                                                                  >
                                                                    <WithStyles(ForwardRef(ListItem))
                                                                      button={true}
                                                                      className="MuiMenuItem-root ListItem_edit MuiMenuItem-gutters"
                                                                      classes={
                                                                        Object {
                                                                          "dense": "MuiMenuItem-dense",
                                                                        }
                                                                      }
                                                                      component="li"
                                                                      disableGutters={false}
                                                                      onClick={[Function]}
                                                                      role="menuitem"
                                                                      tabIndex={0}
                                                                    >
                                                                      <ForwardRef(ListItem)
                                                                        button={true}
                                                                        className="MuiMenuItem-root ListItem_edit MuiMenuItem-gutters"
                                                                        classes={
                                                                          Object {
                                                                            "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                                            "button": "MuiListItem-button",
                                                                            "container": "MuiListItem-container",
                                                                            "dense": "MuiListItem-dense MuiMenuItem-dense",
                                                                            "disabled": "Mui-disabled",
                                                                            "divider": "MuiListItem-divider",
                                                                            "focusVisible": "Mui-focusVisible",
                                                                            "gutters": "MuiListItem-gutters",
                                                                            "root": "MuiListItem-root",
                                                                            "secondaryAction": "MuiListItem-secondaryAction",
                                                                            "selected": "Mui-selected",
                                                                          }
                                                                        }
                                                                        component="li"
                                                                        disableGutters={false}
                                                                        onClick={[Function]}
                                                                        role="menuitem"
                                                                        tabIndex={0}
                                                                      >
                                                                        <WithStyles(ForwardRef(ButtonBase))
                                                                          className="MuiListItem-root MuiMenuItem-root ListItem_edit MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                          component="li"
                                                                          disabled={false}
                                                                          focusVisibleClassName="Mui-focusVisible"
                                                                          onClick={[Function]}
                                                                          role="menuitem"
                                                                          tabIndex={0}
                                                                        >
                                                                          <ForwardRef(ButtonBase)
                                                                            className="MuiListItem-root MuiMenuItem-root ListItem_edit MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                            classes={
                                                                              Object {
                                                                                "disabled": "Mui-disabled",
                                                                                "focusVisible": "Mui-focusVisible",
                                                                                "root": "MuiButtonBase-root",
                                                                              }
                                                                            }
                                                                            component="li"
                                                                            disabled={false}
                                                                            focusVisibleClassName="Mui-focusVisible"
                                                                            onClick={[Function]}
                                                                            role="menuitem"
                                                                            tabIndex={0}
                                                                          >
                                                                            <li
                                                                              aria-disabled={false}
                                                                              className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_edit MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                              onBlur={[Function]}
                                                                              onClick={[Function]}
                                                                              onDragLeave={[Function]}
                                                                              onFocus={[Function]}
                                                                              onKeyDown={[Function]}
                                                                              onKeyUp={[Function]}
                                                                              onMouseDown={[Function]}
                                                                              onMouseLeave={[Function]}
                                                                              onMouseUp={[Function]}
                                                                              onTouchEnd={[Function]}
                                                                              onTouchMove={[Function]}
                                                                              onTouchStart={[Function]}
                                                                              role="menuitem"
                                                                              tabIndex={0}
                                                                            >
                                                                              Редактировать
                                                                              <WithStyles(memo)
                                                                                center={false}
                                                                              >
                                                                                <ForwardRef(TouchRipple)
                                                                                  center={false}
                                                                                  classes={
                                                                                    Object {
                                                                                      "child": "MuiTouchRipple-child",
                                                                                      "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                      "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                      "ripple": "MuiTouchRipple-ripple",
                                                                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                      "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                      "root": "MuiTouchRipple-root",
                                                                                    }
                                                                                  }
                                                                                >
                                                                                  <span
                                                                                    className="MuiTouchRipple-root"
                                                                                  >
                                                                                    <TransitionGroup
                                                                                      childFactory={[Function]}
                                                                                      component={null}
                                                                                      exit={true}
                                                                                    />
                                                                                  </span>
                                                                                </ForwardRef(TouchRipple)>
                                                                              </WithStyles(memo)>
                                                                            </li>
                                                                          </ForwardRef(ButtonBase)>
                                                                        </WithStyles(ForwardRef(ButtonBase))>
                                                                      </ForwardRef(ListItem)>
                                                                    </WithStyles(ForwardRef(ListItem))>
                                                                  </ForwardRef(MenuItem)>
                                                                </WithStyles(ForwardRef(MenuItem))>
                                                                <WithStyles(ForwardRef(MenuItem))
                                                                  className="ListItem_delete"
                                                                  key=".$.1"
                                                                  onClick={[Function]}
                                                                >
                                                                  <ForwardRef(MenuItem)
                                                                    className="ListItem_delete"
                                                                    classes={
                                                                      Object {
                                                                        "dense": "MuiMenuItem-dense",
                                                                        "gutters": "MuiMenuItem-gutters",
                                                                        "root": "MuiMenuItem-root",
                                                                        "selected": "Mui-selected",
                                                                      }
                                                                    }
                                                                    onClick={[Function]}
                                                                  >
                                                                    <WithStyles(ForwardRef(ListItem))
                                                                      button={true}
                                                                      className="MuiMenuItem-root ListItem_delete MuiMenuItem-gutters"
                                                                      classes={
                                                                        Object {
                                                                          "dense": "MuiMenuItem-dense",
                                                                        }
                                                                      }
                                                                      component="li"
                                                                      disableGutters={false}
                                                                      onClick={[Function]}
                                                                      role="menuitem"
                                                                      tabIndex={-1}
                                                                    >
                                                                      <ForwardRef(ListItem)
                                                                        button={true}
                                                                        className="MuiMenuItem-root ListItem_delete MuiMenuItem-gutters"
                                                                        classes={
                                                                          Object {
                                                                            "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                                            "button": "MuiListItem-button",
                                                                            "container": "MuiListItem-container",
                                                                            "dense": "MuiListItem-dense MuiMenuItem-dense",
                                                                            "disabled": "Mui-disabled",
                                                                            "divider": "MuiListItem-divider",
                                                                            "focusVisible": "Mui-focusVisible",
                                                                            "gutters": "MuiListItem-gutters",
                                                                            "root": "MuiListItem-root",
                                                                            "secondaryAction": "MuiListItem-secondaryAction",
                                                                            "selected": "Mui-selected",
                                                                          }
                                                                        }
                                                                        component="li"
                                                                        disableGutters={false}
                                                                        onClick={[Function]}
                                                                        role="menuitem"
                                                                        tabIndex={-1}
                                                                      >
                                                                        <WithStyles(ForwardRef(ButtonBase))
                                                                          className="MuiListItem-root MuiMenuItem-root ListItem_delete MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                          component="li"
                                                                          disabled={false}
                                                                          focusVisibleClassName="Mui-focusVisible"
                                                                          onClick={[Function]}
                                                                          role="menuitem"
                                                                          tabIndex={-1}
                                                                        >
                                                                          <ForwardRef(ButtonBase)
                                                                            className="MuiListItem-root MuiMenuItem-root ListItem_delete MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                            classes={
                                                                              Object {
                                                                                "disabled": "Mui-disabled",
                                                                                "focusVisible": "Mui-focusVisible",
                                                                                "root": "MuiButtonBase-root",
                                                                              }
                                                                            }
                                                                            component="li"
                                                                            disabled={false}
                                                                            focusVisibleClassName="Mui-focusVisible"
                                                                            onClick={[Function]}
                                                                            role="menuitem"
                                                                            tabIndex={-1}
                                                                          >
                                                                            <li
                                                                              aria-disabled={false}
                                                                              className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_delete MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                              onBlur={[Function]}
                                                                              onClick={[Function]}
                                                                              onDragLeave={[Function]}
                                                                              onFocus={[Function]}
                                                                              onKeyDown={[Function]}
                                                                              onKeyUp={[Function]}
                                                                              onMouseDown={[Function]}
                                                                              onMouseLeave={[Function]}
                                                                              onMouseUp={[Function]}
                                                                              onTouchEnd={[Function]}
                                                                              onTouchMove={[Function]}
                                                                              onTouchStart={[Function]}
                                                                              role="menuitem"
                                                                              tabIndex={-1}
                                                                            >
                                                                              Удалить
                                                                              <WithStyles(memo)
                                                                                center={false}
                                                                              >
                                                                                <ForwardRef(TouchRipple)
                                                                                  center={false}
                                                                                  classes={
                                                                                    Object {
                                                                                      "child": "MuiTouchRipple-child",
                                                                                      "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                      "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                      "ripple": "MuiTouchRipple-ripple",
                                                                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                      "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                      "root": "MuiTouchRipple-root",
                                                                                    }
                                                                                  }
                                                                                >
                                                                                  <span
                                                                                    className="MuiTouchRipple-root"
                                                                                  >
                                                                                    <TransitionGroup
                                                                                      childFactory={[Function]}
                                                                                      component={null}
                                                                                      exit={true}
                                                                                    />
                                                                                  </span>
                                                                                </ForwardRef(TouchRipple)>
                                                                              </WithStyles(memo)>
                                                                            </li>
                                                                          </ForwardRef(ButtonBase)>
                                                                        </WithStyles(ForwardRef(ButtonBase))>
                                                                      </ForwardRef(ListItem)>
                                                                    </WithStyles(ForwardRef(ListItem))>
                                                                  </ForwardRef(MenuItem)>
                                                                </WithStyles(ForwardRef(MenuItem))>
                                                              </ul>
                                                            </ForwardRef(List)>
                                                          </WithStyles(ForwardRef(List))>
                                                        </ForwardRef(MenuList)>
                                                      </div>
                                                    </ForwardRef(Paper)>
                                                  </WithStyles(ForwardRef(Paper))>
                                                </Transition>
                                              </ForwardRef(Fade)>
                                              <div
                                                data-test="sentinelEnd"
                                                tabIndex={0}
                                              />
                                            </Unstable_TrapFocus>
                                          </div>
                                        </Portal>
                                      </ForwardRef(Portal)>
                                    </ForwardRef(Modal)>
                                  </ForwardRef(Popover)>
                                </WithStyles(ForwardRef(Popover))>
                              </ForwardRef(Menu)>
                            </WithStyles(ForwardRef(Menu))>
                          </div>
                          <WithStyles(memo)
                            center={false}
                          >
                            <ForwardRef(TouchRipple)
                              center={false}
                              classes={
                                Object {
                                  "child": "MuiTouchRipple-child",
                                  "childLeaving": "MuiTouchRipple-childLeaving",
                                  "childPulsate": "MuiTouchRipple-childPulsate",
                                  "ripple": "MuiTouchRipple-ripple",
                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                  "rippleVisible": "MuiTouchRipple-rippleVisible",
                                  "root": "MuiTouchRipple-root",
                                }
                              }
                            >
                              <span
                                className="MuiTouchRipple-root"
                              >
                                <TransitionGroup
                                  childFactory={[Function]}
                                  component={null}
                                  exit={true}
                                />
                              </span>
                            </ForwardRef(TouchRipple)>
                          </WithStyles(memo)>
                        </div>
                      </ForwardRef(ButtonBase)>
                    </WithStyles(ForwardRef(ButtonBase))>
                  </ForwardRef(ListItem)>
                </WithStyles(ForwardRef(ListItem))>
                <Memo(EditForm)
                  eventClose={[Function]}
                  eventSave={[Function]}
                  initialLabel="Магазин"
                  text="Название списка"
                  title="Редактирование списка"
                >
                  <WithStyles(ForwardRef(Dialog))
                    TransitionComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "render": [Function],
                      }
                    }
                    aria-describedby="alert-dialog-slide-description"
                    aria-labelledby="alert-dialog-slide-title"
                    color="primary"
                    keepMounted={true}
                    onClose={[Function]}
                    open={true}
                  >
                    <ForwardRef(Dialog)
                      TransitionComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        }
                      }
                      aria-describedby="alert-dialog-slide-description"
                      aria-labelledby="alert-dialog-slide-title"
                      classes={
                        Object {
                          "container": "MuiDialog-container",
                          "paper": "MuiDialog-paper",
                          "paperFullScreen": "MuiDialog-paperFullScreen",
                          "paperFullWidth": "MuiDialog-paperFullWidth",
                          "paperScrollBody": "MuiDialog-paperScrollBody",
                          "paperScrollPaper": "MuiDialog-paperScrollPaper",
                          "paperWidthFalse": "MuiDialog-paperWidthFalse",
                          "paperWidthLg": "MuiDialog-paperWidthLg",
                          "paperWidthMd": "MuiDialog-paperWidthMd",
                          "paperWidthSm": "MuiDialog-paperWidthSm",
                          "paperWidthXl": "MuiDialog-paperWidthXl",
                          "paperWidthXs": "MuiDialog-paperWidthXs",
                          "root": "MuiDialog-root",
                          "scrollBody": "MuiDialog-scrollBody",
                          "scrollPaper": "MuiDialog-scrollPaper",
                        }
                      }
                      color="primary"
                      keepMounted={true}
                      onClose={[Function]}
                      open={true}
                    >
                      <ForwardRef(Modal)
                        BackdropComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "Naked": Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "propTypes": Object {
                                "children": [Function],
                                "className": [Function],
                                "classes": [Function],
                                "invisible": [Function],
                                "open": [Function],
                                "transitionDuration": [Function],
                              },
                              "render": [Function],
                            },
                            "options": Object {
                              "defaultTheme": Object {
                                "breakpoints": Object {
                                  "between": [Function],
                                  "down": [Function],
                                  "keys": Array [
                                    "xs",
                                    "sm",
                                    "md",
                                    "lg",
                                    "xl",
                                  ],
                                  "only": [Function],
                                  "up": [Function],
                                  "values": Object {
                                    "lg": 1280,
                                    "md": 960,
                                    "sm": 600,
                                    "xl": 1920,
                                    "xs": 0,
                                  },
                                  "width": [Function],
                                },
                                "direction": "ltr",
                                "mixins": Object {
                                  "gutters": [Function],
                                  "toolbar": Object {
                                    "@media (min-width:0px) and (orientation: landscape)": Object {
                                      "minHeight": 48,
                                    },
                                    "@media (min-width:600px)": Object {
                                      "minHeight": 64,
                                    },
                                    "minHeight": 56,
                                  },
                                },
                                "overrides": Object {},
                                "palette": Object {
                                  "action": Object {
                                    "activatedOpacity": 0.12,
                                    "active": "rgba(0, 0, 0, 0.54)",
                                    "disabled": "rgba(0, 0, 0, 0.26)",
                                    "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                    "disabledOpacity": 0.38,
                                    "focus": "rgba(0, 0, 0, 0.12)",
                                    "focusOpacity": 0.12,
                                    "hover": "rgba(0, 0, 0, 0.04)",
                                    "hoverOpacity": 0.04,
                                    "selected": "rgba(0, 0, 0, 0.08)",
                                    "selectedOpacity": 0.08,
                                  },
                                  "augmentColor": [Function],
                                  "background": Object {
                                    "default": "#fafafa",
                                    "paper": "#fff",
                                  },
                                  "common": Object {
                                    "black": "#000",
                                    "white": "#fff",
                                  },
                                  "contrastThreshold": 3,
                                  "divider": "rgba(0, 0, 0, 0.12)",
                                  "error": Object {
                                    "contrastText": "#fff",
                                    "dark": "#d32f2f",
                                    "light": "#e57373",
                                    "main": "#f44336",
                                  },
                                  "getContrastText": [Function],
                                  "grey": Object {
                                    "100": "#f5f5f5",
                                    "200": "#eeeeee",
                                    "300": "#e0e0e0",
                                    "400": "#bdbdbd",
                                    "50": "#fafafa",
                                    "500": "#9e9e9e",
                                    "600": "#757575",
                                    "700": "#616161",
                                    "800": "#424242",
                                    "900": "#212121",
                                    "A100": "#d5d5d5",
                                    "A200": "#aaaaaa",
                                    "A400": "#303030",
                                    "A700": "#616161",
                                  },
                                  "info": Object {
                                    "contrastText": "#fff",
                                    "dark": "#1976d2",
                                    "light": "#64b5f6",
                                    "main": "#2196f3",
                                  },
                                  "primary": Object {
                                    "contrastText": "#fff",
                                    "dark": "#303f9f",
                                    "light": "#7986cb",
                                    "main": "#3f51b5",
                                  },
                                  "secondary": Object {
                                    "contrastText": "#fff",
                                    "dark": "#c51162",
                                    "light": "#ff4081",
                                    "main": "#f50057",
                                  },
                                  "success": Object {
                                    "contrastText": "rgba(0, 0, 0, 0.87)",
                                    "dark": "#388e3c",
                                    "light": "#81c784",
                                    "main": "#4caf50",
                                  },
                                  "text": Object {
                                    "disabled": "rgba(0, 0, 0, 0.38)",
                                    "hint": "rgba(0, 0, 0, 0.38)",
                                    "primary": "rgba(0, 0, 0, 0.87)",
                                    "secondary": "rgba(0, 0, 0, 0.54)",
                                  },
                                  "tonalOffset": 0.2,
                                  "type": "light",
                                  "warning": Object {
                                    "contrastText": "rgba(0, 0, 0, 0.87)",
                                    "dark": "#f57c00",
                                    "light": "#ffb74d",
                                    "main": "#ff9800",
                                  },
                                },
                                "props": Object {},
                                "shadows": Array [
                                  "none",
                                  "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                  "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                  "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                  "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                  "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                  "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                  "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                  "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                  "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                  "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                  "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                  "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                  "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                  "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                  "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                  "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                ],
                                "shape": Object {
                                  "borderRadius": 4,
                                },
                                "spacing": [Function],
                                "transitions": Object {
                                  "create": [Function],
                                  "duration": Object {
                                    "complex": 375,
                                    "enteringScreen": 225,
                                    "leavingScreen": 195,
                                    "short": 250,
                                    "shorter": 200,
                                    "shortest": 150,
                                    "standard": 300,
                                  },
                                  "easing": Object {
                                    "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                    "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                    "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                    "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                  },
                                  "getAutoHeightDuration": [Function],
                                },
                                "typography": Object {
                                  "body1": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.00938em",
                                    "lineHeight": 1.5,
                                  },
                                  "body2": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.875rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.01071em",
                                    "lineHeight": 1.43,
                                  },
                                  "button": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.875rem",
                                    "fontWeight": 500,
                                    "letterSpacing": "0.02857em",
                                    "lineHeight": 1.75,
                                    "textTransform": "uppercase",
                                  },
                                  "caption": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.75rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.03333em",
                                    "lineHeight": 1.66,
                                  },
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": 14,
                                  "fontWeightBold": 700,
                                  "fontWeightLight": 300,
                                  "fontWeightMedium": 500,
                                  "fontWeightRegular": 400,
                                  "h1": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "6rem",
                                    "fontWeight": 300,
                                    "letterSpacing": "-0.01562em",
                                    "lineHeight": 1.167,
                                  },
                                  "h2": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "3.75rem",
                                    "fontWeight": 300,
                                    "letterSpacing": "-0.00833em",
                                    "lineHeight": 1.2,
                                  },
                                  "h3": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "3rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0em",
                                    "lineHeight": 1.167,
                                  },
                                  "h4": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "2.125rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.00735em",
                                    "lineHeight": 1.235,
                                  },
                                  "h5": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1.5rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0em",
                                    "lineHeight": 1.334,
                                  },
                                  "h6": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1.25rem",
                                    "fontWeight": 500,
                                    "letterSpacing": "0.0075em",
                                    "lineHeight": 1.6,
                                  },
                                  "htmlFontSize": 16,
                                  "overline": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.75rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.08333em",
                                    "lineHeight": 2.66,
                                    "textTransform": "uppercase",
                                  },
                                  "pxToRem": [Function],
                                  "round": [Function],
                                  "subtitle1": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.00938em",
                                    "lineHeight": 1.75,
                                  },
                                  "subtitle2": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.875rem",
                                    "fontWeight": 500,
                                    "letterSpacing": "0.00714em",
                                    "lineHeight": 1.57,
                                  },
                                },
                                "zIndex": Object {
                                  "appBar": 1100,
                                  "drawer": 1200,
                                  "mobileStepper": 1000,
                                  "modal": 1300,
                                  "snackbar": 1400,
                                  "speedDial": 1050,
                                  "tooltip": 1500,
                                },
                              },
                              "name": "MuiBackdrop",
                            },
                            "propTypes": Object {
                              "classes": [Function],
                              "innerRef": [Function],
                            },
                            "render": [Function],
                            "useStyles": [Function],
                          }
                        }
                        BackdropProps={
                          Object {
                            "transitionDuration": Object {
                              "enter": 225,
                              "exit": 195,
                            },
                          }
                        }
                        className="MuiDialog-root"
                        closeAfterTransition={true}
                        color="primary"
                        disableEscapeKeyDown={false}
                        keepMounted={true}
                        onClose={[Function]}
                        open={true}
                      >
                        <ForwardRef(Portal)
                          disablePortal={false}
                        >
                          <Portal
                            containerInfo={
                              <body
                                style="padding-right: 0px; overflow: hidden;"
                              >
                                <div
                                  aria-hidden="true"
                                  class="MuiPopover-root"
                                  id="simple-menu"
                                  role="presentation"
                                  style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px; visibility: hidden;"
                                >
                                  <div
                                    data-test="sentinelStart"
                                    tabindex="0"
                                  />
                                  <div
                                    class="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                    style="opacity: 0; visibility: hidden;"
                                    tabindex="-1"
                                  >
                                    <ul
                                      class="MuiList-root MuiMenu-list MuiList-padding"
                                      role="menu"
                                      tabindex="-1"
                                    >
                                      <li
                                        aria-disabled="false"
                                        class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_edit MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                        role="menuitem"
                                        tabindex="0"
                                      >
                                        Редактировать
                                        <span
                                          class="MuiTouchRipple-root"
                                        />
                                      </li>
                                      <li
                                        aria-disabled="false"
                                        class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_delete MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                        role="menuitem"
                                        tabindex="-1"
                                      >
                                        Удалить
                                        <span
                                          class="MuiTouchRipple-root"
                                        />
                                      </li>
                                    </ul>
                                  </div>
                                  <div
                                    data-test="sentinelEnd"
                                    tabindex="0"
                                  />
                                </div>
                                <div
                                  aria-hidden="true"
                                  class="MuiPopover-root"
                                  id="simple-menu"
                                  role="presentation"
                                  style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                                >
                                  <div
                                    data-test="sentinelStart"
                                    tabindex="0"
                                  />
                                  <div
                                    class="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                    style="opacity: 0; webkit-transition: opacity 195ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 195ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; top: 16px; left: 16px; transform-origin: -16px -16px;"
                                    tabindex="-1"
                                  >
                                    <ul
                                      class="MuiList-root MuiMenu-list MuiList-padding"
                                      role="menu"
                                      tabindex="-1"
                                    >
                                      <li
                                        aria-disabled="false"
                                        class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_edit MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button Mui-focusVisible Mui-focusVisible"
                                        role="menuitem"
                                        tabindex="0"
                                      >
                                        Редактировать
                                        <span
                                          class="MuiTouchRipple-root"
                                        />
                                      </li>
                                      <li
                                        aria-disabled="false"
                                        class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_delete MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                        role="menuitem"
                                        tabindex="-1"
                                      >
                                        Удалить
                                        <span
                                          class="MuiTouchRipple-root"
                                        />
                                      </li>
                                    </ul>
                                  </div>
                                  <div
                                    data-test="sentinelEnd"
                                    tabindex="0"
                                  />
                                </div>
                                <div
                                  aria-hidden="true"
                                  class="MuiPopover-root"
                                  id="simple-menu"
                                  role="presentation"
                                  style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                                >
                                  <div
                                    data-test="sentinelStart"
                                    tabindex="0"
                                  />
                                  <div
                                    class="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                    style="opacity: 0; webkit-transition: opacity 195ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 195ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; top: 16px; left: 16px; transform-origin: -16px -16px;"
                                    tabindex="-1"
                                  >
                                    <ul
                                      class="MuiList-root MuiMenu-list MuiList-padding"
                                      role="menu"
                                      tabindex="-1"
                                    >
                                      <li
                                        aria-disabled="false"
                                        class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_edit MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                        role="menuitem"
                                        tabindex="0"
                                      >
                                        Редактировать
                                        <span
                                          class="MuiTouchRipple-root"
                                        />
                                      </li>
                                      <li
                                        aria-disabled="false"
                                        class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root ListItem_delete MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                        role="menuitem"
                                        tabindex="-1"
                                      >
                                        Удалить
                                        <span
                                          class="MuiTouchRipple-root"
                                        />
                                      </li>
                                    </ul>
                                  </div>
                                  <div
                                    data-test="sentinelEnd"
                                    tabindex="0"
                                  />
                                </div>
                                <div
                                  class="MuiDialog-root"
                                  color="primary"
                                  role="presentation"
                                  style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                                >
                                  <div
                                    aria-hidden="true"
                                    class="MuiBackdrop-root"
                                    style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                                  />
                                  <div
                                    data-test="sentinelStart"
                                    tabindex="0"
                                  />
                                  <div
                                    class="MuiDialog-container MuiDialog-scrollPaper"
                                    role="none presentation"
                                    style="webkit-transform: none; transform: none; webkit-transition: -webkit-transform 225ms cubic-bezier(0.0, 0, 0.2, 1) 0ms; transition: transform 225ms cubic-bezier(0.0, 0, 0.2, 1) 0ms;"
                                    tabindex="-1"
                                  >
                                    <div
                                      aria-describedby="alert-dialog-slide-description"
                                      aria-labelledby="alert-dialog-slide-title"
                                      class="MuiPaper-root MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiPaper-elevation24 MuiPaper-rounded"
                                      role="dialog"
                                    >
                                      <div
                                        class="MuiDialogTitle-root EditToDoListItem__title"
                                        id="alert-dialog-slide-title"
                                      >
                                        <h2
                                          class="MuiTypography-root MuiTypography-h6"
                                        >
                                          Редактирование списка
                                        </h2>
                                      </div>
                                      <div
                                        class="MuiDialogContent-root"
                                      >
                                        <div
                                          class="MuiFormControl-root MuiTextField-root MuiFormControl-marginDense MuiFormControl-fullWidth"
                                        >
                                          <label
                                            class="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-marginDense MuiFormLabel-filled Mui-focused Mui-focused"
                                            data-shrink="true"
                                            for="name"
                                            id="name-label"
                                          >
                                            Название списка
                                          </label>
                                          <div
                                            class="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-fullWidth MuiInput-fullWidth Mui-focused Mui-focused MuiInputBase-formControl MuiInput-formControl MuiInputBase-marginDense MuiInput-marginDense"
                                          >
                                            <input
                                              aria-invalid="false"
                                              autocomplete="off"
                                              class="MuiInputBase-input MuiInput-input MuiInputBase-inputMarginDense MuiInput-inputMarginDense"
                                              id="name"
                                              maxlength="40"
                                              type="text"
                                              value="updatedList"
                                            />
                                          </div>
                                        </div>
                                      </div>
                                      <div
                                        class="MuiDialogActions-root MuiDialogActions-spacing"
                                      >
                                        <button
                                          class="MuiButtonBase-root MuiButton-root MuiButton-contained"
                                          tabindex="0"
                                          type="button"
                                        >
                                          <span
                                            class="MuiButton-label"
                                          >
                                            Отменить
                                          </span>
                                          <span
                                            class="MuiTouchRipple-root"
                                          />
                                        </button>
                                        <button
                                          class="MuiButtonBase-root MuiButton-root MuiButton-contained saveButton MuiButton-containedPrimary"
                                          tabindex="0"
                                          type="button"
                                        >
                                          <span
                                            class="MuiButton-label"
                                          >
                                            <span
                                              class="MuiButton-startIcon MuiButton-iconSizeMedium"
                                            >
                                              <svg
                                                aria-hidden="true"
                                                class="MuiSvgIcon-root"
                                                focusable="false"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z"
                                                />
                                              </svg>
                                            </span>
                                            Сохранить
                                          </span>
                                          <span
                                            class="MuiTouchRipple-root"
                                          />
                                        </button>
                                      </div>
                                    </div>
                                  </div>
                                  <div
                                    data-test="sentinelEnd"
                                    tabindex="0"
                                  />
                                </div>
                              </body>
                            }
                          >
                            <div
                              className="MuiDialog-root"
                              color="primary"
                              onKeyDown={[Function]}
                              role="presentation"
                              style={
                                Object {
                                  "bottom": 0,
                                  "left": 0,
                                  "position": "fixed",
                                  "right": 0,
                                  "top": 0,
                                  "zIndex": 1300,
                                }
                              }
                            >
                              <WithStyles(ForwardRef(Backdrop))
                                onClick={[Function]}
                                open={true}
                                transitionDuration={
                                  Object {
                                    "enter": 225,
                                    "exit": 195,
                                  }
                                }
                              >
                                <ForwardRef(Backdrop)
                                  classes={
                                    Object {
                                      "invisible": "MuiBackdrop-invisible",
                                      "root": "MuiBackdrop-root",
                                    }
                                  }
                                  onClick={[Function]}
                                  open={true}
                                  transitionDuration={
                                    Object {
                                      "enter": 225,
                                      "exit": 195,
                                    }
                                  }
                                >
                                  <ForwardRef(Fade)
                                    in={true}
                                    onClick={[Function]}
                                    timeout={
                                      Object {
                                        "enter": 225,
                                        "exit": 195,
                                      }
                                    }
                                  >
                                    <Transition
                                      appear={true}
                                      enter={true}
                                      exit={true}
                                      in={true}
                                      mountOnEnter={false}
                                      onClick={[Function]}
                                      onEnter={[Function]}
                                      onEntered={[Function]}
                                      onEntering={[Function]}
                                      onExit={[Function]}
                                      onExited={[Function]}
                                      onExiting={[Function]}
                                      timeout={
                                        Object {
                                          "enter": 225,
                                          "exit": 195,
                                        }
                                      }
                                      unmountOnExit={false}
                                    >
                                      <div
                                        aria-hidden={true}
                                        className="MuiBackdrop-root"
                                        onClick={[Function]}
                                        style={
                                          Object {
                                            "opacity": 1,
                                            "visibility": undefined,
                                          }
                                        }
                                      />
                                    </Transition>
                                  </ForwardRef(Fade)>
                                </ForwardRef(Backdrop)>
                              </WithStyles(ForwardRef(Backdrop))>
                              <Unstable_TrapFocus
                                disableAutoFocus={false}
                                disableEnforceFocus={false}
                                disableRestoreFocus={false}
                                getDoc={[Function]}
                                isEnabled={[Function]}
                                open={true}
                              >
                                <div
                                  data-test="sentinelStart"
                                  tabIndex={0}
                                />
                                <ForwardRef
                                  appear={true}
                                  in={true}
                                  onEnter={[Function]}
                                  onExited={[Function]}
                                  role="none presentation"
                                  tabIndex="-1"
                                  timeout={
                                    Object {
                                      "enter": 225,
                                      "exit": 195,
                                    }
                                  }
                                >
                                  <ForwardRef(Slide)
                                    appear={true}
                                    direction="up"
                                    in={true}
                                    onEnter={[Function]}
                                    onExited={[Function]}
                                    role="none presentation"
                                    tabIndex="-1"
                                    timeout={
                                      Object {
                                        "enter": 225,
                                        "exit": 195,
                                      }
                                    }
                                  >
                                    <Transition
                                      appear={true}
                                      enter={true}
                                      exit={true}
                                      in={true}
                                      mountOnEnter={false}
                                      nodeRef={
                                        Object {
                                          "current": <div
                                            class="MuiDialog-container MuiDialog-scrollPaper"
                                            role="none presentation"
                                            style="webkit-transform: none; transform: none; webkit-transition: -webkit-transform 225ms cubic-bezier(0.0, 0, 0.2, 1) 0ms; transition: transform 225ms cubic-bezier(0.0, 0, 0.2, 1) 0ms;"
                                            tabindex="-1"
                                          >
                                            <div
                                              aria-describedby="alert-dialog-slide-description"
                                              aria-labelledby="alert-dialog-slide-title"
                                              class="MuiPaper-root MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiPaper-elevation24 MuiPaper-rounded"
                                              role="dialog"
                                            >
                                              <div
                                                class="MuiDialogTitle-root EditToDoListItem__title"
                                                id="alert-dialog-slide-title"
                                              >
                                                <h2
                                                  class="MuiTypography-root MuiTypography-h6"
                                                >
                                                  Редактирование списка
                                                </h2>
                                              </div>
                                              <div
                                                class="MuiDialogContent-root"
                                              >
                                                <div
                                                  class="MuiFormControl-root MuiTextField-root MuiFormControl-marginDense MuiFormControl-fullWidth"
                                                >
                                                  <label
                                                    class="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-marginDense MuiFormLabel-filled Mui-focused Mui-focused"
                                                    data-shrink="true"
                                                    for="name"
                                                    id="name-label"
                                                  >
                                                    Название списка
                                                  </label>
                                                  <div
                                                    class="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-fullWidth MuiInput-fullWidth Mui-focused Mui-focused MuiInputBase-formControl MuiInput-formControl MuiInputBase-marginDense MuiInput-marginDense"
                                                  >
                                                    <input
                                                      aria-invalid="false"
                                                      autocomplete="off"
                                                      class="MuiInputBase-input MuiInput-input MuiInputBase-inputMarginDense MuiInput-inputMarginDense"
                                                      id="name"
                                                      maxlength="40"
                                                      type="text"
                                                      value="updatedList"
                                                    />
                                                  </div>
                                                </div>
                                              </div>
                                              <div
                                                class="MuiDialogActions-root MuiDialogActions-spacing"
                                              >
                                                <button
                                                  class="MuiButtonBase-root MuiButton-root MuiButton-contained"
                                                  tabindex="0"
                                                  type="button"
                                                >
                                                  <span
                                                    class="MuiButton-label"
                                                  >
                                                    Отменить
                                                  </span>
                                                  <span
                                                    class="MuiTouchRipple-root"
                                                  />
                                                </button>
                                                <button
                                                  class="MuiButtonBase-root MuiButton-root MuiButton-contained saveButton MuiButton-containedPrimary"
                                                  tabindex="0"
                                                  type="button"
                                                >
                                                  <span
                                                    class="MuiButton-label"
                                                  >
                                                    <span
                                                      class="MuiButton-startIcon MuiButton-iconSizeMedium"
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        class="MuiSvgIcon-root"
                                                        focusable="false"
                                                        viewBox="0 0 24 24"
                                                      >
                                                        <path
                                                          d="M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z"
                                                        />
                                                      </svg>
                                                    </span>
                                                    Сохранить
                                                  </span>
                                                  <span
                                                    class="MuiTouchRipple-root"
                                                  />
                                                </button>
                                              </div>
                                            </div>
                                          </div>,
                                        }
                                      }
                                      onEnter={[Function]}
                                      onEntered={[Function]}
                                      onEntering={[Function]}
                                      onExit={[Function]}
                                      onExited={[Function]}
                                      onExiting={[Function]}
                                      role="none presentation"
                                      tabIndex="-1"
                                      timeout={
                                        Object {
                                          "enter": 225,
                                          "exit": 195,
                                        }
                                      }
                                      unmountOnExit={false}
                                    >
                                      <div
                                        className="MuiDialog-container MuiDialog-scrollPaper"
                                        onMouseDown={[Function]}
                                        onMouseUp={[Function]}
                                        role="none presentation"
                                        style={
                                          Object {
                                            "visibility": undefined,
                                          }
                                        }
                                        tabIndex="-1"
                                      >
                                        <WithStyles(ForwardRef(Paper))
                                          aria-describedby="alert-dialog-slide-description"
                                          aria-labelledby="alert-dialog-slide-title"
                                          className="MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm"
                                          elevation={24}
                                          role="dialog"
                                        >
                                          <ForwardRef(Paper)
                                            aria-describedby="alert-dialog-slide-description"
                                            aria-labelledby="alert-dialog-slide-title"
                                            className="MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm"
                                            classes={
                                              Object {
                                                "elevation0": "MuiPaper-elevation0",
                                                "elevation1": "MuiPaper-elevation1",
                                                "elevation10": "MuiPaper-elevation10",
                                                "elevation11": "MuiPaper-elevation11",
                                                "elevation12": "MuiPaper-elevation12",
                                                "elevation13": "MuiPaper-elevation13",
                                                "elevation14": "MuiPaper-elevation14",
                                                "elevation15": "MuiPaper-elevation15",
                                                "elevation16": "MuiPaper-elevation16",
                                                "elevation17": "MuiPaper-elevation17",
                                                "elevation18": "MuiPaper-elevation18",
                                                "elevation19": "MuiPaper-elevation19",
                                                "elevation2": "MuiPaper-elevation2",
                                                "elevation20": "MuiPaper-elevation20",
                                                "elevation21": "MuiPaper-elevation21",
                                                "elevation22": "MuiPaper-elevation22",
                                                "elevation23": "MuiPaper-elevation23",
                                                "elevation24": "MuiPaper-elevation24",
                                                "elevation3": "MuiPaper-elevation3",
                                                "elevation4": "MuiPaper-elevation4",
                                                "elevation5": "MuiPaper-elevation5",
                                                "elevation6": "MuiPaper-elevation6",
                                                "elevation7": "MuiPaper-elevation7",
                                                "elevation8": "MuiPaper-elevation8",
                                                "elevation9": "MuiPaper-elevation9",
                                                "outlined": "MuiPaper-outlined",
                                                "root": "MuiPaper-root",
                                                "rounded": "MuiPaper-rounded",
                                              }
                                            }
                                            elevation={24}
                                            role="dialog"
                                          >
                                            <div
                                              aria-describedby="alert-dialog-slide-description"
                                              aria-labelledby="alert-dialog-slide-title"
                                              className="MuiPaper-root MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiPaper-elevation24 MuiPaper-rounded"
                                              role="dialog"
                                            >
                                              <WithStyles(ForwardRef(DialogTitle))
                                                className="EditToDoListItem__title"
                                                id="alert-dialog-slide-title"
                                              >
                                                <ForwardRef(DialogTitle)
                                                  className="EditToDoListItem__title"
                                                  classes={
                                                    Object {
                                                      "root": "MuiDialogTitle-root",
                                                    }
                                                  }
                                                  id="alert-dialog-slide-title"
                                                >
                                                  <div
                                                    className="MuiDialogTitle-root EditToDoListItem__title"
                                                    id="alert-dialog-slide-title"
                                                  >
                                                    <WithStyles(ForwardRef(Typography))
                                                      component="h2"
                                                      variant="h6"
                                                    >
                                                      <ForwardRef(Typography)
                                                        classes={
                                                          Object {
                                                            "alignCenter": "MuiTypography-alignCenter",
                                                            "alignJustify": "MuiTypography-alignJustify",
                                                            "alignLeft": "MuiTypography-alignLeft",
                                                            "alignRight": "MuiTypography-alignRight",
                                                            "body1": "MuiTypography-body1",
                                                            "body2": "MuiTypography-body2",
                                                            "button": "MuiTypography-button",
                                                            "caption": "MuiTypography-caption",
                                                            "colorError": "MuiTypography-colorError",
                                                            "colorInherit": "MuiTypography-colorInherit",
                                                            "colorPrimary": "MuiTypography-colorPrimary",
                                                            "colorSecondary": "MuiTypography-colorSecondary",
                                                            "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                            "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                            "displayBlock": "MuiTypography-displayBlock",
                                                            "displayInline": "MuiTypography-displayInline",
                                                            "gutterBottom": "MuiTypography-gutterBottom",
                                                            "h1": "MuiTypography-h1",
                                                            "h2": "MuiTypography-h2",
                                                            "h3": "MuiTypography-h3",
                                                            "h4": "MuiTypography-h4",
                                                            "h5": "MuiTypography-h5",
                                                            "h6": "MuiTypography-h6",
                                                            "noWrap": "MuiTypography-noWrap",
                                                            "overline": "MuiTypography-overline",
                                                            "paragraph": "MuiTypography-paragraph",
                                                            "root": "MuiTypography-root",
                                                            "srOnly": "MuiTypography-srOnly",
                                                            "subtitle1": "MuiTypography-subtitle1",
                                                            "subtitle2": "MuiTypography-subtitle2",
                                                          }
                                                        }
                                                        component="h2"
                                                        variant="h6"
                                                      >
                                                        <h2
                                                          className="MuiTypography-root MuiTypography-h6"
                                                        >
                                                          Редактирование списка
                                                        </h2>
                                                      </ForwardRef(Typography)>
                                                    </WithStyles(ForwardRef(Typography))>
                                                  </div>
                                                </ForwardRef(DialogTitle)>
                                              </WithStyles(ForwardRef(DialogTitle))>
                                              <WithStyles(ForwardRef(DialogContent))>
                                                <ForwardRef(DialogContent)
                                                  classes={
                                                    Object {
                                                      "dividers": "MuiDialogContent-dividers",
                                                      "root": "MuiDialogContent-root",
                                                    }
                                                  }
                                                >
                                                  <div
                                                    className="MuiDialogContent-root"
                                                  >
                                                    <WithStyles(ForwardRef(TextField))
                                                      autoComplete="off"
                                                      autoFocus={true}
                                                      color="primary"
                                                      fullWidth={true}
                                                      id="name"
                                                      inputProps={
                                                        Object {
                                                          "maxLength": "40",
                                                        }
                                                      }
                                                      label="Название списка"
                                                      margin="dense"
                                                      onChange={[Function]}
                                                      onKeyPress={[Function]}
                                                      type="text"
                                                      value="updatedList"
                                                    >
                                                      <ForwardRef(TextField)
                                                        autoComplete="off"
                                                        autoFocus={true}
                                                        classes={
                                                          Object {
                                                            "root": "MuiTextField-root",
                                                          }
                                                        }
                                                        color="primary"
                                                        fullWidth={true}
                                                        id="name"
                                                        inputProps={
                                                          Object {
                                                            "maxLength": "40",
                                                          }
                                                        }
                                                        label="Название списка"
                                                        margin="dense"
                                                        onChange={[Function]}
                                                        onKeyPress={[Function]}
                                                        type="text"
                                                        value="updatedList"
                                                      >
                                                        <WithStyles(ForwardRef(FormControl))
                                                          className="MuiTextField-root"
                                                          color="primary"
                                                          disabled={false}
                                                          error={false}
                                                          fullWidth={true}
                                                          margin="dense"
                                                          onKeyPress={[Function]}
                                                          required={false}
                                                          variant="standard"
                                                        >
                                                          <ForwardRef(FormControl)
                                                            className="MuiTextField-root"
                                                            classes={
                                                              Object {
                                                                "fullWidth": "MuiFormControl-fullWidth",
                                                                "marginDense": "MuiFormControl-marginDense",
                                                                "marginNormal": "MuiFormControl-marginNormal",
                                                                "root": "MuiFormControl-root",
                                                              }
                                                            }
                                                            color="primary"
                                                            disabled={false}
                                                            error={false}
                                                            fullWidth={true}
                                                            margin="dense"
                                                            onKeyPress={[Function]}
                                                            required={false}
                                                            variant="standard"
                                                          >
                                                            <div
                                                              className="MuiFormControl-root MuiTextField-root MuiFormControl-marginDense MuiFormControl-fullWidth"
                                                              onKeyPress={[Function]}
                                                            >
                                                              <WithStyles(ForwardRef(InputLabel))
                                                                htmlFor="name"
                                                                id="name-label"
                                                              >
                                                                <ForwardRef(InputLabel)
                                                                  classes={
                                                                    Object {
                                                                      "animated": "MuiInputLabel-animated",
                                                                      "asterisk": "MuiInputLabel-asterisk",
                                                                      "disabled": "Mui-disabled",
                                                                      "error": "Mui-error",
                                                                      "filled": "MuiInputLabel-filled",
                                                                      "focused": "Mui-focused",
                                                                      "formControl": "MuiInputLabel-formControl",
                                                                      "marginDense": "MuiInputLabel-marginDense",
                                                                      "outlined": "MuiInputLabel-outlined",
                                                                      "required": "Mui-required",
                                                                      "root": "MuiInputLabel-root",
                                                                      "shrink": "MuiInputLabel-shrink",
                                                                    }
                                                                  }
                                                                  htmlFor="name"
                                                                  id="name-label"
                                                                >
                                                                  <WithStyles(ForwardRef(FormLabel))
                                                                    className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-marginDense"
                                                                    classes={
                                                                      Object {
                                                                        "asterisk": "MuiInputLabel-asterisk",
                                                                        "disabled": "Mui-disabled",
                                                                        "error": "Mui-error",
                                                                        "focused": "Mui-focused",
                                                                        "required": "Mui-required",
                                                                      }
                                                                    }
                                                                    data-shrink={true}
                                                                    htmlFor="name"
                                                                    id="name-label"
                                                                  >
                                                                    <ForwardRef(FormLabel)
                                                                      className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-marginDense"
                                                                      classes={
                                                                        Object {
                                                                          "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                                                          "colorSecondary": "MuiFormLabel-colorSecondary",
                                                                          "disabled": "Mui-disabled Mui-disabled",
                                                                          "error": "Mui-error Mui-error",
                                                                          "filled": "MuiFormLabel-filled",
                                                                          "focused": "Mui-focused Mui-focused",
                                                                          "required": "Mui-required Mui-required",
                                                                          "root": "MuiFormLabel-root",
                                                                        }
                                                                      }
                                                                      data-shrink={true}
                                                                      htmlFor="name"
                                                                      id="name-label"
                                                                    >
                                                                      <label
                                                                        className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-marginDense MuiFormLabel-filled Mui-focused Mui-focused"
                                                                        data-shrink={true}
                                                                        htmlFor="name"
                                                                        id="name-label"
                                                                      >
                                                                        Название списка
                                                                      </label>
                                                                    </ForwardRef(FormLabel)>
                                                                  </WithStyles(ForwardRef(FormLabel))>
                                                                </ForwardRef(InputLabel)>
                                                              </WithStyles(ForwardRef(InputLabel))>
                                                              <WithStyles(ForwardRef(Input))
                                                                autoComplete="off"
                                                                autoFocus={true}
                                                                fullWidth={true}
                                                                id="name"
                                                                inputProps={
                                                                  Object {
                                                                    "maxLength": "40",
                                                                  }
                                                                }
                                                                multiline={false}
                                                                onChange={[Function]}
                                                                type="text"
                                                                value="updatedList"
                                                              >
                                                                <ForwardRef(Input)
                                                                  autoComplete="off"
                                                                  autoFocus={true}
                                                                  classes={
                                                                    Object {
                                                                      "colorSecondary": "MuiInput-colorSecondary",
                                                                      "disabled": "Mui-disabled",
                                                                      "error": "Mui-error",
                                                                      "focused": "Mui-focused",
                                                                      "formControl": "MuiInput-formControl",
                                                                      "fullWidth": "MuiInput-fullWidth",
                                                                      "input": "MuiInput-input",
                                                                      "inputMarginDense": "MuiInput-inputMarginDense",
                                                                      "inputMultiline": "MuiInput-inputMultiline",
                                                                      "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                                      "marginDense": "MuiInput-marginDense",
                                                                      "multiline": "MuiInput-multiline",
                                                                      "root": "MuiInput-root",
                                                                      "underline": "MuiInput-underline",
                                                                    }
                                                                  }
                                                                  fullWidth={true}
                                                                  id="name"
                                                                  inputProps={
                                                                    Object {
                                                                      "maxLength": "40",
                                                                    }
                                                                  }
                                                                  multiline={false}
                                                                  onChange={[Function]}
                                                                  type="text"
                                                                  value="updatedList"
                                                                >
                                                                  <WithStyles(ForwardRef(InputBase))
                                                                    autoComplete="off"
                                                                    autoFocus={true}
                                                                    classes={
                                                                      Object {
                                                                        "colorSecondary": "MuiInput-colorSecondary",
                                                                        "disabled": "Mui-disabled",
                                                                        "error": "Mui-error",
                                                                        "focused": "Mui-focused",
                                                                        "formControl": "MuiInput-formControl",
                                                                        "fullWidth": "MuiInput-fullWidth",
                                                                        "input": "MuiInput-input",
                                                                        "inputMarginDense": "MuiInput-inputMarginDense",
                                                                        "inputMultiline": "MuiInput-inputMultiline",
                                                                        "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                                        "marginDense": "MuiInput-marginDense",
                                                                        "multiline": "MuiInput-multiline",
                                                                        "root": "MuiInput-root MuiInput-underline",
                                                                        "underline": null,
                                                                      }
                                                                    }
                                                                    fullWidth={true}
                                                                    id="name"
                                                                    inputComponent="input"
                                                                    inputProps={
                                                                      Object {
                                                                        "maxLength": "40",
                                                                      }
                                                                    }
                                                                    multiline={false}
                                                                    onChange={[Function]}
                                                                    type="text"
                                                                    value="updatedList"
                                                                  >
                                                                    <ForwardRef(InputBase)
                                                                      autoComplete="off"
                                                                      autoFocus={true}
                                                                      classes={
                                                                        Object {
                                                                          "adornedEnd": "MuiInputBase-adornedEnd",
                                                                          "adornedStart": "MuiInputBase-adornedStart",
                                                                          "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                                          "disabled": "Mui-disabled Mui-disabled",
                                                                          "error": "Mui-error Mui-error",
                                                                          "focused": "Mui-focused Mui-focused",
                                                                          "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                                          "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                                          "input": "MuiInputBase-input MuiInput-input",
                                                                          "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                                          "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                                          "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                                          "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                                          "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                                          "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                                          "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                                          "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                                          "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                                        }
                                                                      }
                                                                      fullWidth={true}
                                                                      id="name"
                                                                      inputComponent="input"
                                                                      inputProps={
                                                                        Object {
                                                                          "maxLength": "40",
                                                                        }
                                                                      }
                                                                      multiline={false}
                                                                      onChange={[Function]}
                                                                      type="text"
                                                                      value="updatedList"
                                                                    >
                                                                      <div
                                                                        className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-fullWidth MuiInput-fullWidth Mui-focused Mui-focused MuiInputBase-formControl MuiInput-formControl MuiInputBase-marginDense MuiInput-marginDense"
                                                                        onClick={[Function]}
                                                                      >
                                                                        <input
                                                                          aria-invalid={false}
                                                                          autoComplete="off"
                                                                          autoFocus={true}
                                                                          className="MuiInputBase-input MuiInput-input MuiInputBase-inputMarginDense MuiInput-inputMarginDense"
                                                                          disabled={false}
                                                                          id="name"
                                                                          maxLength="40"
                                                                          onAnimationStart={[Function]}
                                                                          onBlur={[Function]}
                                                                          onChange={[Function]}
                                                                          onFocus={[Function]}
                                                                          required={false}
                                                                          type="text"
                                                                          value="updatedList"
                                                                        />
                                                                      </div>
                                                                    </ForwardRef(InputBase)>
                                                                  </WithStyles(ForwardRef(InputBase))>
                                                                </ForwardRef(Input)>
                                                              </WithStyles(ForwardRef(Input))>
                                                            </div>
                                                          </ForwardRef(FormControl)>
                                                        </WithStyles(ForwardRef(FormControl))>
                                                      </ForwardRef(TextField)>
                                                    </WithStyles(ForwardRef(TextField))>
                                                  </div>
                                                </ForwardRef(DialogContent)>
                                              </WithStyles(ForwardRef(DialogContent))>
                                              <WithStyles(ForwardRef(DialogActions))>
                                                <ForwardRef(DialogActions)
                                                  classes={
                                                    Object {
                                                      "root": "MuiDialogActions-root",
                                                      "spacing": "MuiDialogActions-spacing",
                                                    }
                                                  }
                                                >
                                                  <div
                                                    className="MuiDialogActions-root MuiDialogActions-spacing"
                                                  >
                                                    <WithStyles(ForwardRef(Button))
                                                      onClick={[Function]}
                                                      size="medium"
                                                      variant="contained"
                                                    >
                                                      <ForwardRef(Button)
                                                        classes={
                                                          Object {
                                                            "colorInherit": "MuiButton-colorInherit",
                                                            "contained": "MuiButton-contained",
                                                            "containedPrimary": "MuiButton-containedPrimary",
                                                            "containedSecondary": "MuiButton-containedSecondary",
                                                            "containedSizeLarge": "MuiButton-containedSizeLarge",
                                                            "containedSizeSmall": "MuiButton-containedSizeSmall",
                                                            "disableElevation": "MuiButton-disableElevation",
                                                            "disabled": "Mui-disabled",
                                                            "endIcon": "MuiButton-endIcon",
                                                            "focusVisible": "Mui-focusVisible",
                                                            "fullWidth": "MuiButton-fullWidth",
                                                            "iconSizeLarge": "MuiButton-iconSizeLarge",
                                                            "iconSizeMedium": "MuiButton-iconSizeMedium",
                                                            "iconSizeSmall": "MuiButton-iconSizeSmall",
                                                            "label": "MuiButton-label",
                                                            "outlined": "MuiButton-outlined",
                                                            "outlinedPrimary": "MuiButton-outlinedPrimary",
                                                            "outlinedSecondary": "MuiButton-outlinedSecondary",
                                                            "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                                            "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                                            "root": "MuiButton-root",
                                                            "sizeLarge": "MuiButton-sizeLarge",
                                                            "sizeSmall": "MuiButton-sizeSmall",
                                                            "startIcon": "MuiButton-startIcon",
                                                            "text": "MuiButton-text",
                                                            "textPrimary": "MuiButton-textPrimary",
                                                            "textSecondary": "MuiButton-textSecondary",
                                                            "textSizeLarge": "MuiButton-textSizeLarge",
                                                            "textSizeSmall": "MuiButton-textSizeSmall",
                                                          }
                                                        }
                                                        onClick={[Function]}
                                                        size="medium"
                                                        variant="contained"
                                                      >
                                                        <WithStyles(ForwardRef(ButtonBase))
                                                          className="MuiButton-root MuiButton-contained"
                                                          component="button"
                                                          disabled={false}
                                                          focusRipple={true}
                                                          focusVisibleClassName="Mui-focusVisible"
                                                          onClick={[Function]}
                                                          type="button"
                                                        >
                                                          <ForwardRef(ButtonBase)
                                                            className="MuiButton-root MuiButton-contained"
                                                            classes={
                                                              Object {
                                                                "disabled": "Mui-disabled",
                                                                "focusVisible": "Mui-focusVisible",
                                                                "root": "MuiButtonBase-root",
                                                              }
                                                            }
                                                            component="button"
                                                            disabled={false}
                                                            focusRipple={true}
                                                            focusVisibleClassName="Mui-focusVisible"
                                                            onClick={[Function]}
                                                            type="button"
                                                          >
                                                            <button
                                                              className="MuiButtonBase-root MuiButton-root MuiButton-contained"
                                                              disabled={false}
                                                              onBlur={[Function]}
                                                              onClick={[Function]}
                                                              onDragLeave={[Function]}
                                                              onFocus={[Function]}
                                                              onKeyDown={[Function]}
                                                              onKeyUp={[Function]}
                                                              onMouseDown={[Function]}
                                                              onMouseLeave={[Function]}
                                                              onMouseUp={[Function]}
                                                              onTouchEnd={[Function]}
                                                              onTouchMove={[Function]}
                                                              onTouchStart={[Function]}
                                                              tabIndex={0}
                                                              type="button"
                                                            >
                                                              <span
                                                                className="MuiButton-label"
                                                              >
                                                                Отменить
                                                              </span>
                                                              <WithStyles(memo)
                                                                center={false}
                                                              >
                                                                <ForwardRef(TouchRipple)
                                                                  center={false}
                                                                  classes={
                                                                    Object {
                                                                      "child": "MuiTouchRipple-child",
                                                                      "childLeaving": "MuiTouchRipple-childLeaving",
                                                                      "childPulsate": "MuiTouchRipple-childPulsate",
                                                                      "ripple": "MuiTouchRipple-ripple",
                                                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                      "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                      "root": "MuiTouchRipple-root",
                                                                    }
                                                                  }
                                                                >
                                                                  <span
                                                                    className="MuiTouchRipple-root"
                                                                  >
                                                                    <TransitionGroup
                                                                      childFactory={[Function]}
                                                                      component={null}
                                                                      exit={true}
                                                                    />
                                                                  </span>
                                                                </ForwardRef(TouchRipple)>
                                                              </WithStyles(memo)>
                                                            </button>
                                                          </ForwardRef(ButtonBase)>
                                                        </WithStyles(ForwardRef(ButtonBase))>
                                                      </ForwardRef(Button)>
                                                    </WithStyles(ForwardRef(Button))>
                                                    <WithStyles(ForwardRef(Button))
                                                      className="saveButton"
                                                      color="primary"
                                                      disabled={false}
                                                      onClick={[Function]}
                                                      size="medium"
                                                      startIcon={<Memo />}
                                                      variant="contained"
                                                    >
                                                      <ForwardRef(Button)
                                                        className="saveButton"
                                                        classes={
                                                          Object {
                                                            "colorInherit": "MuiButton-colorInherit",
                                                            "contained": "MuiButton-contained",
                                                            "containedPrimary": "MuiButton-containedPrimary",
                                                            "containedSecondary": "MuiButton-containedSecondary",
                                                            "containedSizeLarge": "MuiButton-containedSizeLarge",
                                                            "containedSizeSmall": "MuiButton-containedSizeSmall",
                                                            "disableElevation": "MuiButton-disableElevation",
                                                            "disabled": "Mui-disabled",
                                                            "endIcon": "MuiButton-endIcon",
                                                            "focusVisible": "Mui-focusVisible",
                                                            "fullWidth": "MuiButton-fullWidth",
                                                            "iconSizeLarge": "MuiButton-iconSizeLarge",
                                                            "iconSizeMedium": "MuiButton-iconSizeMedium",
                                                            "iconSizeSmall": "MuiButton-iconSizeSmall",
                                                            "label": "MuiButton-label",
                                                            "outlined": "MuiButton-outlined",
                                                            "outlinedPrimary": "MuiButton-outlinedPrimary",
                                                            "outlinedSecondary": "MuiButton-outlinedSecondary",
                                                            "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                                            "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                                            "root": "MuiButton-root",
                                                            "sizeLarge": "MuiButton-sizeLarge",
                                                            "sizeSmall": "MuiButton-sizeSmall",
                                                            "startIcon": "MuiButton-startIcon",
                                                            "text": "MuiButton-text",
                                                            "textPrimary": "MuiButton-textPrimary",
                                                            "textSecondary": "MuiButton-textSecondary",
                                                            "textSizeLarge": "MuiButton-textSizeLarge",
                                                            "textSizeSmall": "MuiButton-textSizeSmall",
                                                          }
                                                        }
                                                        color="primary"
                                                        disabled={false}
                                                        onClick={[Function]}
                                                        size="medium"
                                                        startIcon={<Memo />}
                                                        variant="contained"
                                                      >
                                                        <WithStyles(ForwardRef(ButtonBase))
                                                          className="MuiButton-root MuiButton-contained saveButton MuiButton-containedPrimary"
                                                          component="button"
                                                          disabled={false}
                                                          focusRipple={true}
                                                          focusVisibleClassName="Mui-focusVisible"
                                                          onClick={[Function]}
                                                          type="button"
                                                        >
                                                          <ForwardRef(ButtonBase)
                                                            className="MuiButton-root MuiButton-contained saveButton MuiButton-containedPrimary"
                                                            classes={
                                                              Object {
                                                                "disabled": "Mui-disabled",
                                                                "focusVisible": "Mui-focusVisible",
                                                                "root": "MuiButtonBase-root",
                                                              }
                                                            }
                                                            component="button"
                                                            disabled={false}
                                                            focusRipple={true}
                                                            focusVisibleClassName="Mui-focusVisible"
                                                            onClick={[Function]}
                                                            type="button"
                                                          >
                                                            <button
                                                              className="MuiButtonBase-root MuiButton-root MuiButton-contained saveButton MuiButton-containedPrimary"
                                                              disabled={false}
                                                              onBlur={[Function]}
                                                              onClick={[Function]}
                                                              onDragLeave={[Function]}
                                                              onFocus={[Function]}
                                                              onKeyDown={[Function]}
                                                              onKeyUp={[Function]}
                                                              onMouseDown={[Function]}
                                                              onMouseLeave={[Function]}
                                                              onMouseUp={[Function]}
                                                              onTouchEnd={[Function]}
                                                              onTouchMove={[Function]}
                                                              onTouchStart={[Function]}
                                                              tabIndex={0}
                                                              type="button"
                                                            >
                                                              <span
                                                                className="MuiButton-label"
                                                              >
                                                                <span
                                                                  className="MuiButton-startIcon MuiButton-iconSizeMedium"
                                                                >
                                                                  <ForwardRef(SaveIcon)>
                                                                    <WithStyles(ForwardRef(SvgIcon))>
                                                                      <ForwardRef(SvgIcon)
                                                                        classes={
                                                                          Object {
                                                                            "colorAction": "MuiSvgIcon-colorAction",
                                                                            "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                            "colorError": "MuiSvgIcon-colorError",
                                                                            "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                            "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                            "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                            "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                            "root": "MuiSvgIcon-root",
                                                                          }
                                                                        }
                                                                      >
                                                                        <svg
                                                                          aria-hidden={true}
                                                                          className="MuiSvgIcon-root"
                                                                          focusable="false"
                                                                          viewBox="0 0 24 24"
                                                                        >
                                                                          <path
                                                                            d="M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z"
                                                                          />
                                                                        </svg>
                                                                      </ForwardRef(SvgIcon)>
                                                                    </WithStyles(ForwardRef(SvgIcon))>
                                                                  </ForwardRef(SaveIcon)>
                                                                </span>
                                                                Сохранить
                                                              </span>
                                                              <WithStyles(memo)
                                                                center={false}
                                                              >
                                                                <ForwardRef(TouchRipple)
                                                                  center={false}
                                                                  classes={
                                                                    Object {
                                                                      "child": "MuiTouchRipple-child",
                                                                      "childLeaving": "MuiTouchRipple-childLeaving",
                                                                      "childPulsate": "MuiTouchRipple-childPulsate",
                                                                      "ripple": "MuiTouchRipple-ripple",
                                                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                      "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                      "root": "MuiTouchRipple-root",
                                                                    }
                                                                  }
                                                                >
                                                                  <span
                                                                    className="MuiTouchRipple-root"
                                                                  >
                                                                    <TransitionGroup
                                                                      childFactory={[Function]}
                                                                      component={null}
                                                                      exit={true}
                                                                    />
                                                                  </span>
                                                                </ForwardRef(TouchRipple)>
                                                              </WithStyles(memo)>
                                                            </button>
                                                          </ForwardRef(ButtonBase)>
                                                        </WithStyles(ForwardRef(ButtonBase))>
                                                      </ForwardRef(Button)>
                                                    </WithStyles(ForwardRef(Button))>
                                                  </div>
                                                </ForwardRef(DialogActions)>
                                              </WithStyles(ForwardRef(DialogActions))>
                                            </div>
                                          </ForwardRef(Paper)>
                                        </WithStyles(ForwardRef(Paper))>
                                      </div>
                                    </Transition>
                                  </ForwardRef(Slide)>
                                </ForwardRef>
                                <div
                                  data-test="sentinelEnd"
                                  tabIndex={0}
                                />
                              </Unstable_TrapFocus>
                            </div>
                          </Portal>
                        </ForwardRef(Portal)>
                      </ForwardRef(Modal)>
                    </ForwardRef(Dialog)>
                  </WithStyles(ForwardRef(Dialog))>
                </Memo(EditForm)>
              </div>
            </Memo(List)>
          </Connect(Component)>
        </div>
        <div
          className="lists__addListButton"
          onClick={[Function]}
        >
          <WithStyles(ForwardRef(IconButton))
            aria-label="add List"
            color="inherit"
          >
            <ForwardRef(IconButton)
              aria-label="add List"
              classes={
                Object {
                  "colorInherit": "MuiIconButton-colorInherit",
                  "colorPrimary": "MuiIconButton-colorPrimary",
                  "colorSecondary": "MuiIconButton-colorSecondary",
                  "disabled": "Mui-disabled",
                  "edgeEnd": "MuiIconButton-edgeEnd",
                  "edgeStart": "MuiIconButton-edgeStart",
                  "label": "MuiIconButton-label",
                  "root": "MuiIconButton-root",
                  "sizeSmall": "MuiIconButton-sizeSmall",
                }
              }
              color="inherit"
            >
              <WithStyles(ForwardRef(ButtonBase))
                aria-label="add List"
                centerRipple={true}
                className="MuiIconButton-root MuiIconButton-colorInherit"
                disabled={false}
                focusRipple={true}
              >
                <ForwardRef(ButtonBase)
                  aria-label="add List"
                  centerRipple={true}
                  className="MuiIconButton-root MuiIconButton-colorInherit"
                  classes={
                    Object {
                      "disabled": "Mui-disabled",
                      "focusVisible": "Mui-focusVisible",
                      "root": "MuiButtonBase-root",
                    }
                  }
                  disabled={false}
                  focusRipple={true}
                >
                  <button
                    aria-label="add List"
                    className="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit"
                    disabled={false}
                    onBlur={[Function]}
                    onDragLeave={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    onKeyUp={[Function]}
                    onMouseDown={[Function]}
                    onMouseLeave={[Function]}
                    onMouseUp={[Function]}
                    onTouchEnd={[Function]}
                    onTouchMove={[Function]}
                    onTouchStart={[Function]}
                    tabIndex={0}
                    type="button"
                  >
                    <span
                      className="MuiIconButton-label"
                    >
                      <ForwardRef(PlaylistAddIcon)
                        fontSize="medium"
                      >
                        <WithStyles(ForwardRef(SvgIcon))
                          fontSize="medium"
                        >
                          <ForwardRef(SvgIcon)
                            classes={
                              Object {
                                "colorAction": "MuiSvgIcon-colorAction",
                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                "colorError": "MuiSvgIcon-colorError",
                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                "root": "MuiSvgIcon-root",
                              }
                            }
                            fontSize="medium"
                          >
                            <svg
                              aria-hidden={true}
                              className="MuiSvgIcon-root"
                              focusable="false"
                              viewBox="0 0 24 24"
                            >
                              <path
                                d="M14 10H2v2h12v-2zm0-4H2v2h12V6zm4 8v-4h-2v4h-4v2h4v4h2v-4h4v-2h-4zM2 16h8v-2H2v2z"
                              />
                            </svg>
                          </ForwardRef(SvgIcon)>
                        </WithStyles(ForwardRef(SvgIcon))>
                      </ForwardRef(PlaylistAddIcon)>
                    </span>
                    <WithStyles(memo)
                      center={true}
                    >
                      <ForwardRef(TouchRipple)
                        center={true}
                        classes={
                          Object {
                            "child": "MuiTouchRipple-child",
                            "childLeaving": "MuiTouchRipple-childLeaving",
                            "childPulsate": "MuiTouchRipple-childPulsate",
                            "ripple": "MuiTouchRipple-ripple",
                            "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                            "rippleVisible": "MuiTouchRipple-rippleVisible",
                            "root": "MuiTouchRipple-root",
                          }
                        }
                      >
                        <span
                          className="MuiTouchRipple-root"
                        >
                          <TransitionGroup
                            childFactory={[Function]}
                            component={null}
                            exit={true}
                          />
                        </span>
                      </ForwardRef(TouchRipple)>
                    </WithStyles(memo)>
                  </button>
                </ForwardRef(ButtonBase)>
              </WithStyles(ForwardRef(ButtonBase))>
            </ForwardRef(IconButton)>
          </WithStyles(ForwardRef(IconButton))>
          <span>
            Добавить список
          </span>
        </div>
      </div>
    </Memo(Lists)>
  </Connect(Component)>
</Provider>
`;

exports[`Checking whether a Task has been added 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(AddToDoItem)>
    <AddToDoItem
      addTaskAC={[Function]}
    >
      <form
        className="addToDoItem"
        onSubmit={[Function]}
      >
        <WithStyles(ForwardRef(TextField))
          autoComplete="off"
          className="addToDoItem__input"
          id="standard-basic"
          inputProps={
            Object {
              "maxLength": "40",
            }
          }
          label="Что должно быть сделано"
          onChange={[Function]}
          value=""
        >
          <ForwardRef(TextField)
            autoComplete="off"
            className="addToDoItem__input"
            classes={
              Object {
                "root": "MuiTextField-root",
              }
            }
            id="standard-basic"
            inputProps={
              Object {
                "maxLength": "40",
              }
            }
            label="Что должно быть сделано"
            onChange={[Function]}
            value=""
          >
            <WithStyles(ForwardRef(FormControl))
              className="MuiTextField-root addToDoItem__input"
              color="primary"
              disabled={false}
              error={false}
              fullWidth={false}
              required={false}
              variant="standard"
            >
              <ForwardRef(FormControl)
                className="MuiTextField-root addToDoItem__input"
                classes={
                  Object {
                    "fullWidth": "MuiFormControl-fullWidth",
                    "marginDense": "MuiFormControl-marginDense",
                    "marginNormal": "MuiFormControl-marginNormal",
                    "root": "MuiFormControl-root",
                  }
                }
                color="primary"
                disabled={false}
                error={false}
                fullWidth={false}
                required={false}
                variant="standard"
              >
                <div
                  className="MuiFormControl-root MuiTextField-root addToDoItem__input"
                >
                  <WithStyles(ForwardRef(InputLabel))
                    htmlFor="standard-basic"
                    id="standard-basic-label"
                  >
                    <ForwardRef(InputLabel)
                      classes={
                        Object {
                          "animated": "MuiInputLabel-animated",
                          "asterisk": "MuiInputLabel-asterisk",
                          "disabled": "Mui-disabled",
                          "error": "Mui-error",
                          "filled": "MuiInputLabel-filled",
                          "focused": "Mui-focused",
                          "formControl": "MuiInputLabel-formControl",
                          "marginDense": "MuiInputLabel-marginDense",
                          "outlined": "MuiInputLabel-outlined",
                          "required": "Mui-required",
                          "root": "MuiInputLabel-root",
                          "shrink": "MuiInputLabel-shrink",
                        }
                      }
                      htmlFor="standard-basic"
                      id="standard-basic-label"
                    >
                      <WithStyles(ForwardRef(FormLabel))
                        className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                        classes={
                          Object {
                            "asterisk": "MuiInputLabel-asterisk",
                            "disabled": "Mui-disabled",
                            "error": "Mui-error",
                            "focused": "Mui-focused",
                            "required": "Mui-required",
                          }
                        }
                        data-shrink={false}
                        htmlFor="standard-basic"
                        id="standard-basic-label"
                      >
                        <ForwardRef(FormLabel)
                          className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                          classes={
                            Object {
                              "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                              "colorSecondary": "MuiFormLabel-colorSecondary",
                              "disabled": "Mui-disabled Mui-disabled",
                              "error": "Mui-error Mui-error",
                              "filled": "MuiFormLabel-filled",
                              "focused": "Mui-focused Mui-focused",
                              "required": "Mui-required Mui-required",
                              "root": "MuiFormLabel-root",
                            }
                          }
                          data-shrink={false}
                          htmlFor="standard-basic"
                          id="standard-basic-label"
                        >
                          <label
                            className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                            data-shrink={false}
                            htmlFor="standard-basic"
                            id="standard-basic-label"
                          >
                            Что должно быть сделано
                          </label>
                        </ForwardRef(FormLabel)>
                      </WithStyles(ForwardRef(FormLabel))>
                    </ForwardRef(InputLabel)>
                  </WithStyles(ForwardRef(InputLabel))>
                  <WithStyles(ForwardRef(Input))
                    autoComplete="off"
                    autoFocus={false}
                    fullWidth={false}
                    id="standard-basic"
                    inputProps={
                      Object {
                        "maxLength": "40",
                      }
                    }
                    multiline={false}
                    onChange={[Function]}
                    value=""
                  >
                    <ForwardRef(Input)
                      autoComplete="off"
                      autoFocus={false}
                      classes={
                        Object {
                          "colorSecondary": "MuiInput-colorSecondary",
                          "disabled": "Mui-disabled",
                          "error": "Mui-error",
                          "focused": "Mui-focused",
                          "formControl": "MuiInput-formControl",
                          "fullWidth": "MuiInput-fullWidth",
                          "input": "MuiInput-input",
                          "inputMarginDense": "MuiInput-inputMarginDense",
                          "inputMultiline": "MuiInput-inputMultiline",
                          "inputTypeSearch": "MuiInput-inputTypeSearch",
                          "marginDense": "MuiInput-marginDense",
                          "multiline": "MuiInput-multiline",
                          "root": "MuiInput-root",
                          "underline": "MuiInput-underline",
                        }
                      }
                      fullWidth={false}
                      id="standard-basic"
                      inputProps={
                        Object {
                          "maxLength": "40",
                        }
                      }
                      multiline={false}
                      onChange={[Function]}
                      value=""
                    >
                      <WithStyles(ForwardRef(InputBase))
                        autoComplete="off"
                        autoFocus={false}
                        classes={
                          Object {
                            "colorSecondary": "MuiInput-colorSecondary",
                            "disabled": "Mui-disabled",
                            "error": "Mui-error",
                            "focused": "Mui-focused",
                            "formControl": "MuiInput-formControl",
                            "fullWidth": "MuiInput-fullWidth",
                            "input": "MuiInput-input",
                            "inputMarginDense": "MuiInput-inputMarginDense",
                            "inputMultiline": "MuiInput-inputMultiline",
                            "inputTypeSearch": "MuiInput-inputTypeSearch",
                            "marginDense": "MuiInput-marginDense",
                            "multiline": "MuiInput-multiline",
                            "root": "MuiInput-root MuiInput-underline",
                            "underline": null,
                          }
                        }
                        fullWidth={false}
                        id="standard-basic"
                        inputComponent="input"
                        inputProps={
                          Object {
                            "maxLength": "40",
                          }
                        }
                        multiline={false}
                        onChange={[Function]}
                        type="text"
                        value=""
                      >
                        <ForwardRef(InputBase)
                          autoComplete="off"
                          autoFocus={false}
                          classes={
                            Object {
                              "adornedEnd": "MuiInputBase-adornedEnd",
                              "adornedStart": "MuiInputBase-adornedStart",
                              "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                              "disabled": "Mui-disabled Mui-disabled",
                              "error": "Mui-error Mui-error",
                              "focused": "Mui-focused Mui-focused",
                              "formControl": "MuiInputBase-formControl MuiInput-formControl",
                              "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                              "input": "MuiInputBase-input MuiInput-input",
                              "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                              "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                              "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                              "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                              "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                              "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                              "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                              "multiline": "MuiInputBase-multiline MuiInput-multiline",
                              "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                            }
                          }
                          fullWidth={false}
                          id="standard-basic"
                          inputComponent="input"
                          inputProps={
                            Object {
                              "maxLength": "40",
                            }
                          }
                          multiline={false}
                          onChange={[Function]}
                          type="text"
                          value=""
                        >
                          <div
                            className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-formControl MuiInput-formControl"
                            onClick={[Function]}
                          >
                            <input
                              aria-invalid={false}
                              autoComplete="off"
                              autoFocus={false}
                              className="MuiInputBase-input MuiInput-input"
                              disabled={false}
                              id="standard-basic"
                              maxLength="40"
                              onAnimationStart={[Function]}
                              onBlur={[Function]}
                              onChange={[Function]}
                              onFocus={[Function]}
                              required={false}
                              type="text"
                              value=""
                            />
                          </div>
                        </ForwardRef(InputBase)>
                      </WithStyles(ForwardRef(InputBase))>
                    </ForwardRef(Input)>
                  </WithStyles(ForwardRef(Input))>
                </div>
              </ForwardRef(FormControl)>
            </WithStyles(ForwardRef(FormControl))>
          </ForwardRef(TextField)>
        </WithStyles(ForwardRef(TextField))>
        <WithStyles(ForwardRef(Button))
          className="addToDoItem__button"
          color="primary"
          type="submit"
          variant="contained"
        >
          <ForwardRef(Button)
            className="addToDoItem__button"
            classes={
              Object {
                "colorInherit": "MuiButton-colorInherit",
                "contained": "MuiButton-contained",
                "containedPrimary": "MuiButton-containedPrimary",
                "containedSecondary": "MuiButton-containedSecondary",
                "containedSizeLarge": "MuiButton-containedSizeLarge",
                "containedSizeSmall": "MuiButton-containedSizeSmall",
                "disableElevation": "MuiButton-disableElevation",
                "disabled": "Mui-disabled",
                "endIcon": "MuiButton-endIcon",
                "focusVisible": "Mui-focusVisible",
                "fullWidth": "MuiButton-fullWidth",
                "iconSizeLarge": "MuiButton-iconSizeLarge",
                "iconSizeMedium": "MuiButton-iconSizeMedium",
                "iconSizeSmall": "MuiButton-iconSizeSmall",
                "label": "MuiButton-label",
                "outlined": "MuiButton-outlined",
                "outlinedPrimary": "MuiButton-outlinedPrimary",
                "outlinedSecondary": "MuiButton-outlinedSecondary",
                "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                "root": "MuiButton-root",
                "sizeLarge": "MuiButton-sizeLarge",
                "sizeSmall": "MuiButton-sizeSmall",
                "startIcon": "MuiButton-startIcon",
                "text": "MuiButton-text",
                "textPrimary": "MuiButton-textPrimary",
                "textSecondary": "MuiButton-textSecondary",
                "textSizeLarge": "MuiButton-textSizeLarge",
                "textSizeSmall": "MuiButton-textSizeSmall",
              }
            }
            color="primary"
            type="submit"
            variant="contained"
          >
            <WithStyles(ForwardRef(ButtonBase))
              className="MuiButton-root MuiButton-contained addToDoItem__button MuiButton-containedPrimary"
              component="button"
              disabled={false}
              focusRipple={true}
              focusVisibleClassName="Mui-focusVisible"
              type="submit"
            >
              <ForwardRef(ButtonBase)
                className="MuiButton-root MuiButton-contained addToDoItem__button MuiButton-containedPrimary"
                classes={
                  Object {
                    "disabled": "Mui-disabled",
                    "focusVisible": "Mui-focusVisible",
                    "root": "MuiButtonBase-root",
                  }
                }
                component="button"
                disabled={false}
                focusRipple={true}
                focusVisibleClassName="Mui-focusVisible"
                type="submit"
              >
                <button
                  className="MuiButtonBase-root MuiButton-root MuiButton-contained addToDoItem__button MuiButton-containedPrimary"
                  disabled={false}
                  onBlur={[Function]}
                  onDragLeave={[Function]}
                  onFocus={[Function]}
                  onKeyDown={[Function]}
                  onKeyUp={[Function]}
                  onMouseDown={[Function]}
                  onMouseLeave={[Function]}
                  onMouseUp={[Function]}
                  onTouchEnd={[Function]}
                  onTouchMove={[Function]}
                  onTouchStart={[Function]}
                  tabIndex={0}
                  type="submit"
                >
                  <span
                    className="MuiButton-label"
                  >
                    Добавить
                  </span>
                  <WithStyles(memo)
                    center={false}
                  >
                    <ForwardRef(TouchRipple)
                      center={false}
                      classes={
                        Object {
                          "child": "MuiTouchRipple-child",
                          "childLeaving": "MuiTouchRipple-childLeaving",
                          "childPulsate": "MuiTouchRipple-childPulsate",
                          "ripple": "MuiTouchRipple-ripple",
                          "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                          "rippleVisible": "MuiTouchRipple-rippleVisible",
                          "root": "MuiTouchRipple-root",
                        }
                      }
                    >
                      <span
                        className="MuiTouchRipple-root"
                      >
                        <TransitionGroup
                          childFactory={[Function]}
                          component={null}
                          exit={true}
                        />
                      </span>
                    </ForwardRef(TouchRipple)>
                  </WithStyles(memo)>
                </button>
              </ForwardRef(ButtonBase)>
            </WithStyles(ForwardRef(ButtonBase))>
          </ForwardRef(Button)>
        </WithStyles(ForwardRef(Button))>
      </form>
    </AddToDoItem>
  </Connect(AddToDoItem)>
</Provider>
`;

exports[`Checking whether a Task has been added 2`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(AddToDoItem)>
    <AddToDoItem
      addTaskAC={[Function]}
    >
      <form
        className="addToDoItem"
        onSubmit={[Function]}
      >
        <WithStyles(ForwardRef(TextField))
          autoComplete="off"
          className="addToDoItem__input"
          id="standard-basic"
          inputProps={
            Object {
              "maxLength": "40",
            }
          }
          label="Что должно быть сделано"
          onChange={[Function]}
          value=""
        >
          <ForwardRef(TextField)
            autoComplete="off"
            className="addToDoItem__input"
            classes={
              Object {
                "root": "MuiTextField-root",
              }
            }
            id="standard-basic"
            inputProps={
              Object {
                "maxLength": "40",
              }
            }
            label="Что должно быть сделано"
            onChange={[Function]}
            value=""
          >
            <WithStyles(ForwardRef(FormControl))
              className="MuiTextField-root addToDoItem__input"
              color="primary"
              disabled={false}
              error={false}
              fullWidth={false}
              required={false}
              variant="standard"
            >
              <ForwardRef(FormControl)
                className="MuiTextField-root addToDoItem__input"
                classes={
                  Object {
                    "fullWidth": "MuiFormControl-fullWidth",
                    "marginDense": "MuiFormControl-marginDense",
                    "marginNormal": "MuiFormControl-marginNormal",
                    "root": "MuiFormControl-root",
                  }
                }
                color="primary"
                disabled={false}
                error={false}
                fullWidth={false}
                required={false}
                variant="standard"
              >
                <div
                  className="MuiFormControl-root MuiTextField-root addToDoItem__input"
                >
                  <WithStyles(ForwardRef(InputLabel))
                    htmlFor="standard-basic"
                    id="standard-basic-label"
                  >
                    <ForwardRef(InputLabel)
                      classes={
                        Object {
                          "animated": "MuiInputLabel-animated",
                          "asterisk": "MuiInputLabel-asterisk",
                          "disabled": "Mui-disabled",
                          "error": "Mui-error",
                          "filled": "MuiInputLabel-filled",
                          "focused": "Mui-focused",
                          "formControl": "MuiInputLabel-formControl",
                          "marginDense": "MuiInputLabel-marginDense",
                          "outlined": "MuiInputLabel-outlined",
                          "required": "Mui-required",
                          "root": "MuiInputLabel-root",
                          "shrink": "MuiInputLabel-shrink",
                        }
                      }
                      htmlFor="standard-basic"
                      id="standard-basic-label"
                    >
                      <WithStyles(ForwardRef(FormLabel))
                        className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                        classes={
                          Object {
                            "asterisk": "MuiInputLabel-asterisk",
                            "disabled": "Mui-disabled",
                            "error": "Mui-error",
                            "focused": "Mui-focused",
                            "required": "Mui-required",
                          }
                        }
                        data-shrink={false}
                        htmlFor="standard-basic"
                        id="standard-basic-label"
                      >
                        <ForwardRef(FormLabel)
                          className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                          classes={
                            Object {
                              "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                              "colorSecondary": "MuiFormLabel-colorSecondary",
                              "disabled": "Mui-disabled Mui-disabled",
                              "error": "Mui-error Mui-error",
                              "filled": "MuiFormLabel-filled",
                              "focused": "Mui-focused Mui-focused",
                              "required": "Mui-required Mui-required",
                              "root": "MuiFormLabel-root",
                            }
                          }
                          data-shrink={false}
                          htmlFor="standard-basic"
                          id="standard-basic-label"
                        >
                          <label
                            className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                            data-shrink={false}
                            htmlFor="standard-basic"
                            id="standard-basic-label"
                          >
                            Что должно быть сделано
                          </label>
                        </ForwardRef(FormLabel)>
                      </WithStyles(ForwardRef(FormLabel))>
                    </ForwardRef(InputLabel)>
                  </WithStyles(ForwardRef(InputLabel))>
                  <WithStyles(ForwardRef(Input))
                    autoComplete="off"
                    autoFocus={false}
                    fullWidth={false}
                    id="standard-basic"
                    inputProps={
                      Object {
                        "maxLength": "40",
                      }
                    }
                    multiline={false}
                    onChange={[Function]}
                    value=""
                  >
                    <ForwardRef(Input)
                      autoComplete="off"
                      autoFocus={false}
                      classes={
                        Object {
                          "colorSecondary": "MuiInput-colorSecondary",
                          "disabled": "Mui-disabled",
                          "error": "Mui-error",
                          "focused": "Mui-focused",
                          "formControl": "MuiInput-formControl",
                          "fullWidth": "MuiInput-fullWidth",
                          "input": "MuiInput-input",
                          "inputMarginDense": "MuiInput-inputMarginDense",
                          "inputMultiline": "MuiInput-inputMultiline",
                          "inputTypeSearch": "MuiInput-inputTypeSearch",
                          "marginDense": "MuiInput-marginDense",
                          "multiline": "MuiInput-multiline",
                          "root": "MuiInput-root",
                          "underline": "MuiInput-underline",
                        }
                      }
                      fullWidth={false}
                      id="standard-basic"
                      inputProps={
                        Object {
                          "maxLength": "40",
                        }
                      }
                      multiline={false}
                      onChange={[Function]}
                      value=""
                    >
                      <WithStyles(ForwardRef(InputBase))
                        autoComplete="off"
                        autoFocus={false}
                        classes={
                          Object {
                            "colorSecondary": "MuiInput-colorSecondary",
                            "disabled": "Mui-disabled",
                            "error": "Mui-error",
                            "focused": "Mui-focused",
                            "formControl": "MuiInput-formControl",
                            "fullWidth": "MuiInput-fullWidth",
                            "input": "MuiInput-input",
                            "inputMarginDense": "MuiInput-inputMarginDense",
                            "inputMultiline": "MuiInput-inputMultiline",
                            "inputTypeSearch": "MuiInput-inputTypeSearch",
                            "marginDense": "MuiInput-marginDense",
                            "multiline": "MuiInput-multiline",
                            "root": "MuiInput-root MuiInput-underline",
                            "underline": null,
                          }
                        }
                        fullWidth={false}
                        id="standard-basic"
                        inputComponent="input"
                        inputProps={
                          Object {
                            "maxLength": "40",
                          }
                        }
                        multiline={false}
                        onChange={[Function]}
                        type="text"
                        value=""
                      >
                        <ForwardRef(InputBase)
                          autoComplete="off"
                          autoFocus={false}
                          classes={
                            Object {
                              "adornedEnd": "MuiInputBase-adornedEnd",
                              "adornedStart": "MuiInputBase-adornedStart",
                              "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                              "disabled": "Mui-disabled Mui-disabled",
                              "error": "Mui-error Mui-error",
                              "focused": "Mui-focused Mui-focused",
                              "formControl": "MuiInputBase-formControl MuiInput-formControl",
                              "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                              "input": "MuiInputBase-input MuiInput-input",
                              "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                              "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                              "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                              "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                              "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                              "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                              "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                              "multiline": "MuiInputBase-multiline MuiInput-multiline",
                              "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                            }
                          }
                          fullWidth={false}
                          id="standard-basic"
                          inputComponent="input"
                          inputProps={
                            Object {
                              "maxLength": "40",
                            }
                          }
                          multiline={false}
                          onChange={[Function]}
                          type="text"
                          value=""
                        >
                          <div
                            className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-formControl MuiInput-formControl"
                            onClick={[Function]}
                          >
                            <input
                              aria-invalid={false}
                              autoComplete="off"
                              autoFocus={false}
                              className="MuiInputBase-input MuiInput-input"
                              disabled={false}
                              id="standard-basic"
                              maxLength="40"
                              onAnimationStart={[Function]}
                              onBlur={[Function]}
                              onChange={[Function]}
                              onFocus={[Function]}
                              required={false}
                              type="text"
                              value=""
                            />
                          </div>
                        </ForwardRef(InputBase)>
                      </WithStyles(ForwardRef(InputBase))>
                    </ForwardRef(Input)>
                  </WithStyles(ForwardRef(Input))>
                </div>
              </ForwardRef(FormControl)>
            </WithStyles(ForwardRef(FormControl))>
          </ForwardRef(TextField)>
        </WithStyles(ForwardRef(TextField))>
        <WithStyles(ForwardRef(Button))
          className="addToDoItem__button"
          color="primary"
          type="submit"
          variant="contained"
        >
          <ForwardRef(Button)
            className="addToDoItem__button"
            classes={
              Object {
                "colorInherit": "MuiButton-colorInherit",
                "contained": "MuiButton-contained",
                "containedPrimary": "MuiButton-containedPrimary",
                "containedSecondary": "MuiButton-containedSecondary",
                "containedSizeLarge": "MuiButton-containedSizeLarge",
                "containedSizeSmall": "MuiButton-containedSizeSmall",
                "disableElevation": "MuiButton-disableElevation",
                "disabled": "Mui-disabled",
                "endIcon": "MuiButton-endIcon",
                "focusVisible": "Mui-focusVisible",
                "fullWidth": "MuiButton-fullWidth",
                "iconSizeLarge": "MuiButton-iconSizeLarge",
                "iconSizeMedium": "MuiButton-iconSizeMedium",
                "iconSizeSmall": "MuiButton-iconSizeSmall",
                "label": "MuiButton-label",
                "outlined": "MuiButton-outlined",
                "outlinedPrimary": "MuiButton-outlinedPrimary",
                "outlinedSecondary": "MuiButton-outlinedSecondary",
                "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                "root": "MuiButton-root",
                "sizeLarge": "MuiButton-sizeLarge",
                "sizeSmall": "MuiButton-sizeSmall",
                "startIcon": "MuiButton-startIcon",
                "text": "MuiButton-text",
                "textPrimary": "MuiButton-textPrimary",
                "textSecondary": "MuiButton-textSecondary",
                "textSizeLarge": "MuiButton-textSizeLarge",
                "textSizeSmall": "MuiButton-textSizeSmall",
              }
            }
            color="primary"
            type="submit"
            variant="contained"
          >
            <WithStyles(ForwardRef(ButtonBase))
              className="MuiButton-root MuiButton-contained addToDoItem__button MuiButton-containedPrimary"
              component="button"
              disabled={false}
              focusRipple={true}
              focusVisibleClassName="Mui-focusVisible"
              type="submit"
            >
              <ForwardRef(ButtonBase)
                className="MuiButton-root MuiButton-contained addToDoItem__button MuiButton-containedPrimary"
                classes={
                  Object {
                    "disabled": "Mui-disabled",
                    "focusVisible": "Mui-focusVisible",
                    "root": "MuiButtonBase-root",
                  }
                }
                component="button"
                disabled={false}
                focusRipple={true}
                focusVisibleClassName="Mui-focusVisible"
                type="submit"
              >
                <button
                  className="MuiButtonBase-root MuiButton-root MuiButton-contained addToDoItem__button MuiButton-containedPrimary"
                  disabled={false}
                  onBlur={[Function]}
                  onDragLeave={[Function]}
                  onFocus={[Function]}
                  onKeyDown={[Function]}
                  onKeyUp={[Function]}
                  onMouseDown={[Function]}
                  onMouseLeave={[Function]}
                  onMouseUp={[Function]}
                  onTouchEnd={[Function]}
                  onTouchMove={[Function]}
                  onTouchStart={[Function]}
                  tabIndex={0}
                  type="submit"
                >
                  <span
                    className="MuiButton-label"
                  >
                    Добавить
                  </span>
                  <WithStyles(memo)
                    center={false}
                  >
                    <ForwardRef(TouchRipple)
                      center={false}
                      classes={
                        Object {
                          "child": "MuiTouchRipple-child",
                          "childLeaving": "MuiTouchRipple-childLeaving",
                          "childPulsate": "MuiTouchRipple-childPulsate",
                          "ripple": "MuiTouchRipple-ripple",
                          "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                          "rippleVisible": "MuiTouchRipple-rippleVisible",
                          "root": "MuiTouchRipple-root",
                        }
                      }
                    >
                      <span
                        className="MuiTouchRipple-root"
                      >
                        <TransitionGroup
                          childFactory={[Function]}
                          component={null}
                          exit={true}
                        />
                      </span>
                    </ForwardRef(TouchRipple)>
                  </WithStyles(memo)>
                </button>
              </ForwardRef(ButtonBase)>
            </WithStyles(ForwardRef(ButtonBase))>
          </ForwardRef(Button)>
        </WithStyles(ForwardRef(Button))>
      </form>
    </AddToDoItem>
  </Connect(AddToDoItem)>
</Provider>
`;

exports[`Checking whether a Task has been added 3`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(AddToDoItem)>
    <AddToDoItem
      addTaskAC={[Function]}
    >
      <form
        className="addToDoItem"
        onSubmit={[Function]}
      >
        <WithStyles(ForwardRef(TextField))
          autoComplete="off"
          className="addToDoItem__input"
          id="standard-basic"
          inputProps={
            Object {
              "maxLength": "40",
            }
          }
          label="Что должно быть сделано"
          onChange={[Function]}
          value=""
        >
          <ForwardRef(TextField)
            autoComplete="off"
            className="addToDoItem__input"
            classes={
              Object {
                "root": "MuiTextField-root",
              }
            }
            id="standard-basic"
            inputProps={
              Object {
                "maxLength": "40",
              }
            }
            label="Что должно быть сделано"
            onChange={[Function]}
            value=""
          >
            <WithStyles(ForwardRef(FormControl))
              className="MuiTextField-root addToDoItem__input"
              color="primary"
              disabled={false}
              error={false}
              fullWidth={false}
              required={false}
              variant="standard"
            >
              <ForwardRef(FormControl)
                className="MuiTextField-root addToDoItem__input"
                classes={
                  Object {
                    "fullWidth": "MuiFormControl-fullWidth",
                    "marginDense": "MuiFormControl-marginDense",
                    "marginNormal": "MuiFormControl-marginNormal",
                    "root": "MuiFormControl-root",
                  }
                }
                color="primary"
                disabled={false}
                error={false}
                fullWidth={false}
                required={false}
                variant="standard"
              >
                <div
                  className="MuiFormControl-root MuiTextField-root addToDoItem__input"
                >
                  <WithStyles(ForwardRef(InputLabel))
                    htmlFor="standard-basic"
                    id="standard-basic-label"
                  >
                    <ForwardRef(InputLabel)
                      classes={
                        Object {
                          "animated": "MuiInputLabel-animated",
                          "asterisk": "MuiInputLabel-asterisk",
                          "disabled": "Mui-disabled",
                          "error": "Mui-error",
                          "filled": "MuiInputLabel-filled",
                          "focused": "Mui-focused",
                          "formControl": "MuiInputLabel-formControl",
                          "marginDense": "MuiInputLabel-marginDense",
                          "outlined": "MuiInputLabel-outlined",
                          "required": "Mui-required",
                          "root": "MuiInputLabel-root",
                          "shrink": "MuiInputLabel-shrink",
                        }
                      }
                      htmlFor="standard-basic"
                      id="standard-basic-label"
                    >
                      <WithStyles(ForwardRef(FormLabel))
                        className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                        classes={
                          Object {
                            "asterisk": "MuiInputLabel-asterisk",
                            "disabled": "Mui-disabled",
                            "error": "Mui-error",
                            "focused": "Mui-focused",
                            "required": "Mui-required",
                          }
                        }
                        data-shrink={false}
                        htmlFor="standard-basic"
                        id="standard-basic-label"
                      >
                        <ForwardRef(FormLabel)
                          className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                          classes={
                            Object {
                              "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                              "colorSecondary": "MuiFormLabel-colorSecondary",
                              "disabled": "Mui-disabled Mui-disabled",
                              "error": "Mui-error Mui-error",
                              "filled": "MuiFormLabel-filled",
                              "focused": "Mui-focused Mui-focused",
                              "required": "Mui-required Mui-required",
                              "root": "MuiFormLabel-root",
                            }
                          }
                          data-shrink={false}
                          htmlFor="standard-basic"
                          id="standard-basic-label"
                        >
                          <label
                            className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                            data-shrink={false}
                            htmlFor="standard-basic"
                            id="standard-basic-label"
                          >
                            Что должно быть сделано
                          </label>
                        </ForwardRef(FormLabel)>
                      </WithStyles(ForwardRef(FormLabel))>
                    </ForwardRef(InputLabel)>
                  </WithStyles(ForwardRef(InputLabel))>
                  <WithStyles(ForwardRef(Input))
                    autoComplete="off"
                    autoFocus={false}
                    fullWidth={false}
                    id="standard-basic"
                    inputProps={
                      Object {
                        "maxLength": "40",
                      }
                    }
                    multiline={false}
                    onChange={[Function]}
                    value=""
                  >
                    <ForwardRef(Input)
                      autoComplete="off"
                      autoFocus={false}
                      classes={
                        Object {
                          "colorSecondary": "MuiInput-colorSecondary",
                          "disabled": "Mui-disabled",
                          "error": "Mui-error",
                          "focused": "Mui-focused",
                          "formControl": "MuiInput-formControl",
                          "fullWidth": "MuiInput-fullWidth",
                          "input": "MuiInput-input",
                          "inputMarginDense": "MuiInput-inputMarginDense",
                          "inputMultiline": "MuiInput-inputMultiline",
                          "inputTypeSearch": "MuiInput-inputTypeSearch",
                          "marginDense": "MuiInput-marginDense",
                          "multiline": "MuiInput-multiline",
                          "root": "MuiInput-root",
                          "underline": "MuiInput-underline",
                        }
                      }
                      fullWidth={false}
                      id="standard-basic"
                      inputProps={
                        Object {
                          "maxLength": "40",
                        }
                      }
                      multiline={false}
                      onChange={[Function]}
                      value=""
                    >
                      <WithStyles(ForwardRef(InputBase))
                        autoComplete="off"
                        autoFocus={false}
                        classes={
                          Object {
                            "colorSecondary": "MuiInput-colorSecondary",
                            "disabled": "Mui-disabled",
                            "error": "Mui-error",
                            "focused": "Mui-focused",
                            "formControl": "MuiInput-formControl",
                            "fullWidth": "MuiInput-fullWidth",
                            "input": "MuiInput-input",
                            "inputMarginDense": "MuiInput-inputMarginDense",
                            "inputMultiline": "MuiInput-inputMultiline",
                            "inputTypeSearch": "MuiInput-inputTypeSearch",
                            "marginDense": "MuiInput-marginDense",
                            "multiline": "MuiInput-multiline",
                            "root": "MuiInput-root MuiInput-underline",
                            "underline": null,
                          }
                        }
                        fullWidth={false}
                        id="standard-basic"
                        inputComponent="input"
                        inputProps={
                          Object {
                            "maxLength": "40",
                          }
                        }
                        multiline={false}
                        onChange={[Function]}
                        type="text"
                        value=""
                      >
                        <ForwardRef(InputBase)
                          autoComplete="off"
                          autoFocus={false}
                          classes={
                            Object {
                              "adornedEnd": "MuiInputBase-adornedEnd",
                              "adornedStart": "MuiInputBase-adornedStart",
                              "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                              "disabled": "Mui-disabled Mui-disabled",
                              "error": "Mui-error Mui-error",
                              "focused": "Mui-focused Mui-focused",
                              "formControl": "MuiInputBase-formControl MuiInput-formControl",
                              "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                              "input": "MuiInputBase-input MuiInput-input",
                              "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                              "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                              "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                              "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                              "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                              "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                              "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                              "multiline": "MuiInputBase-multiline MuiInput-multiline",
                              "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                            }
                          }
                          fullWidth={false}
                          id="standard-basic"
                          inputComponent="input"
                          inputProps={
                            Object {
                              "maxLength": "40",
                            }
                          }
                          multiline={false}
                          onChange={[Function]}
                          type="text"
                          value=""
                        >
                          <div
                            className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-formControl MuiInput-formControl"
                            onClick={[Function]}
                          >
                            <input
                              aria-invalid={false}
                              autoComplete="off"
                              autoFocus={false}
                              className="MuiInputBase-input MuiInput-input"
                              disabled={false}
                              id="standard-basic"
                              maxLength="40"
                              onAnimationStart={[Function]}
                              onBlur={[Function]}
                              onChange={[Function]}
                              onFocus={[Function]}
                              required={false}
                              type="text"
                              value=""
                            />
                          </div>
                        </ForwardRef(InputBase)>
                      </WithStyles(ForwardRef(InputBase))>
                    </ForwardRef(Input)>
                  </WithStyles(ForwardRef(Input))>
                </div>
              </ForwardRef(FormControl)>
            </WithStyles(ForwardRef(FormControl))>
          </ForwardRef(TextField)>
        </WithStyles(ForwardRef(TextField))>
        <WithStyles(ForwardRef(Button))
          className="addToDoItem__button"
          color="primary"
          type="submit"
          variant="contained"
        >
          <ForwardRef(Button)
            className="addToDoItem__button"
            classes={
              Object {
                "colorInherit": "MuiButton-colorInherit",
                "contained": "MuiButton-contained",
                "containedPrimary": "MuiButton-containedPrimary",
                "containedSecondary": "MuiButton-containedSecondary",
                "containedSizeLarge": "MuiButton-containedSizeLarge",
                "containedSizeSmall": "MuiButton-containedSizeSmall",
                "disableElevation": "MuiButton-disableElevation",
                "disabled": "Mui-disabled",
                "endIcon": "MuiButton-endIcon",
                "focusVisible": "Mui-focusVisible",
                "fullWidth": "MuiButton-fullWidth",
                "iconSizeLarge": "MuiButton-iconSizeLarge",
                "iconSizeMedium": "MuiButton-iconSizeMedium",
                "iconSizeSmall": "MuiButton-iconSizeSmall",
                "label": "MuiButton-label",
                "outlined": "MuiButton-outlined",
                "outlinedPrimary": "MuiButton-outlinedPrimary",
                "outlinedSecondary": "MuiButton-outlinedSecondary",
                "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                "root": "MuiButton-root",
                "sizeLarge": "MuiButton-sizeLarge",
                "sizeSmall": "MuiButton-sizeSmall",
                "startIcon": "MuiButton-startIcon",
                "text": "MuiButton-text",
                "textPrimary": "MuiButton-textPrimary",
                "textSecondary": "MuiButton-textSecondary",
                "textSizeLarge": "MuiButton-textSizeLarge",
                "textSizeSmall": "MuiButton-textSizeSmall",
              }
            }
            color="primary"
            type="submit"
            variant="contained"
          >
            <WithStyles(ForwardRef(ButtonBase))
              className="MuiButton-root MuiButton-contained addToDoItem__button MuiButton-containedPrimary"
              component="button"
              disabled={false}
              focusRipple={true}
              focusVisibleClassName="Mui-focusVisible"
              type="submit"
            >
              <ForwardRef(ButtonBase)
                className="MuiButton-root MuiButton-contained addToDoItem__button MuiButton-containedPrimary"
                classes={
                  Object {
                    "disabled": "Mui-disabled",
                    "focusVisible": "Mui-focusVisible",
                    "root": "MuiButtonBase-root",
                  }
                }
                component="button"
                disabled={false}
                focusRipple={true}
                focusVisibleClassName="Mui-focusVisible"
                type="submit"
              >
                <button
                  className="MuiButtonBase-root MuiButton-root MuiButton-contained addToDoItem__button MuiButton-containedPrimary"
                  disabled={false}
                  onBlur={[Function]}
                  onDragLeave={[Function]}
                  onFocus={[Function]}
                  onKeyDown={[Function]}
                  onKeyUp={[Function]}
                  onMouseDown={[Function]}
                  onMouseLeave={[Function]}
                  onMouseUp={[Function]}
                  onTouchEnd={[Function]}
                  onTouchMove={[Function]}
                  onTouchStart={[Function]}
                  tabIndex={0}
                  type="submit"
                >
                  <span
                    className="MuiButton-label"
                  >
                    Добавить
                  </span>
                  <WithStyles(memo)
                    center={false}
                  >
                    <ForwardRef(TouchRipple)
                      center={false}
                      classes={
                        Object {
                          "child": "MuiTouchRipple-child",
                          "childLeaving": "MuiTouchRipple-childLeaving",
                          "childPulsate": "MuiTouchRipple-childPulsate",
                          "ripple": "MuiTouchRipple-ripple",
                          "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                          "rippleVisible": "MuiTouchRipple-rippleVisible",
                          "root": "MuiTouchRipple-root",
                        }
                      }
                    >
                      <span
                        className="MuiTouchRipple-root"
                      >
                        <TransitionGroup
                          childFactory={[Function]}
                          component={null}
                          exit={true}
                        />
                      </span>
                    </ForwardRef(TouchRipple)>
                  </WithStyles(memo)>
                </button>
              </ForwardRef(ButtonBase)>
            </WithStyles(ForwardRef(ButtonBase))>
          </ForwardRef(Button)>
        </WithStyles(ForwardRef(Button))>
      </form>
    </AddToDoItem>
  </Connect(AddToDoItem)>
</Provider>
`;
